#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\use_default_options true
\begin_modules
todonotes
theorems-ams-bytype
theorems-ams-extended-bytype
theorems-sec-bytype
\end_modules
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\branch TA
\selected 0
\filename_suffix 1
\color #f2e6fa
\end_branch
\branch solution
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Discrete Optimisation with Julia: Exercises Book
\begin_inset Newline newline
\end_inset


\begin_inset Branch solution
inverted 0
status open

\begin_layout Standard
With solutions
\end_layout

\end_inset


\begin_inset Branch TA
inverted 0
status open

\begin_layout Standard
With complete solutions
\end_layout

\end_inset


\end_layout

\begin_layout Author
Thibaut Cuvelier
\end_layout

\begin_layout Section*
Version history
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="23" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top" width="8cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Version number
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Modifications
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19 September 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Julia tutorial (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Julia"

\end_inset

) and basic modelling exercises (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Warm-up"

\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26 September 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Advanced modelling exercises (Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Boolean-algebra"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Thresholds"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-More"

\end_inset

).
 Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Warm-up-Unit-commitment"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 October 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Branch-and-bound exercises (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Branch-and-bound-algorithm"

\end_inset

).
 Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Warm-up-Knapsack"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 October 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typo in exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Thresholds-Semicontinuous-variable"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 October 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Thresholds-Piecewise-linear-function"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Branch-and-bound-Implementation-Pruning"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Branch-and-bound-Implementation-Exploration-strategies"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18 October 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Formulation comparison (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Formulation-comparison"

\end_inset

).
 Structured the book in three parts.
 Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-TSP"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 November 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Constraint programming exercises (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Constraint-programming"

\end_inset

).
 Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Trucks"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 November 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cutting planes and valid inequalities (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Cuts-and-valid"

\end_inset

).
 Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Tennis"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 December 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flow problems (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Flow-problems"

\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 December 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dynamic programming (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Dynamic-programming"

\end_inset

).
 Correct image for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-maximum-flows-Shortest-augmenting-path"

\end_inset

.
 Added Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Flows-Solve-minimum-cut"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21 December 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Exams"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Schmurf-game"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Flash-drives"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Branch-and-bound-Behaviour-Tree-interpretation-1"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cuts-Supplementary-Set-3"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cuts-Supplementary-Set-4"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cuts-Supplementary-Set-5"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cuts-Supplementary-Set-6"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Lot-sizing-2"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-minimum-cut-Max-flow-2"

\end_inset

 from past exams; cross-linking between version history, exercises per session,
 and the exercises themselves
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26 December 2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-Prize-collection-fixed-length"

\end_inset

; more cross-linking
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 January 2017
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typo in exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-minimum-cut-Max-flow-1"

\end_inset

; restructured Chapters 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Branch-and-bound-algorithm"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Dynamic-programming"

\end_inset

 (the list of exercises per session has the updated numbers); added exercises
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flow-problems-Modelling-Lot-sizing"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flow-problems-Modelling-Character-design"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24 April 2017
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lagrangian duality (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Lagrangian-duality"

\end_inset

); matching and assignment (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Matching-and-assignment"

\end_inset

); added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Scout-staffs"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Formulation-comparison-General-problems-Lot-sizing"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-feasible-flows-Transformation-2"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Branch-and-bound-Behaviour-Tree-interpretation-2"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28 June 2017
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description of graph notations (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Graph"

\end_inset

).
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Julia"

\end_inset

 is updated for Julia 0.6.
 Solutions for many exercises.
 Added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Knapsack-Advanced"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Knapsack-Duality"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Knapsack-Dual"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Knapsack-Dual"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 July 2017
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-Graph-colouring"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 April 2019
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reworked exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Boolean-algebra"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-Graph-colouring"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Remove ULiège specificities
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 April 2019
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update the Julia tutorial to 1.0+, JuMP to 0.19+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.12.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 April 2019
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reworked exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Warm-up"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Thresholds"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-More"
plural "false"
caps "false"
noprefix "false"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-feasible-flows-Transformation-1"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 May 2022
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flow-problems-Modelling-Warehouse-cart"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-Operation-scheduling"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Update JuMP to 1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.13.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 October 2022
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercises 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-Network-design"
plural "false"
caps "false"
noprefix "false"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Puzzles-N-queens"
plural "false"
caps "false"
noprefix "false"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Puzzles-Knight-covering"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.13.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 November 2022
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Added exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-CPU-scheduling"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*
Typographical conventions
\end_layout

\begin_layout Standard
Depending on the size of the statement, exercises are either indicated with
 the 
\series bold
Exercise
\series default
 prefix, or with a complete section.
 The 
\series bold
Variants
\series default
 subsections indicate a series of supplementary exercises that share the
 same base as the main exercise.
 
\end_layout

\begin_layout Standard
Within a category, the most difficult exercises are indicated with a star
 *.
 
\end_layout

\begin_layout Chapter
Julia 
\begin_inset CommandInset label
LatexCommand label
name "chap:Julia"

\end_inset


\end_layout

\begin_layout Standard
Julia is a programming language that has the same principles as MATLAB:
 it is built for scientific purposes, i.e.
 writing mathematical operations should be easy.
 Its design goals also include dynamic, 
\begin_inset Quotes eld
\end_inset

modern
\begin_inset Quotes erd
\end_inset

 features — such a dynamic typing system (albeit it is possible to impose
 static types), closures, and macros — and extensibility — mathematical
 modelling is supported through an integrated domain-specific language.
 
\end_layout

\begin_layout Standard
Julia is often compared to MATLAB: their syntax is similar.
 However, Julia is much faster, even though it does not need compilation.
 Also, the interpreter is completely free and open-source (it is MIT-licensed).
 
\end_layout

\begin_layout Standard
Its main disadvantage is that the language and its interpreter are not as
 mature as other projects; however, Julia has reached a stable version,
 with a well-defined and stable syntax.
 It was created in 2012.
 Also, Julia core developers tend to keep the base functionalities (i.e.
 without external packages) to a minimum: for example, there is no built-in
 plotting facility, the user must install some packages on the side; as
 a consequence, finding the documentation can be harder than with MATLAB.
 
\end_layout

\begin_layout Standard
Useful links: 
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Julia website"
target "http://julialang.org/"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Julia documentation"
target "https://docs.julialang.org/en/latest/"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Plots.jl website and documentation"
target "http://www.juliaplots.org"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "JuliaOpt website"
target "http://www.juliaopt.org/"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "JuMP documentation"
target "http://www.juliaopt.org/JuMP.jl/latest/"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "a tutorial"
target "http://www.montefiore.ulg.ac.be/~tcuvelier/files/math0462-2016/R1_julia.pdf"
literal "false"

\end_inset

 (required reading)
\end_layout

\begin_layout Section
Basic syntax and linear algebra
\end_layout

\begin_layout Subsection
Matrix creation and reading
\end_layout

\begin_layout Exercise
Create a variable 
\family typewriter
a
\family default
 containing the following matrix: 
\begin_inset Formula 
\[
\mathbf{A}=\begin{pmatrix}3 & 6 & 8\\
7 & 9 & 2\\
-1 & 0 & 4
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*

\family typewriter
a = [[3 6 8]; [7 9 2]; [-1 0 4]]
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
a = [[3 6 8]; [7 9 2]; [-1 0 4]]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Retrieve the first element of the matrix, i.e.
 
\begin_inset Formula $A_{11}.$
\end_inset

 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*

\family typewriter
a[1, 1]
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
a[1, 1]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Select the first row of 
\family typewriter
a
\family default
 (index 
\family typewriter
1
\family default
), i.e.
 the vector 
\begin_inset Formula $\begin{pmatrix}3 & 6 & 8\end{pmatrix}$
\end_inset

, and assign it to the variable 
\family typewriter
b
\family default
.
 
\end_layout

\begin_layout Enumerate
Select the last column of 
\family typewriter
a
\family default
 (index 
\family typewriter
end
\family default
), i.e.
 the vector 
\begin_inset Formula $\begin{pmatrix}8 & 2 & 4\end{pmatrix}$
\end_inset

, and assign it to the variable 
\family typewriter
c
\family default
.
\end_layout

\begin_layout Enumerate
Are both variables vectors or matrices? 
\end_layout

\begin_layout Enumerate
How can you convert the matrix 
\family typewriter
a
\family default
 as a vector with nine components? 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
b = a[1, :]
\end_layout

\begin_layout Enumerate

\family typewriter
c = a[:, end]
\family default
 or 
\family typewriter
a[:, 3]
\end_layout

\begin_layout Enumerate
Vectors.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
vec
\family default
.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
b = a[1, :]
\end_layout

\begin_layout Enumerate

\family typewriter
c = a[:, end]
\family default
 or 
\family typewriter
a[:, 3]
\end_layout

\begin_layout Enumerate
Vectors.
 
\end_layout

\begin_layout Enumerate
The function 
\family typewriter
vec
\family default
 transforms a matrix into a vector using column-major convention.
 
\family typewriter
vec(a) == [3, 7, -1, 6, 9, 0, 8, 2, 4]
\end_layout

\begin_layout Remark*
When any dimension is a singleton, it is dropped.
 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Select second element of both the first and the last row of 
\family typewriter
a
\family default
, i.e.
 the vector 
\begin_inset Formula $\begin{pmatrix}6 & 0\end{pmatrix}$
\end_inset

.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*

\family typewriter
a[[1, end], 2]
\family default
 or 
\family typewriter
a[[1, 3], 2]
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
a[[1, end], 2]
\family default
 or 
\family typewriter
a[[1, 3], 2]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create a vector of integers starting at 6 and ending at 52.
 
\end_layout

\begin_layout Enumerate
Do the same with a step of 12.
 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
collect
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
collect(6:52)
\end_layout

\begin_layout Enumerate

\family typewriter
collect(6:12:52)
\end_layout

\begin_layout Remark*
Still iterable without the 
\family typewriter
collect
\family default
, i.e.
 can be used in 
\family typewriter
for
\family default
 loops or for array indexing.
 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Create a vector containing three ones and another one containing three zeroes.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the functions 
\family typewriter
ones
\family default
 and 
\family typewriter
zeros
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
ones(3); zeros(3)
\end_layout

\begin_layout Remark*
There is only one argument to these functions (unlike MATLAB).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Create a 
\begin_inset Formula $3\times3$
\end_inset

 matrix of ones, a 
\begin_inset Formula $3\times3$
\end_inset

 matrix of zeroes, a 
\begin_inset Formula $3\times3$
\end_inset

 identity matrix.
 
\end_layout

\begin_layout Exercise

\series bold
Hint.

\series default
 The 
\family typewriter
LinearAlgebra
\family default
 standard package has features to create specific matrices.
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the functions 
\family typewriter
ones
\family default
, 
\family typewriter
zeros
\family default
, and 
\family typewriter
LinearAlgebra.I
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
ones(3, 3); zeros(3, 3)
\end_layout

\begin_layout Solution*
For the identity matrix: 
\family typewriter
using LinearAlgebra; Matrix{Float64}(I, 3, 3)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Create a vector of 50 equally-spaced values between 6 and 52.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
range
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
collect(range(6, 52, length=50))
\end_layout

\begin_deeper
\begin_layout Remark*
Still iterable without the 
\family typewriter
collect
\family default
, i.e.
 can be used in 
\family typewriter
for
\family default
 loops or for array indexing.
 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsection
Matrix operations
\end_layout

\begin_layout Exercise
Compute the dot product between 
\family typewriter
b
\family default
 and 
\family typewriter
c
\family default
.
 
\end_layout

\begin_layout Exercise

\series bold
Hint.

\series default
 An aptly named function is available in the standard package 
\family typewriter
LinearAlgebra
\family default
.
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
dot
\family default
 to get 68.
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
dot(b, c)
\family default
 gives 
\family typewriter
68
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Compute the sum of 
\family typewriter
b
\family default
 and 
\family typewriter
c
\family default
.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*

\family typewriter
[11, 8, 12]
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
b + c
\family default
 gives 
\family typewriter
[11, 8, 12]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Compute the product of 
\family typewriter
a
\family default
 with itself.
 
\end_layout

\begin_layout Enumerate
Compute the square of each element in 
\family typewriter
a
\family default
.
 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the matrix operators 
\family typewriter
*
\family default
 and 
\family typewriter
^
\family default
, and also their element-wise versions 
\family typewriter
.*
\family default
 and 
\family typewriter
.^
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
a * a
\family default
 and 
\family typewriter
a ^ 2
\family default
 give 
\family typewriter
[[43 72 68]; [82 123 82]; [-7 -6 8]]
\end_layout

\begin_layout Enumerate

\family typewriter
a .* a
\family default
 and 
\family typewriter
a .^ 2
\family default
 give 
\family typewriter
[[9 36 64]; [49 81 4]; [1 0 16]]
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Compute the transpose of 
\family typewriter
a
\family default
 with the 
\family typewriter
'
\family default
 postfix operator.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the 
\family typewriter
'
\family default
 postfix operator.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
a'
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Compute the size of 
\family typewriter
a
\family default
 as a tuple.
 
\end_layout

\begin_layout Enumerate
Compute the length of 
\family typewriter
a
\family default
 in each dimension with two function calls (and no tuple indexing).
 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
size
\family default
.
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
size(a)
\family default
 gives 
\family typewriter
(3,3)
\end_layout

\begin_layout Enumerate

\family typewriter
size(a, 1)
\family default
 and 
\family typewriter
size(a, 2)
\family default
 give 
\family typewriter
3
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Compute a matrix of the same size as 
\family typewriter
a
\family default
 that indicates whether the corresponding element in 
\family typewriter
a
\family default
 is negative or zero.
 
\end_layout

\begin_layout Enumerate
Use this to find the position of the negative values of 
\family typewriter
a
\family default
.
 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the broadcast comparison operator 
\family typewriter
.<=
\family default
 and then the function 
\family typewriter
find
\family default
.
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
a .<= 0
\family default
 gives 
\family typewriter
[[false false false]; [false false false]; [true true false]]
\end_layout

\begin_layout Enumerate

\family typewriter
findall(a .<= 0)
\family default
 gives 
\family typewriter
[CartesianIndex(3, 1), CartesianIndex(3, 2)]
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Section
Flow control
\end_layout

\begin_layout Exercise

\family typewriter
n
\family default
 and 
\family typewriter
x
\family default
 being given, compute an approximation of the exponential function: 
\family typewriter

\begin_inset Formula 
\[
\exp x=\sum_{i=0}^{n}\frac{x^{i}}{i!}.
\]

\end_inset


\family default
The exponential function is already available in Julia under the name 
\family typewriter
factorial
\family default
: for example, 
\family typewriter
factorial(2)
\family default
 gives the value of 
\begin_inset Formula $2!$
\end_inset

.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Compute the sum within a 
\family typewriter
for
\family default
 loop.
 Use the 
\family typewriter
global
\family default
 keyword if you work from the shell (otherwise, the variable you will be
 updating in the loop would not be the same as the one you initialised before
 it).
 You should use an accumulator and the operator 
\family typewriter
+=
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

n = 20
\end_layout

\begin_layout Plain Layout

x = 2.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

exp_x = 0.
\end_layout

\begin_layout Plain Layout

for i in 0:n
\end_layout

\begin_layout Plain Layout

  global exp_x
\end_layout

\begin_layout Plain Layout

  exp_x += (x ^ i) / factorial(i)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Write 
\emph on
a function
\emph default
 that computes the same approximation of the exponential function, 
\family typewriter
n
\family default
 and 
\family typewriter
x
\family default
 being arguments to this function; do not use the built-in 
\family typewriter
factorial
\family default
 function, but write your own using recursion.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A function is defined with the keyword 
\family typewriter
function
\family default
.
 
\family typewriter
if
\family default
 denotes a condition.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

function fact_slow(n)
\end_layout

\begin_layout Plain Layout

  if n <= 1
\end_layout

\begin_layout Plain Layout

    return 1
\end_layout

\begin_layout Plain Layout

  else
\end_layout

\begin_layout Plain Layout

    return n * fact_slow(n - 1)
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

function exp_slow(x, n)
\end_layout

\begin_layout Plain Layout

  exp_x = 0.
\end_layout

\begin_layout Plain Layout

  for i in 0:n
\end_layout

\begin_layout Plain Layout

    exp_x += (x ^ i) / fact_slow(i)
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\begin_layout Plain Layout

  return exp_x
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Write 
\emph on
a function
\emph default
 that computes the same approximation of the exponential function, 
\family typewriter
n
\family default
 and 
\family typewriter
x
\family default
 being arguments to this function; do not use the built-in 
\family typewriter
factorial
\family default
 function, but write your own using recursion 
\emph on
without
\emph default
 the 
\family typewriter
function
\family default
 keyword (you can use the ternary operator to replace the 
\family typewriter
if
\family default
 condition).
 
\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

fact_slow(n) = (n <= 1) ? 1 : n * fact_slow(n - 1)
\end_layout

\begin_layout Plain Layout

function exp_slow(x, n)
\end_layout

\begin_layout Plain Layout

  exp_x = 0.
\end_layout

\begin_layout Plain Layout

  for i in 0:n
\end_layout

\begin_layout Plain Layout

    exp_x += (x ^ i) / fact_slow(i)
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\begin_layout Plain Layout

  return exp_x
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Plots with Plots.jl
\end_layout

\begin_layout Standard
Julia has no built-in plotting facility.
 Before making plots, you must thus install Plots.jl and a rendering engine
 (such as GR).
 To this end, type 
\family typewriter
]
\family default
 to access the package installation facilities and use the following command
 (packages are separated by spaces): 
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

add Plots GR
\end_layout

\end_inset


\family default
Then, use back-space to return to the normal shell.
\end_layout

\begin_layout Standard
Once installation is performed, before attempting to plot, import the Plots.jl
 package with 
\family typewriter
using Plots
\family default
.
 
\end_layout

\begin_layout Exercise
Plot the following functions separately, using the shortest syntax possible,
 between 0 and 2 with an appropriate step: 
\begin_inset Formula 
\[
f_{1}\!\left(x\right)=\sin x,\qquad f_{2}\!\left(x\right)=\sin x^{2}.
\]

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
plot
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
plot(sin, 0:.1:2)
\end_layout

\begin_layout Enumerate

\family typewriter
plot(0:.1:2, sin((0:.1:2).^2))
\family default
 (or 
\family typewriter
plot(x -> sin(x^2), 0:.1:2)
\family default
 with lambdas)
\end_layout

\end_deeper
\begin_layout Solution*
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 1_plot_sin.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result of 
\family typewriter
plot(sin, 0:.1:2)
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 1_plot_sin2.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result of 
\family typewriter
plot(x -> sin(x^2), 0:.1:2)
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
Compare the two previous functions on the same graph.
 
\end_layout

\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the function 
\family typewriter
plot!
\family default
 for the second plot instead of 
\family typewriter
plot
\family default
.
 
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Solution*

\family typewriter
plot(sin, 0:.1:2); plot!(x -> sin(x^2), 0:.1:2)
\end_layout

\begin_layout Solution*
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 1_plot_sin_sin2.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result of 
\family typewriter
plot(sin, 0:.1:2); plot!(x -> sin(x^2), 0:.1:2)
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Mathematical optimisation models with JuMP
\end_layout

\begin_layout Standard
Just like plotting, mathematical optimisation is not included in Julia.
 You must thus install a modelling layer (JuMP) and a solver (like Cbc).
 To this end, type 
\family typewriter
]
\family default
 to access the package installation facilities and use the following command
 (packages are separated by spaces):
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

add JuMP Cbc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then, before attempting to solve optimisation programs, import the JuMP
 package with a solver with 
\family typewriter
using JuMP; using Cbc; using LinearAlgebra
\family default
.
 
\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement the following model with JuMP: 
\begin_inset Formula 
\[
\begin{array}{cc}
\min & x+y\\
\text{s.t.} & x\geq8.2\,y,\\
 & y\geq2\\
 & x\in\mathbb{R},\\
 & y\in\mathbb{R}^{+}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Solve it.
 
\end_layout

\begin_layout Enumerate
What is the optimal objective function? 
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $x$
\end_inset

? 
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $x+4\,y$
\end_inset

? 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create a model with 
\family typewriter
Model
\family default
.
 Create a variable with 
\family typewriter
@variable
\family default
.
 Create a constraint with 
\family typewriter
@constraint
\family default
.
 Set the objective with 
\family typewriter
@objective
\family default
.
 
\begin_inset Newline newline
\end_inset

You must provide a solver 
\family typewriter
Cbc.Optimizer
\family default
 when calling 
\family typewriter
Model
\family default
.
 
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
optimize!
\family default
.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
objective_value
\family default
.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
value
\family default
 with a variable.
 
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
value
\family default
 with a more complex expression.
 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m = Model(Cbc.Optimizer)
\end_layout

\begin_layout Plain Layout

@variable(m, x)
\end_layout

\begin_layout Plain Layout

@variable(m, y >= 2)
\end_layout

\begin_layout Plain Layout

@constraint(m, x >= 8.2 * y)
\end_layout

\begin_layout Plain Layout

@objective(m, Min, x + y)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
optimize!(m)
\end_layout

\begin_layout Enumerate

\family typewriter
objective_value(m)
\family default
 gives 18.4
\end_layout

\begin_layout Enumerate

\family typewriter
value(x)
\family default
 gives 16.4
\end_layout

\begin_layout Enumerate

\family typewriter
value(x + 4 * y)
\family default
 gives 24.4
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement the following model with JuMP (
\begin_inset Formula $\mathbb{N}$
\end_inset

 denotes the set of natural numbers, i.e.
 nonnegative integers; 
\begin_inset Formula $\mathbb{Z}$
\end_inset

 denotes the set of all integers, be they positive, negative, or zero):
 
\begin_inset Formula 
\[
\begin{array}{cc}
\min & x+y\\
\text{s.t.} & x\geq8.2\,y,\\
 & y\geq2\\
 & x\in\mathbb{Z},\\
 & y\in\mathbb{N}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Solve it.
 
\end_layout

\begin_layout Enumerate
What is the optimal objective function? Why is it different from the one
 of the previous exercise? 
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $x$
\end_inset

? Why is it different from the one of the previous exercise? 
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $x+4\,y$
\end_inset

? Why is it different from the one of the previous exercise? 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m = Model(Cbc.Optimizer)
\end_layout

\begin_layout Plain Layout

@variable(m, x, Int)
\end_layout

\begin_layout Plain Layout

@variable(m, y >= 2, Int)
\end_layout

\begin_layout Plain Layout

@constraint(m, x >= 8.2 * y)
\end_layout

\begin_layout Plain Layout

@objective(m, Min, x + y)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
optimize!(m)
\end_layout

\begin_layout Enumerate

\family typewriter
objective_value(m)
\family default
 gives 19
\end_layout

\begin_layout Enumerate

\family typewriter
value(x)
\family default
 gives 17
\end_layout

\begin_layout Enumerate

\family typewriter
value(x + 4 * y)
\family default
 gives 25
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Implement the following model with JuMP (
\begin_inset Formula $\mathbb{B}$
\end_inset

 denotes the set 
\begin_inset Formula $\left\{ 0,1\right\} $
\end_inset

): 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{t\in\mathcal{T}}\left(c_{t}\,y_{t}+d_{t}\,x_{t}\right)\\
\text{s.t.} & x_{t}\leq50\,y_{t}, & \forall t\in\mathcal{T},\\
 & z_{1}=x_{1}-e_{1},\\
 & z_{t}=z_{t-1}+x_{t}-e_{t}, & \forall t\in\mathcal{T}\backslash\left\{ 1\right\} ,\\
 & \mathbf{x}\in\mathbb{R}_{+}^{\left|\mathcal{T}\right|},\\
 & \mathbf{y}\in\mathbb{B}^{\left|\mathcal{T}\right|},\\
 & \mathbf{z}\in\mathbb{R}_{+}^{\left|\mathcal{T}\right|}.
\end{array}
\]

\end_inset

The set 
\begin_inset Formula $\mathcal{T}$
\end_inset

 is defined as 
\begin_inset Formula $\left\{ 1,2,3,4\right\} $
\end_inset

.
 The vectors 
\begin_inset Formula $\mathbf{c}$
\end_inset

 and 
\begin_inset Formula $\mathbf{d}$
\end_inset

 contains various costs: 
\begin_inset Formula $\mathbf{c}=\begin{pmatrix}15.2 & 14.8 & 15.9 & 14.3\end{pmatrix}$
\end_inset

 and 
\begin_inset Formula $\mathbf{d}=\begin{pmatrix}0.2 & 0.2 & 0.1 & 0.6\end{pmatrix}$
\end_inset

.
 The vector 
\begin_inset Formula $\mathbf{e}$
\end_inset

 contains other constants: 
\begin_inset Formula $\begin{pmatrix}5 & 40 & 20 & 50\end{pmatrix}$
\end_inset


\end_layout

\begin_layout Enumerate
Solve it.
 
\end_layout

\begin_layout Enumerate
What is the optimal objective function?
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $\mathbf{x}$
\end_inset

, 
\begin_inset Formula $\mathbf{y}$
\end_inset

, and 
\begin_inset Formula $\mathbf{z}$
\end_inset

? 
\end_layout

\begin_layout Enumerate
What is the value of 
\begin_inset Formula $x_{1}$
\end_inset

, 
\begin_inset Formula $y_{2}$
\end_inset

, and 
\begin_inset Formula $z_{3}$
\end_inset

? 
\end_layout

\end_deeper
\begin_layout Exercise
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create a model with 
\family typewriter
Model
\family default
, 
\family typewriter
@variable
\family default
, 
\family typewriter
@constraint
\family default
, and 
\family typewriter
@objective
\family default
, as previously, using loops to create related constraints (whenever the
 constraint is defined with a 
\begin_inset Formula $\forall$
\end_inset

).
 
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
optimize!
\family default
.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
objective_value
\family default
.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
value.

\family default
 with a vector.
 The dot indicates that the operation must be broadcast on all elements
 of the array.
\end_layout

\begin_layout Enumerate
Use the function 
\family typewriter
value
\family default
 with vector elements.
 There is no need for broadcasting for scalar values.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Exercise
\begin_inset Branch TA
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

T = 4
\end_layout

\begin_layout Plain Layout

c = [15.2, 14.8, 15.9, 14.3]
\end_layout

\begin_layout Plain Layout

d = [0.2, 0.2, 0.1, 0.6]
\end_layout

\begin_layout Plain Layout

e = [5, 40, 20, 50]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

m = Model(Cbc.Optimizer)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@variable(m, x[1:T] >= 0) # Production at time step t
\end_layout

\begin_layout Plain Layout

@variable(m, y[1:T], Bin) # Whether the unit is on at time step t
\end_layout

\begin_layout Plain Layout

@variable(m, z[1:T] >= 0) # Storage at the end of time step t
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for t in 1:T
\end_layout

\begin_layout Plain Layout

  @constraint(m, x[t] <= 50 * y[t])
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

@constraint(m, z[1] == x[1] - e[1])
\end_layout

\begin_layout Plain Layout

for t in 2:T
\end_layout

\begin_layout Plain Layout

  @constraint(m, z[t] == z[t - 1] + x[t] - e[t])
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@objective(m, Min, dot(c, y) + dot(d, x))
\end_layout

\begin_layout Plain Layout

# The function dot is defined in LinearAlgebra.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
optimize!(m)
\end_layout

\begin_layout Enumerate

\family typewriter
objective_value(m)
\family default
 gives 63.9
\end_layout

\begin_layout Enumerate

\family typewriter
value.(x)
\family default
 gives 
\family typewriter
[50, 15, 50, 0]
\family default
, with some numerical leeway
\family typewriter

\begin_inset Newline newline
\end_inset

value.(y)
\family default
 gives 
\family typewriter
[1, 1, 1, 0]
\family default
, with some numerical leeway
\family typewriter

\begin_inset Newline newline
\end_inset

value.(z)
\family default
 gives 
\family typewriter
[45, 20, 50, 0]
\family default
, with some numerical leeway
\end_layout

\begin_layout Enumerate

\family typewriter
value(x[1])
\family default
 gives 50, with some numerical leeway
\family typewriter

\begin_inset Newline newline
\end_inset

value(y[2])
\family default
 gives 1, with some numerical leeway
\family typewriter

\begin_inset Newline newline
\end_inset

value(z[3])
\family default
 gives 50, with some numerical leeway
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Part
Mixed-integer programming 
\begin_inset CommandInset label
LatexCommand label
name "part:Mixed-integer-programming"

\end_inset


\end_layout

\begin_layout Chapter
Modelling 
\begin_inset CommandInset label
LatexCommand label
name "chap:Modelling"

\end_inset


\end_layout

\begin_layout Standard
Using optimisation in practice first needs a suitable representation of
 the problem, a 
\emph on
mathematical model
\emph default
.
 Once this translation of the situation at hand is performed, efficient
 numerical algorithms can be used to find the optimum decisions to take
 in a particular situation—how to plan the production in a plant, how to
 manufacture the drilling part of a printed circuit, what is the best way
 to combine assets in a portfolio, etc.
\begin_inset Newline newline
\end_inset

From a software engineering point of view, this way of solving problems
 is quite appealing: complex algorithms are written once by specialised
 persons (many optimisation solvers exist on the market), and most users
 just 
\emph on
describe
\emph default
 their problem with some specific formalism that is amenable to those solvers.
 
\end_layout

\begin_layout Standard
An optimisation model first defines an 
\emph on
objective function
\emph default
, a quantitative criterion to tell whether a given solution is good or bad
 with respect to the problem at hand (for example, minimise the total cost).
 To improve this objective function, the solver will be able to change the
 value of the
\emph on
 variables
\emph default
 (e.g., when to produce what quantity of which item).
 However, the possible values for these variables are limited by 
\emph on
constraints
\emph default
, often representing some physical limits (the total budget for a portfolio,
 the order of the holes to drill on a PCB, etc.).
 
\end_layout

\begin_layout Standard
Especially for discrete optimisation, not all optimisation variables are
 actual degrees of freedom: some of them do not correspond to actual decisions
 that can be taken, but derive from some other variables (such as a variable
 indicating whether the temperature in an oven has reached a certain threshold).
 As a consequence, variables may be divided in two groups: 
\end_layout

\begin_layout Enumerate
The actual 
\emph on
decision 
\emph default
variables, which should only be constrained by the physics of the problem
\end_layout

\begin_layout Enumerate

\emph on
Dependent
\emph default
 variables, whose value must be fixed as soon as those of the decision variables
 are
\end_layout

\begin_layout Remark*
In this course, due to the nature of the targeted solvers, all objective
 functions and constraints must be expressed 
\emph on
in a linear way
\emph default
, but the domain of some variables can be constrained to be integer: the
 problems must be 
\emph on
mixed-integer linear
\emph default
.
 In other words, the canonical form for the objective functions is 
\begin_inset Formula $\mathbf{c^{T}\,x}$
\end_inset

, where 
\begin_inset Formula $\mathbf{c}$
\end_inset

 is a vector of constants and 
\begin_inset Formula $\mathbf{x}$
\end_inset

 the vector of variables; that of constraints is 
\begin_inset Formula $\mathbf{a^{T}\,x=b}$
\end_inset

, where 
\begin_inset Formula $\mathbf{a}$
\end_inset

 and 
\begin_inset Formula $\mathbf{b}$
\end_inset

 are vectors of constants.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark*
There is 
\series bold
at most
\series default
 one objective function (like minimising the costs); in rare cases, there
 is no objective function, because there is no way to indicate when a solution
 is better than another.
 
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark*
For each exercise, you may consider to implement in with a modelling environment
 (JuMP, Convex.jl, Pyomo, ZIMPL, CVX, etc.).
\end_layout

\begin_layout Section
Warm-up 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-Warm-up"

\end_inset


\end_layout

\begin_layout Subsection
Hospital placement (discrete facility location) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Hospital-discrete-facility-location"

\end_inset


\end_layout

\begin_layout Standard
A country wants to reconsider its health system and seek for better ways
 of using the scarcer and scarcer resources available to the State.
 To this end, the government asks a consulting company where should the
 hospital be located based on the actual demand, if they could rebuild the
 complete system from scratch.
 
\end_layout

\begin_layout Standard
The demand is represented as a series of discrete points having some demand
 (for instance, one point for each city, be it large or small).
 The hospital can only be built at some points (usually corresponding to
 the large cities).
 Meeting the demand has some cost that depends on the city where the hospital
 is located (the largest part coming from ambulances, which must travel
 a long way before rescuing people; casualties due to the emergency services
 arriving too late are already considered in these costs); these costs are
 given in a matrix (one dimension corresponds to the demand points, the
 other to the potential hospital).
 Opening a hospital can only be done at a high price.
 
\end_layout

\begin_layout Standard
More precisely, hospitals can be located at three places, with the costs
 
\begin_inset Formula $\begin{pmatrix}500 & 800 & 1800\end{pmatrix}$
\end_inset

.
 The demand is modelled as six points: 
\begin_inset Formula $\begin{pmatrix}24 & 12 & 8 & 96 & 1 & 48\end{pmatrix}$
\end_inset

.
 The cost matrix of serving the demand from the three possible hospitals
 is: 
\begin_inset Formula 
\[
\begin{pmatrix}20 & 600 & 80 & 480 & 1200 & 410\\
435 & 950 & 890 & 420 & 700 & 20\\
450 & 1400 & 1400 & 20 & 800 & 420
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Standard
The government goal is to minimise their total costs (i.e.
 building and operating the hospitals).
 Model the situation as a mixed-integer linear program.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model (
\begin_inset Formula $f_{i}$
\end_inset

: cost of opening hospital 
\begin_inset Formula $i\in\mathcal{H}$
\end_inset

; 
\begin_inset Formula $v_{ij}$
\end_inset

: cost of serving point 
\begin_inset Formula $j\in\mathcal{C}$
\end_inset

 from hospital 
\begin_inset Formula $i\in\mathcal{H}$
\end_inset

; 
\begin_inset Formula $d_{j}$
\end_inset

: demand of point 
\begin_inset Formula $j\in\mathcal{C}$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{i\in\mathcal{H}}\left[f_{i}\,\mathrm{open}_{i}+\sum_{j\in\mathcal{C}}\left(v_{ij}\,\mathrm{demand}_{ij}\right)\right]\\
\text{s.t.} & \sum_{i\in\mathcal{I}}\mathrm{demand}_{ij}=d_{j} & \forall j\in\mathcal{C}\\
 & \mathrm{demand}_{ij}\leq\left(\sum_{j\in\mathcal{C}}d_{j}\right)\,\mathrm{open}_{i} & \forall i\in\mathcal{H}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{H}$
\end_inset

: the set of hospitals
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{C}$
\end_inset

: the set of points where there is some demand
\end_layout

\begin_layout Standard
Data: 
\begin_inset Formula 
\begin{align*}
f_{i} &  & \text{Cost of opening the hospital }i &  & i\in\mathcal{H}\\
v_{ij} &  & \text{Cost of serving point }j\text{ from hospital }i &  & i\in\mathcal{H},j\in\mathcal{C}\\
d_{j} &  & \text{Demand of point }j &  & j\in\mathcal{C}
\end{align*}

\end_inset

Variables (what can you tweak?), what can be changed—and thus optimised:
 
\begin_inset Formula 
\begin{align*}
\mathrm{open}_{i} &  & =1\text{ when hospital }i\text{ is built, }0\text{ otherwise} &  & \in\mathbb{B} &  & \forall i\in\mathcal{H}\\
\mathrm{demand}_{ij} &  & \text{part of the demand of point }j\text{ from hospital }i &  & \in\mathbb{R}^{+} &  & \forall i\in\mathcal{H},\forall j\in\mathcal{C}
\end{align*}

\end_inset

Objective (how can you tell a solution is better than another one?):
\begin_inset Formula 
\[
\min\sum_{i\in\mathcal{H}}\left[f_{i}\,\mathrm{open}_{i}+\sum_{j\in\mathcal{C}}\left(v_{ij}\,\mathrm{demand}_{ij}\right)\right]
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
Demand of each point met: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{H}}\mathrm{demand}_{ij}=d_{j},\qquad\forall j\in\mathcal{C}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Demand can be met only if the hospital is open: 
\begin_inset Formula 
\[
\mathrm{demand}_{ij}\leq\left(\sum_{j\in\mathcal{C}}d_{j}\right)\,\mathrm{open}_{i},\qquad\forall i\in\mathcal{H}.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Variants
\end_layout

\begin_layout Enumerate
Add a maximum capacity to each hospital (instead of having an infinite capacity:
 a hospital can only fulfil some maximum demand).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $\sum_{j\in\mathcal{C}}\mathrm{demand}_{ij}\leq c$
\end_inset

, 
\begin_inset Formula $\forall i\in\mathcal{H}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Allow to build various sizes of hospitals (small hospital, small cost, small
 demand, up to large hospital).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $\sum_{j\in\mathcal{C}}\mathrm{demand}_{ij}\leq c_{i}$
\end_inset

, 
\begin_inset Formula $\forall i\in\mathcal{H}$
\end_inset

 (a different constant 
\begin_inset Formula $c_{i}$
\end_inset

 for each hospital).
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Consider a set of hospitals already exists and already meets some demand:
 their building cost is then zero, except when they are upgraded (a small
 hospital can be extended to become a medium-sized one).
 What should you modify to account for this situation?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Add new variables per hospital: 
\begin_inset Formula $\mathrm{open}_{ic}$
\end_inset

 indicates if hospital 
\begin_inset Formula $i$
\end_inset

 is built/upgraded at capacity 
\begin_inset Formula $c$
\end_inset

.
 The corresponding costs 
\begin_inset Formula $f_{i}$
\end_inset

 must also be indexed by the capacity 
\begin_inset Formula $c$
\end_inset

.
 The most interesting part is the capacity of each hospital: the capacity
 depends on which 
\begin_inset Formula $\mathrm{open}_{ic}$
\end_inset

 is true; if all 
\begin_inset Formula $\mathrm{open}_{ic}$
\end_inset

 are false, the hospital is closed; if a subset of the
\begin_inset Formula $\mathrm{open}_{ic}$
\end_inset

 is false, the variables in the subset have no impact on capacity.
 Thus (also see Exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Boolean-algebra-Conjunction-(AND)"
plural "false"
caps "false"
noprefix "false"

\end_inset

):
\begin_inset Formula 
\[
\sum_{j\in\mathcal{C}}\mathrm{demand}_{ij}\leq c_{ic}\,\mathrm{open}_{ic}+M_{i}\,\mathrm{open}_{i},
\]

\end_inset


\begin_inset Formula 
\[
M_{i}=\max_{c}c_{ic},
\]

\end_inset


\begin_inset Formula 
\[
\mathrm{open}_{i}=\bigwedge_{c}\mathrm{open}_{ic}.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Nurse scheduling 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Nurse-scheduling"

\end_inset


\end_layout

\begin_layout Standard
A working day in a hospital is subdivided in twelve periods of two hours.
 The staff requirements change from period to period.
 A nurse works eight hours a day and is entitled to a break after four hours.
\end_layout

\begin_layout Enumerate
Determine the minimum number of nurses required to cover all requirements
 using a mixed-integer linear program.
\end_layout

\begin_layout Enumerate
If only 
\begin_inset Formula $55$
\end_inset

 nurses are available (which it is not enough for the given data), the managemen
t allows for a certain number of nurses to work for a fifth period right
 after the last one.
 Determine a schedule the minimum number of nurses working overtime.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Day 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0-2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2-4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4-6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6-8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8-10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10-12 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum nurses 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Day 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12-14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14-16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16-18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18-20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20-22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22-24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum nurses 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nurses requirements for the hospital.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_1_nurses.pdf
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A nurse working day.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model (
\begin_inset Formula $\mathrm{start}_{t}$
\end_inset

: number of nurses starting at time 
\begin_inset Formula $t$
\end_inset

; 
\begin_inset Formula $\mathrm{working}_{t}$
\end_inset

: number of nurses working at time 
\begin_inset Formula $t$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{t\in\mathcal{T}}\mathrm{start}_{t}\\
\text{s.t.} & \mathrm{working}_{t}\geq\mathrm{req}_{t} & \forall t\in\mathcal{T}\\
 & \mathrm{working}_{t}=\mathrm{start}_{t}+\mathrm{start}_{t-\mathbf{1}}+\mathrm{start}_{t-\mathbf{3}}+\mathrm{start}_{t-\mathbf{4}} & \forall t\in\mathcal{T}
\end{array}
\]

\end_inset

With over time (
\begin_inset Formula $\mathrm{extra}_{t}$
\end_inset

: number of nurses working over time at time 
\begin_inset Formula $t$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{t\in\mathcal{T}}\mathrm{extra}_{t}\\
\text{s.t.} & \mathrm{working}_{t}\geq\mathrm{req}_{t} & \forall t\in\mathcal{T}\\
 & \sum_{t\in\mathcal{T}}\mathrm{start}_{t}\leq55\\
 & \mathrm{working}_{t}=\mathrm{start}_{t}+\mathrm{start}_{t-\mathbf{1}}+\mathrm{start}_{t-\mathbf{3}}+\mathrm{start}_{t-\mathbf{4}}+\mathrm{extra}_{t-\mathbf{5}} & \forall t\in\mathcal{T}\\
 & \mathrm{extra}_{t}\leq\mathrm{start}_{t} & \forall t\in\mathcal{T}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Minimum number of nurses
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of time steps, from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $T$
\end_inset


\end_layout

\begin_layout Standard
Data: 
\begin_inset Formula 
\begin{align*}
\mathrm{req}_{t} &  & \text{Number of nurses required at period }t
\end{align*}

\end_inset

Variables (the first one to link 
\begin_inset Formula $\mathrm{req}_{t}$
\end_inset

, the other to link the nurse working day): 
\begin_inset Formula 
\begin{align*}
\mathrm{working}_{t} &  & \text{nurses working at period }t &  & \in\mathbb{Z}^{+} &  & \forall t\in\mathcal{T}\\
\mathrm{start}_{t} &  & \text{nurses starting at period }t &  & \in\mathbb{Z}^{+} &  & \forall t\in\mathcal{T}
\end{align*}

\end_inset

Objective:
\begin_inset Formula 
\[
\min\sum_{t\in\mathcal{T}}\mathrm{start}_{t}.
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
Enough nurses at each period: 
\begin_inset Formula 
\[
\mathrm{working}_{t}\geq\mathrm{req}_{t},\qquad\forall t\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
The nurses present at one period have just started, the period before, three
 before, or four before (break!): 
\begin_inset Formula 
\[
\mathrm{working}_{t}=\mathrm{start}_{t}+\mathrm{start}_{t-\mathbf{1}}+\mathrm{start}_{t-\mathbf{3}}+\mathrm{start}_{t-\mathbf{4}},\qquad\forall t\in\mathcal{T}.
\]

\end_inset

(For the implementation: if 
\begin_inset Formula $t=1$
\end_inset

, then there is no 
\begin_inset Formula $\mathrm{start}_{t-1}$
\end_inset

, truncate the expression.)
\end_layout

\begin_layout Subsubsection
Allow overtime
\end_layout

\begin_layout Standard
New variable: 
\begin_inset Formula 
\begin{align*}
\mathrm{extra}_{t} &  & \text{nurses starting at period }t\text{ and working overtime} &  & \in\mathbb{Z}^{+} &  & \forall t\in\mathcal{T}
\end{align*}

\end_inset

New objective (replaces the old one):
\begin_inset Formula 
\[
\min\sum_{t\in\mathcal{T}}\mathrm{extra}_{t}.
\]

\end_inset

Constraints (replace the previous ones): 
\end_layout

\begin_layout Itemize
Enough nurses at each period (as before): 
\begin_inset Formula 
\[
\mathrm{working}_{t}\geq\mathrm{req}_{t},\qquad\forall t\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
At most fifty five nurses are available: 
\begin_inset Formula 
\[
\sum_{t\in\mathcal{T}}\mathrm{start}_{t}\leq55.
\]

\end_inset


\end_layout

\begin_layout Itemize
Budget equation at each period must now take care of overtime: 
\begin_inset Formula 
\[
\mathrm{working}_{t}=\mathrm{start}_{t}+\mathrm{start}_{t-\mathbf{1}}+\mathrm{start}_{t-\mathbf{3}}+\mathrm{start}_{t-\mathbf{4}}+\mathrm{extra}_{t-\mathbf{5}},\qquad\forall t\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Only a subset of the nurses can work overtime: 
\begin_inset Formula 
\[
\mathrm{extra}_{t}\leq\mathrm{start}_{t},\qquad\forall t\in\mathcal{T}.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Team making 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Team-making"

\end_inset


\end_layout

\begin_layout Standard
40 people participate in a game.
 For this purpose they must be divided in five groups of eight people.
 For each pair 
\begin_inset Formula $\left(i,j\right)$
\end_inset

, a matrix has a value 
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

 if they don't know each other.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

 if they know each other a bit.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $2$
\end_inset

 if they know each other well.
\end_layout

\begin_layout Standard
The goal is to create groups so that participants know as few other people
 as possible in each group.
 Choose a plausible objective function and formulate this problem as a mixed-int
eger linear program.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model (
\begin_inset Formula $x_{ik}$
\end_inset

: if 
\begin_inset Formula $i\in\mathcal{P}$
\end_inset

 is in group 
\begin_inset Formula $k\in\mathcal{G}$
\end_inset

; 
\begin_inset Formula $y_{ij}$
\end_inset

: if 
\begin_inset Formula $i\in\mathcal{P}$
\end_inset

 is in the same group as 
\begin_inset Formula $j\in\mathcal{P}$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{i,j}a_{i,j}y_{i,j}\\
\text{s.t.} & \sum_{k\in\mathcal{G}}x_{i,k}=1 & \forall i\in\mathcal{P}\\
 & \sum_{i\in\mathcal{P}}x_{i,k}=8 & \forall k\in\mathcal{G}\\
 & y_{i,j}\geq x_{i,k}+x_{j,k}-1 & \forall i\in\mathcal{P},\forall j\in\mathcal{P},\forall k\in\mathcal{G}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{P}$
\end_inset

: the set of people
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{G}$
\end_inset

: the set of groups
\end_layout

\begin_layout Standard
Data: an affinity matrix 
\begin_inset Formula $a_{i,j}$
\end_inset

.
 Wonder whether it is symmetric.
 
\end_layout

\begin_layout Standard
Variables: one for the objective, the other is the actual output.
 
\begin_inset Formula 
\begin{align*}
x_{i,k} & =1\text{ if }i\text{ is in group }k,0\text{ otherwise} & x_{i,k}\in\mathcal{B} &  & \forall i\in\mathcal{P},\forall k\in\mathcal{G}\\
y_{i,j} & =1\text{ if }i\text{ is with }j,0\text{ otherwise} & w_{i,j}\in\mathcal{B} &  & \forall i\in\mathcal{P},\forall j\in\mathcal{P}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Objective: minimise the total 
\begin_inset Quotes eld
\end_inset

internal knowledge
\begin_inset Quotes erd
\end_inset

.
 Penalise every time 
\begin_inset Formula $i$
\end_inset

 knows 
\begin_inset Formula $j$
\end_inset

 a lot and is in the same group: 
\begin_inset Formula 
\[
\min\sum_{i,j}a_{i,j}y_{i,j}.
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
Each person must be in exactly one group: 
\begin_inset Formula 
\[
\sum_{k\in\mathcal{G}}x_{i,k}=1,\qquad\forall i\in\mathcal{P}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Each group must have eight persons exactly: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{P}}x_{i,k}=8,\qquad\forall k\in\mathcal{G}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Persons 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 are in the same group if there is a group 
\begin_inset Formula $k$
\end_inset

 such that 
\begin_inset Formula $x_{ik}\land x_{jk}$
\end_inset

; in other words: 
\begin_inset Formula $y_{i,j}=\bigvee_{k}\left(x_{i,k}\land x_{j,k}\right)$
\end_inset

.
 
\begin_inset Formula 
\[
y_{i,j}\geq x_{i,k}+x_{j,k}-1,\qquad\forall i\in\mathcal{P},\forall j\in\mathcal{P},\forall k\in\mathcal{G}.
\]

\end_inset

Cannot be summed directly to match the 
\begin_inset Formula $\bigvee$
\end_inset

: if no 
\begin_inset Formula $x$
\end_inset

 is positive, this would be a 
\begin_inset Formula $-1$
\end_inset

 in the sum (but can define boolean variables storing the 
\begin_inset Formula $\land$
\end_inset

 and sum them).
 No need for another bound, as the sum of the 
\begin_inset Formula $y_{i,j}$
\end_inset

 is minimised (but no harm to add them).
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Steel mill planning (lot sizing) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Steel-mill-planning-lot-sizing"

\end_inset


\end_layout

\begin_layout Standard
A steel mill manufactures I-beams; the director wants to plan the production
 for the next twelve weeks.
 The demand for I-beams is exactly known for each week.
 The cost for using the furnace can be divided into two parts: a fixed cost
 to get the furnace turned on and a variable cost proportional to the number
 of beams produced.
 Storing beams from a time period to another is costly, and is proportional
 to the number of beams to store.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="13">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Week
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Demand 
\end_layout

\begin_layout Plain Layout
[
\begin_inset Formula $10$
\end_inset

 beams]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variable cost
\end_layout

\begin_layout Plain Layout
[
\begin_inset Formula $1000$
\end_inset

€ per 
\begin_inset Formula $10$
\end_inset

 beams]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fixed cost 
\end_layout

\begin_layout Plain Layout
[
\begin_inset Formula $1000$
\end_inset

€]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Storage cost
\end_layout

\begin_layout Plain Layout
[
\begin_inset Formula $1000$
\end_inset

€ per 
\begin_inset Formula $10$
\end_inset

 beams]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
I-beams factory planning requirements.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The mill director wants to derive a production plan that minimises the total
 cost.
 Formulate the problem as a mixed-integer linear program.
\end_layout

\begin_layout Enumerate
Reformulate the planning problem when adding the following constraint: the
 blast furnace must stay active at least three and at most four consecutive
 periods once started.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model (
\begin_inset Formula $x_{t}$
\end_inset

: production at time 
\begin_inset Formula $t$
\end_inset

; 
\begin_inset Formula $s_{t}$
\end_inset

: storage at time 
\begin_inset Formula $t$
\end_inset

; 
\begin_inset Formula $\mathrm{on}_{t}$
\end_inset

: furnace used at time 
\begin_inset Formula $t$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{t\in\mathcal{T}}\left(c_{t}\,x_{t}+f_{t}\,\mathrm{on}_{t}+h_{t}\,s_{t}\right)\\
\text{s.t.} & s_{t+1}=s_{t}+x_{t}-d_{t} & \forall t\in\mathcal{T}\\
 & s_{1}=0\\
 & x_{t}\leq M\,\mathrm{on}_{t}, & \forall t\in\mathcal{T}\\
 & M=\sum_{\tau\in\mathcal{T}}d_{\tau}
\end{array}
\]

\end_inset

With the blast furnace constraint, add the following constraints:
\begin_inset Formula 
\[
\begin{array}{cc}
\sum_{i=t}^{t+4}\mathrm{on}_{i}\leq4 & \forall t\in\left[1,12-4\right]\\
\mathrm{start}_{t}\geq\mathrm{on}_{t-1}+\mathrm{on}_{t} & \forall t\in\left[\mathbf{2},12\right]\\
\mathrm{start}_{1}=\mathrm{on}_{1}\\
\mathrm{on}_{t}\geq\mathrm{start}_{t} & \forall t\in\left[1,12\right]\\
\mathrm{on}_{t+1}\geq\mathrm{start}_{t} & \forall t\in\left[1,12-1\right]\\
\mathrm{on}_{t+2}\geq\mathrm{start}_{t} & \forall t\in\left[1,12-2\right]
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Minimise costs
\end_layout

\begin_layout Standard
In a few words: when to produce how many beams to minimise cost while meeting
 demand? 
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of time steps.
 
\begin_inset Formula $\mathcal{T}=\left[1,12\right]$
\end_inset


\end_layout

\begin_layout Standard
Available data: 
\begin_inset Formula 
\begin{align*}
t &  & \mbox{Periods: }\left[1,12\right]\\
d_{t} &  & \text{Demand at period }t\\
c_{t} &  & \text{Variable cost at period }t\\
f_{t} &  & \text{Fixed cost at period }t\\
h_{t} &  & \text{Storage cost at period }t
\end{align*}

\end_inset

Variables (last one needed for fixed cost): 
\begin_inset Formula 
\begin{align*}
x_{t} &  & \text{production at period }t &  & \in & \mathbb{N} &  & \forall t\in\mathcal{T}\\
s_{t} &  & \text{stored beams at period }t &  & \in & \mathbb{N} &  & \forall t\in\mathcal{T}\\
\mathrm{on}_{t} &  & =1\text{ if the furnace is used at period t},0\text{ otherwise} &  & \in & \mathcal{B} &  & \forall t\in\mathcal{T}
\end{align*}

\end_inset

Objective: 
\begin_inset Formula 
\[
\min\sum_{t\in\mathcal{T}}\left(c_{t}\,x_{t}+f_{t}\,\mathrm{on}_{t}+h_{t}\,s_{t}\right).
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
Production carries over from period to period (stock, production, demand),
 
\begin_inset Quotes eld
\end_inset

stock budget equation
\begin_inset Quotes erd
\end_inset

: 
\begin_inset Formula 
\[
s_{t+1}=s_{t}+x_{t}-d_{t},\qquad\forall t\in\mathcal{T}.
\]

\end_inset

This ensures the demand is fulfilled: 
\begin_inset Formula $s_{t}\geq0$
\end_inset

, always.
 To fulfil this demand, both stock and production can be used.
 
\end_layout

\begin_layout Itemize
The initial stock is zero: 
\begin_inset Formula 
\[
s_{1}=0.
\]

\end_inset


\end_layout

\begin_layout Itemize
Bound on the production (at most, produce everything in one period), linked
 to 
\begin_inset Formula $\mathrm{on}_{t}$
\end_inset

 (if 
\begin_inset Formula $\mathrm{on}_{t}=1$
\end_inset

, can produce something): 
\begin_inset Formula 
\[
x_{t}\leq M\,\mathrm{on}_{t},\qquad M=\sum_{\tau\in\mathcal{T}}d_{\tau},\qquad\forall t\in\mathcal{T}.
\]

\end_inset


\begin_inset Formula $M$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

large enough,
\begin_inset Quotes erd
\end_inset

 such that if 
\begin_inset Formula $\mathrm{on}_{t}=1$
\end_inset

, 
\begin_inset Formula $x_{t}$
\end_inset

 can take any meaningful value; here, everything is produced in one step.
 (Side note: do not take 
\begin_inset Formula $M$
\end_inset

 too large, and avoid it, because of numerical issues—matrix condition number.)
\end_layout

\begin_layout Subsubsection
Blast furnace constraint
\end_layout

\begin_layout Standard
The furnace stays active at 
\series bold
most
\series default
 four consecutive periods (out of five periods, it is switched on at most
 four of them):
\begin_inset Formula 
\[
\sum_{i=t}^{t+4}\mathrm{on}_{i}\leq4,\qquad\forall t\in\left[1,12-4\right].
\]

\end_inset


\end_layout

\begin_layout Standard
The furnace stays active at 
\series bold
least
\series default
 three periods.
 New variable: 
\begin_inset Formula 
\begin{align*}
\mathrm{start}_{t} & =1\text{ if the furnace is switched on at period t},0\text{ otherwise} &  & \in\mathcal{B}
\end{align*}

\end_inset

Define the value of this new variable (
\begin_inset Formula $\mathrm{start}_{t}=\mathrm{off}_{t-1}\land\mathrm{on}_{t}$
\end_inset

); this cannot work for 
\begin_inset Formula $t=1$
\end_inset

, as 
\begin_inset Formula $\mathrm{on}_{0}$
\end_inset

 does not exist (hence the need for an initial condition).
 
\series bold
Graph to show the links between 
\begin_inset Formula $\mathrm{on}_{t}$
\end_inset

 and 
\begin_inset Formula $\mathrm{start}_{t}$
\end_inset

.
 Make a truth table to explain this constraint.
 
\series default

\begin_inset Formula 
\[
\mathrm{start}_{t}\geq\mathrm{on}_{t-1}+\mathrm{on}_{t},\qquad\forall t\in\left[\mathbf{2},12\right].
\]

\end_inset

Also at the first time step (hypothesis: furnace was off previously): 
\begin_inset Formula 
\[
\mathrm{start}_{1}=\mathrm{on}_{1}.
\]

\end_inset

If it is switched on, the three following periods (starting from 
\begin_inset Formula $t$
\end_inset

) must be on:
\begin_inset Formula 
\[
\mathrm{on}_{t}\geq\mathrm{start}_{t},\forall t\in\left[1,12\right],
\]

\end_inset


\begin_inset Formula 
\[
\mathrm{on}_{t+1}\geq\mathrm{start}_{t},\forall t\in\left[1,12-1\right],
\]

\end_inset


\begin_inset Formula 
\[
\mathrm{on}_{t+2}\geq\mathrm{start}_{t},\forall t\in\left[1,12-2\right],
\]

\end_inset


\end_layout

\begin_layout Remark*
This constraint can also be aggregated, but the resulting formulation is
 usually less tight (no impact here, though): 
\begin_inset Formula 
\[
\mathrm{on}_{t}+\mathrm{on}_{t+1}+\mathrm{on}_{t+2}\geq3\,\mathrm{start}_{t},\forall t\in\left[1,12-3\right].
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ground meat preparation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Ground-meat-preparation"

\end_inset


\end_layout

\begin_layout Standard
In the food-processing industry, ground-meat preparation is a basic step
 for many recipes (from the most basic ones, like sausages or hamburger
 patties, to more complex ones, such as keema or lasagne).
 Its quality is dictated by the quantity of fat.
 
\end_layout

\begin_layout Standard
To prepare this ground meat, industrial butchers prepare trays with pieces
 of meat, after the slaughterhouse and the retrieval of the best pieces
 of meat.
 These trays have some quantity of meat, of which a certain proportion of
 fat.
 
\end_layout

\begin_layout Standard
For the rest of the food-processing supply chain, some quantity of ground
 meat must be produced by assembling those trays (it is not possible to
 split a tray, e.g.
 in two and just use half of the total tray).
 As all trays do not have predictable weight or fat content, the butchers
 have a tolerance of 5% with the weight (i.e.
 they may assemble trays whose total weight is at most 5% less or more than
 what required).
 Their goal is to be as close as possible to the requested quantity of fat
 for one recipe at a time by selecting a subset of the available trays (there
 may be more or less fat than requested).
 
\end_layout

\begin_layout Standard
Formulate this problem as a mixed-integer linear program.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model:
\begin_inset Formula 
\[
\begin{array}{cc}
\min & \mathrm{abs\Delta}\\
\text{s.t.} & \mathrm{weight}=\sum_{t\in\mathcal{T}}\mathrm{weight}_{t}\,\mathrm{selected}_{t}\\
 & 95\,\mathrm{weight}_{\mathrm{target}}\leq\mathrm{weigth}\leq1.05\,\mathrm{weight}_{\mathrm{target}}\\
 & \mathrm{fat}=\sum_{t\in\mathcal{T}}\mathrm{fat}_{t}\,\mathrm{selected}_{t}\\
 & \Delta=\mathrm{fat}-\mathrm{fat}_{\mathrm{target}}\\
 & \mathrm{abs\Delta}\geq\Delta\\
 & \mathrm{abs\Delta}\geq-\Delta
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of trays (from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $T$
\end_inset

)
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{weight}_{\mathrm{target}}$
\end_inset

: the requested weight for the recipe [kg]
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{fat}_{\mathrm{target}}$
\end_inset

: the requested fat content for the recipe [kg]
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{weight}_{t}$
\end_inset

: the weight of tray 
\begin_inset Formula $t$
\end_inset

 [kg]
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{fat}_{t}$
\end_inset

: the fat content of tray 
\begin_inset Formula $t$
\end_inset

 [kg]
\end_layout

\begin_layout Standard
Objective: minimise the production costs (both fixed and variable).
 
\begin_inset Formula 
\[
\min\,\mathrm{abs\Delta}
\]

\end_inset

Variables: determine whether a machine is on, and how much it produces.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mathrm{selected}_{t} &  & =1\text{ if the tray }t\text{ is selected} &  & \in\mathcal{B} &  & \forall t\in\mathcal{T}\\
\mathrm{weight} &  & \text{the total weight of the selected trays}\\
\mathrm{fat} &  & \text{the fat content of the selected trays} &  & \in\mathbb{R}^{+}\\
\Delta &  & \text{the difference between the actual fat content and the target} &  & \in\mathbb{R}\\
\mathrm{abs\Delta} &  & \text{the absolute value of the previous variable} &  & \in\mathbb{R}^{+}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
The total weight is computed based on the selected trays
\begin_inset Formula 
\[
\mathrm{weight}=\sum_{t\in\mathcal{T}}\mathrm{weight}_{t}\,\mathrm{selected}_{t}
\]

\end_inset


\end_layout

\begin_layout Itemize
The total weight must be within the tolerance margins
\begin_inset Formula 
\[
0.95\,\mathrm{weight}_{\mathrm{target}}\leq\mathrm{weigth}\leq1.05\,\mathrm{weight}_{\mathrm{target}}
\]

\end_inset


\end_layout

\begin_layout Itemize
The total fat content is computed based on the selected trays
\begin_inset Formula 
\[
\mathrm{fat}=\sum_{t\in\mathcal{T}}\mathrm{fat}_{t}\,\mathrm{selected}_{t}
\]

\end_inset


\end_layout

\begin_layout Itemize
Define the fat content difference with respect to the target value
\begin_inset Formula 
\[
\Delta=\mathrm{fat}-\mathrm{fat}_{\mathrm{target}}
\]

\end_inset


\end_layout

\begin_layout Itemize
Define its absolute value
\begin_inset Formula 
\[
\mathrm{abs\Delta}\geq\Delta,\qquad\mathrm{abs\Delta}\geq-\Delta.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Variants
\end_layout

\begin_layout Standard
Consider the butchers must prepare multiple ground meat recipes (each of
 them having its own total weight and fat content target).
 Their goal is now to minimise the total fat content differences among all
 prepared recipes.
 Of course, a tray can only be selected for one recipe.
 
\end_layout

\begin_layout Subsection
Unit commitment  
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Unit-commitment"

\end_inset


\end_layout

\begin_layout Standard
In the unit-commitment problem, a company needs to schedule its electricity
 production for a given number of periods 
\begin_inset Formula $T$
\end_inset

.
 It has 
\begin_inset Formula $P$
\end_inset

 plants of maximum power 
\begin_inset Formula $P_{i}^{\mathrm{max}}$
\end_inset

.
 It must satisfy a demand 
\begin_inset Formula $d_{t}$
\end_inset

 at each time period 
\begin_inset Formula $t$
\end_inset

 and pays a fixed cost 
\begin_inset Formula $f_{t,i}$
\end_inset

 for using a plant 
\begin_inset Formula $i$
\end_inset

 and a varying cost 
\begin_inset Formula $p_{t,i}$
\end_inset

 depending on the amount of the electricity produced.
 
\end_layout

\begin_layout Standard
Furthermore, we want to introduce start-up costs 
\begin_inset Formula $g_{t,i}$
\end_inset

, that means that we pay each time that a plant 
\begin_inset Formula $i$
\end_inset

 starts when it was down the period before.
 
\end_layout

\begin_layout Standard
We also want to impose that, each time a plant starts, it needs to run for
 at least four consecutive periods.
 
\end_layout

\begin_layout Standard
Formulate the problem of minimizing the costs of the producer while satisfying
 the demand as a mixed-integer program.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model:
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{\substack{t\in\mathcal{T}\\
i\in\mathcal{P}
}
}\left(f_{i}\,\mathrm{on}_{t,i}+p_{i}\,\mathrm{power}_{t,i}+g_{i}\,\mathrm{start}_{t,i}\right)\\
\text{s.t.} & \mathrm{power}_{i,t}\leq P_{i}^{\mathrm{max}}\,\mathrm{on}_{i,t} & \forall i\in\mathcal{P},\forall t\in\mathcal{T}\\
 & \sum_{i\in\mathcal{P}}\mathrm{power}_{i,t}=d_{t} & \forall t\in\mathcal{T}\\
 & \mathrm{start}_{t,i}\geq\mathrm{on}_{t,i}-\mathrm{on}_{t-1,i} & \forall i\in\mathcal{P},\forall t\in\mathcal{T}\\
 & \mathrm{on}_{0,i}=0 & \forall i\in\mathcal{P}\\
 & \mathrm{on}_{\tau,i}\geq\mathrm{start}_{t,i} & \forall i\in\mathcal{P},\forall t\in\mathcal{T},\forall\tau\in\left[t,t+3\right]\cap\mathcal{T}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Unit-commitment
\end_layout

\begin_layout Standard
How to solve this problem? Go step by step: prepare a model for the first
 paragraph, then add constraints as they come.
 
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of time steps (from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $T$
\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{P}$
\end_inset

: the set of power plants (from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $P$
\end_inset

) 
\end_layout

\begin_layout Standard
Objective: minimise the production costs (both fixed and variable).
 
\begin_inset Formula 
\[
\min\sum_{\substack{t\in\mathcal{T}\\
i\in\mathcal{P}
}
}\left(f_{i}\,\mathrm{on}_{t,i}+p_{i}\,\mathrm{power}_{t,i}\right)
\]

\end_inset

Variables: determine whether a machine is on, and how much it produces.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mathrm{on}_{i,t} &  & =1\text{ if the machine }i\text{ is on at time }t &  & \in\mathcal{B} &  & \forall i\in\mathcal{P},\forall t\in\mathcal{T}\\
\mathrm{power}_{i,t} &  & \text{the power produced by machine }i\text{ is on at time }t &  & \in\mathbb{R} &  & \forall i\in\mathcal{P},\forall t\in\mathcal{T}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
A machine can produce only if it is on.
 Each machine has a maximum power to be respected at all times.
 
\begin_inset Formula 
\[
\mathrm{power}_{i,t}\leq P_{i}^{\mathrm{max}}\,\mathrm{on}_{i,t},\qquad\forall i\in\mathcal{P},\forall t\in\mathcal{T}
\]

\end_inset


\end_layout

\begin_layout Itemize
The total demand must be met.
 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{P}}\mathrm{power}_{i,t}=d_{t},\qquad\forall t\in\mathcal{T}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Start-up costs
\end_layout

\begin_layout Standard
Objective: also minimise the start-up costs.
 
\begin_inset Formula 
\[
\min\sum_{\substack{t\in\mathcal{T}\\
i\in\mathcal{P}
}
}\left(f_{i}\,\mathrm{on}_{t,i}+p_{i}\,\mathrm{power}_{t,i}+g_{i}\,\mathrm{start}_{t,i}\right)
\]

\end_inset

Variables: determine when a machine is on.
 This is not a degree of freedom of the optimiser: the value of this variable
 must be completely determined by the other variables; it is redundant with
 the 
\begin_inset Formula $\mathrm{on}_{t,i}$
\end_inset

 variables, and must be kept consistent with this matrix.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mathrm{start}_{i,t} &  & =1\text{ if the machine }i\text{ is started at time }t &  & \in\mathcal{B} &  & \forall i\in\mathcal{P},\forall t\in\mathcal{T}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
A machine is started at 
\begin_inset Formula $t$
\end_inset

 if it was not on at time 
\begin_inset Formula $t-1$
\end_inset

 and is at time 
\begin_inset Formula $t$
\end_inset

.
 In other words: 
\begin_inset Formula 
\[
"\mathrm{start}_{t,i}=\lnot\mathrm{on}_{t-1,i}\land\mathrm{on}_{t,i}".
\]

\end_inset

It is sufficient to write: 
\begin_inset Formula 
\[
\mathrm{start}_{t,i}\geq\mathrm{on}_{t,i}-\mathrm{on}_{t-1,i},\qquad\forall i\in\mathcal{P},\forall t\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Remark*
To make these definitions work, must define an initial condition, i.e.
 the value of 
\begin_inset Formula $\mathrm{on}_{t-1,i}$
\end_inset

 for the time time step.
 
\begin_inset Formula 
\[
\mathrm{on}_{0,i}=0,\qquad\forall i\in\mathcal{P}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Duration constraint
\end_layout

\begin_layout Itemize
If a machine is started at time 
\begin_inset Formula $t$
\end_inset

, then it must be on for all 
\begin_inset Formula $\tau$
\end_inset

 from 
\begin_inset Formula $t$
\end_inset

 to 
\begin_inset Formula $t+3$
\end_inset

 (if those time steps are considered in the optimisation horizon).
 
\begin_inset Formula 
\[
\mathrm{on}_{\tau,i}\geq\mathrm{start}_{t,i},\qquad\forall i\in\mathcal{P},\forall t\in\mathcal{T},\forall\tau\in\left[t,t+3\right]\cap\mathcal{T}.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Knapsack 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Warm-up-Knapsack"

\end_inset


\end_layout

\begin_layout Standard
A gang of thieves is stealing objects in a house.
 They may take the items there, but they have a limited bag to bring those
 back to their hideout.
 Each item has a weight and a value; the bag's capacity only considers the
 weight of the objects that are put inside.
 The goal of the thieves is to steal the maximum value from the house.
 
\end_layout

\begin_layout Standard
Model this problem as a mixed integer linear program.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model:
\begin_inset Formula 
\[
\begin{array}{cc}
\max & \sum_{i\in\mathcal{O}}v_{i}\,x_{i}\\
\text{s.t.} & \sum_{i\in\mathcal{O}}w_{i}\,x_{i}\leq W
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}$
\end_inset

: the set of objects that may be stolen
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{i}$
\end_inset

: the value of object 
\begin_inset Formula $i$
\end_inset

 (
\begin_inset Formula $v_{i}\geq0$
\end_inset

), 
\begin_inset Formula $i\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{i}$
\end_inset

: the weight of object 
\begin_inset Formula $i$
\end_inset

 (
\begin_inset Formula $w_{i}\geq0$
\end_inset

), 
\begin_inset Formula $i\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $W$
\end_inset

: the capacity of the bag
\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\max\sum_{i\in\mathcal{O}}v_{i}\,x_{i}
\]

\end_inset

Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i}\in\mathcal{B}$
\end_inset

: whether the object 
\begin_inset Formula $i$
\end_inset

 is taken, 
\begin_inset Formula $i\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
The bag has a maximum capacity: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{O}}w_{i}\,x_{i}\leq W.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Boolean algebra 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-Boolean-algebra"

\end_inset


\end_layout

\begin_layout Subsection
Negation (NOT) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Boolean-algebra-Negation-(NOT)"

\end_inset


\end_layout

\begin_layout Standard
How to model a Boolean NOT, i.e.
 
\begin_inset Formula $\lnot a$
\end_inset

 where 
\begin_inset Formula $a$
\end_inset

 is a binary variable?
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the expression 
\begin_inset Formula $1-a$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
\begin_inset Formula $1-a$
\end_inset

 respects the truth table.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=\lnot a$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for a complement.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_not.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Disjunction (OR) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Boolean-algebra-Disjunction-(OR)"

\end_inset


\end_layout

\begin_layout Enumerate
How to model a binary Boolean OR, i.e.
 the relationship 
\begin_inset Formula $a\lor b$
\end_inset

 between two binary variables 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Introduce a new variable 
\begin_inset Formula $z=a\lor b$
\end_inset

.
 Use the constraints 
\begin_inset Formula $z\geq a$
\end_inset

, 
\begin_inset Formula $z\geq b$
\end_inset

, and 
\begin_inset Formula $z\leq a+b$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
How to model a ternary Boolean OR, i.e.
 the relationship 
\begin_inset Formula $a\lor b\lor c$
\end_inset

-between three binary variables 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

, and 
\begin_inset Formula $c$
\end_inset

?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Introduce a new variable 
\begin_inset Formula $z=a\lor b\lor c$
\end_inset

.
 Use the constraints 
\begin_inset Formula $z\geq a$
\end_inset

, 
\begin_inset Formula $z\geq b$
\end_inset

, 
\begin_inset Formula $z\geq c$
\end_inset

, and 
\begin_inset Formula $z\leq a+b+c$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
* How to model compactly a 
\begin_inset Formula $n$
\end_inset

-ary Boolean OR (i.e.
 use as few supplementary variables and constraints as possible)?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the constraints 
\begin_inset Formula $0\leq\left|\mathcal{I}\right|\,z-\left(\sum_{i\in\mathcal{I}}x_{i}\right)\leq\left|\mathcal{I}\right|-1$
\end_inset

, with 
\begin_inset Formula $\mathcal{I}$
\end_inset

 the set of variables participating in the OR.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Binary
\end_layout

\begin_layout Standard
The goal is to translate the truth table into linear constraints.
 
\end_layout

\begin_layout Standard
The most classic expression: 
\begin_inset Formula 
\[
z\geq a,\qquad z\geq b,\qquad z\leq a+b.
\]

\end_inset

To be true, 
\begin_inset Formula $z$
\end_inset

 needs either 
\begin_inset Formula $a$
\end_inset

 or 
\begin_inset Formula $b$
\end_inset

 to be true; also need an upper bound (if both are zero, force 
\begin_inset Formula $z$
\end_inset

 to be zero too).
 
\end_layout

\begin_layout Remark
You can think of it as the maximum between the two binary variables.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\land b$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for a binary disjunction.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_or.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Ternary
\end_layout

\begin_layout Standard
Quite directly, 
\begin_inset Formula 
\[
z\geq a,\qquad z\geq b,\qquad z\geq c,\qquad z\leq a+b+c.
\]

\end_inset

This formulation can be extended to the 
\begin_inset Formula $n$
\end_inset

-ary case quite directly, with the variables in 
\begin_inset Formula $\mathcal{I}$
\end_inset

: 
\begin_inset Formula 
\[
z\geq x_{i},\qquad\forall i\in\mathcal{I}.
\]

\end_inset


\begin_inset Formula 
\[
z\leq\sum_{i\in\mathcal{I}}x_{i}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
** Compact 
\begin_inset Formula $n$
\end_inset

-ary
\end_layout

\begin_layout Standard
The previous formulation can be made much more compact, with only two constraint
s (instead of 
\begin_inset Formula $\left|\mathcal{I}\right|$
\end_inset

) and one binary variable (as previously): 
\begin_inset Formula 
\[
0\leq\left|\mathcal{I}\right|\,z-\left(\sum_{i\in\mathcal{I}}x_{i}\right)\leq\left|\mathcal{I}\right|-1.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\lor b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Impact on the constraint
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2\,z-0\leq1$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2\,z-1\leq1$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2\,z-1\leq1$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2\,z-2\leq1$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for the compact formulation (binary).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\lor b\lor c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Impact on the constraint
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-0\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-1\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-1\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-2\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-1\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-2\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-2\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3\,z-3\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for the compact formulation (ternary).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Conjunction (AND) 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Boolean-algebra-Conjunction-(AND)"

\end_inset


\end_layout

\begin_layout Enumerate
How to model a binary Boolean AND, i.e.
 the relationship 
\begin_inset Formula $a\land b$
\end_inset

 between two binary variables 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Introduce a new variable 
\begin_inset Formula $z=a\land b$
\end_inset

.
 Use the constraints 
\begin_inset Formula $z\leq a$
\end_inset

, 
\begin_inset Formula $z\leq b$
\end_inset

, and 
\begin_inset Formula $z\geq a+b-1$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
How to model a ternary Boolean AND, i.e.
 the relationship 
\begin_inset Formula $a\land b\land c$
\end_inset

-between three binary variables 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

, and 
\begin_inset Formula $c$
\end_inset

?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Introduce two new variables 
\begin_inset Formula $z=a\land b$
\end_inset

 and 
\begin_inset Formula $z^{\prime}=a\land b\land c=z\land c$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
* How to model a 
\begin_inset Formula $n$
\end_inset

-ary Boolean AND?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the constraints 
\begin_inset Formula $z\leq x_{i}$
\end_inset

 for each variable 
\begin_inset Formula $i\in\mathcal{I}$
\end_inset

 participating in the AND, and 
\begin_inset Formula 
\[
z\geq\left(\sum_{i\in\mathcal{I}}x_{i}\right)-\left(\left|\mathcal{I}-1\right|\right).
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
** How to make it more compact (i.e.
 use as few supplementary variables and constraints as possible)?
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use the constraint
\begin_inset Formula 
\[
0\leq\left(\sum_{i\in\mathcal{I}}x_{i}\right)-\left|\mathcal{I}\right|\,z\leq\left|\mathcal{I}\right|-1.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Binary 
\end_layout

\begin_layout Standard
The goal is to translate the truth table into linear constraints.
 
\end_layout

\begin_layout Standard
The most classic expression: 
\begin_inset Formula 
\[
z\leq a,\qquad z\leq b,\qquad z\geq a+b-1.
\]

\end_inset

To be true, 
\begin_inset Formula $z$
\end_inset

 needs 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 to be true; however, both of them must be true
\emph on
 at the same time
\emph default
, hence the sum.
 
\end_layout

\begin_layout Remark
You can think of it as the minimum between the two binary variables.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\land b$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for a binary conjunction.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_and.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Ternary 
\end_layout

\begin_layout Standard
An easy way to write a ternary conjunction is to write two binary conjunctions:
 
\begin_inset Formula $z=a\land b$
\end_inset

, 
\begin_inset Formula $z^{\prime}=z\land c$
\end_inset

.
 
\begin_inset Formula 
\[
z\leq a,\qquad z\leq b,\qquad z\geq a+b-1.
\]

\end_inset


\begin_inset Formula 
\[
z^{\prime}\leq z,\qquad z\leq c,\qquad z^{\prime}\geq z+c-1.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
* 
\begin_inset Formula $n$
\end_inset

-ary
\end_layout

\begin_layout Standard
The first formulation can be extended to the 
\begin_inset Formula $n$
\end_inset

-ary case without creating many binary variables: 
\begin_inset Formula 
\[
z\leq x_{i},\qquad\forall i\in\mathcal{I},
\]

\end_inset


\begin_inset Formula 
\[
z\geq\left(\sum_{i\in\mathcal{I}}x_{i}\right)-\left(\left|\mathcal{I}-1\right|\right).
\]

\end_inset


\end_layout

\begin_layout Standard
This extension is much more compact than the one presented for three operands:
 this one requires 
\begin_inset Formula $\left|\mathcal{I}\right|+1$
\end_inset

 constraints and one new variable; the previous one requires 
\begin_inset Formula $3\,\left(\left|\mathcal{I}\right|-1\right)$
\end_inset

 and 
\begin_inset Formula $\left|\mathcal{I}\right|-1$
\end_inset

 variables! (How to prove this? Write a full binary tree: each leaf is an
 operand to the conjunction; an inner node is a conjunction between its
 two children; the root is the result.
 Full tree, as each node has zero or two children.)
\end_layout

\begin_layout Subsubsection
** Compact 
\begin_inset Formula $n$
\end_inset

-ary
\end_layout

\begin_layout Standard
The previous formulation can be made much more compact, with only two constraint
s (instead of 
\begin_inset Formula $\left|\mathcal{I}\right|+1$
\end_inset

) and one binary variable: 
\begin_inset Formula 
\[
0\leq\left(\sum_{i\in\mathcal{I}}x_{i}\right)-\left|\mathcal{I}\right|\,z\leq\left|\mathcal{I}\right|-1.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\land b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Impact on the constraint
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq0-2\,z\leq1$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq1-2\,z\leq1$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq1-2\,z\leq1$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2-2\,z\leq1$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for the compact formulation (binary).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z=a\land b\land c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Impact on the constraint
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq0-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq1-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq1-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq1-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq2-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0\leq3-3\,z\leq2$
\end_inset

, hence 
\begin_inset Formula $z=1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Truth table for the compact formulation (ternary).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Implication 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Boolean-algebra-Implication"

\end_inset


\end_layout

\begin_layout Standard
How to model the fact than an implication 
\begin_inset Formula $a\Rightarrow b$
\end_inset

 must be true, where 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are binary variables?
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $a\leq b$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
The implication can be reduced to a single constraint: 
\begin_inset Formula 
\[
a\leq b.
\]

\end_inset

Hence, if 
\begin_inset Formula $a$
\end_inset

 is known, then 
\begin_inset Formula $b$
\end_inset

's value is forced; otherwise, this constraint has no effect on 
\begin_inset Formula $b$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_implication.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
If-then 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Boolean-algebra-If-then"

\end_inset


\end_layout

\begin_layout Standard
How to model the following expression, where 
\begin_inset Formula $x\in\left[0,100\right]$
\end_inset

 and 
\begin_inset Formula $y\in\mathcal{B}$
\end_inset

? 
\begin_inset Formula 
\[
\text{if }y=1\text{, then }x=100
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $x\leq100+M\,\left(1-y\right)$
\end_inset

 and 
\begin_inset Formula $x\geq100-M\,\left(1-y\right)$
\end_inset

, with 
\begin_inset Formula $M=100$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $y=1$
\end_inset

, then the following constraint holds: 
\begin_inset Formula 
\[
x=100.
\]

\end_inset

It can be decomposed as two inequalities: 
\begin_inset Formula 
\[
x\leq100,\qquad x\geq100.
\]

\end_inset

Finally, these two constraints can be 
\emph on
disabled
\emph default
 if 
\begin_inset Formula $y=0$
\end_inset

, i.e.
 a new term makes them ineffective.
 
\begin_inset Formula 
\[
\boxed{x\leq100+M\,\left(1-y\right),\qquad x\geq100-M\,\left(1-y\right).}
\]

\end_inset


\end_layout

\begin_layout Standard
Why does this work? How to choose the value of 
\begin_inset Formula $M$
\end_inset

? 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $y=0$
\end_inset

, the constraints become: 
\begin_inset Formula 
\[
x\leq100+M\,,\qquad x\geq100-M.
\]

\end_inset

 If 
\begin_inset Formula $M$
\end_inset

 is large enough, then the constraints are equivalent to 
\begin_inset Formula $-\infty\leq x\leq+\infty$
\end_inset

.
 With the bounds on 
\begin_inset Formula $x$
\end_inset

, the value 
\begin_inset Formula $M=100$
\end_inset

 is sufficiently large (the constraints become 
\begin_inset Formula $0\leq x\leq200$
\end_inset

).
 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $y=1$
\end_inset

, the constraints become 
\begin_inset Formula 
\[
x\leq100,\qquad x\geq100,
\]

\end_inset

which is equivalent to imposing 
\begin_inset Formula $x=100$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_if-then.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint (
\begin_inset Formula $M=100$
\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_if-then-50.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint (too small: 
\begin_inset Formula $M=50$
\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_2_if-then-200.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint (too large: 
\begin_inset Formula $M=200$
\end_inset

).
 No particular problem, except the formulation is not as tight as possible.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Threshold 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-Thresholds"

\end_inset


\end_layout

\begin_layout Subsection
Binary activation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Thresholds-Binary-activation"

\end_inset


\end_layout

\begin_layout Standard
How to model the constraint that the variable 
\begin_inset Formula $x\in\mathbb{R}^{+}$
\end_inset

 can take a nonzero variable if and only if the variable 
\begin_inset Formula $y\in\mathcal{B}$
\end_inset

 is 
\begin_inset Formula $1$
\end_inset

? 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
If 
\begin_inset Formula $m\in\mathbb{R}_{0}^{+}$
\end_inset

 is the maximum value for 
\begin_inset Formula $x$
\end_inset

: 
\begin_inset Formula $x\leq m\,y$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
The maximum value for 
\begin_inset Formula $x$
\end_inset

 is 
\begin_inset Formula $m\in\mathbb{R}_{0}^{+}$
\end_inset

.
 
\begin_inset Formula 
\[
x\leq m\,y.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $m$
\end_inset

 is called a 
\emph on
small-m
\emph default
 or a big-M in the literature.
 For numerical reasons, this bound must be chosen as tight as possible (i.e.
 the maximum value for 
\begin_inset Formula $x$
\end_inset

, and nothing more): this might require careful inspection of the problem
 at hand.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_3_binary-activation.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Semicontinuous variable 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Thresholds-Semicontinuous-variable"

\end_inset


\end_layout

\begin_layout Standard
How to model the constraint that the variable 
\begin_inset Formula $x\in\mathbb{R}^{+}$
\end_inset

 can take a value in the set 
\begin_inset Formula $\left\{ 0\right\} \cup\left[m,M\right]$
\end_inset

, where 
\begin_inset Formula $0<m<M$
\end_inset

? 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Add a binary variable 
\begin_inset Formula $y$
\end_inset

.
 Then: 
\begin_inset Formula $m\,y\leq x\leq M\,y$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Do the previous one twice.
 
\begin_inset Formula 
\[
x\geq m\,y,\qquad x\leq M\,y.
\]

\end_inset

In this case, when 
\begin_inset Formula $y=0$
\end_inset

, the two constraints become 
\begin_inset Formula $0\leq x\leq0$
\end_inset

, i.e 
\begin_inset Formula $x=0$
\end_inset

.
 Otherwise, they translate to 
\begin_inset Formula $m\leq x\leq M$
\end_inset

.
 
\end_layout

\begin_layout Remark*
Already implemented in JuMP, solver may provide specific support for this
 (and thus a performance boost, usually), but still useful for some problems
 (like the unit commitment).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_3_semicontinuous.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Threshold detection 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Thresholds-Threshold-detection"

\end_inset


\end_layout

\begin_layout Standard
How to model the following expression, where 
\begin_inset Formula $x\in\mathcal{B}$
\end_inset

 and 
\begin_inset Formula $y\in\left[0,100\right]$
\end_inset

? 
\begin_inset Formula 
\[
x=\begin{cases}
1 & \text{ if }y\geq50\\
0 & \text{ otherwise}
\end{cases}
\]

\end_inset

How does your solution behave for 
\begin_inset Formula $y=50$
\end_inset

?
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $50\,y\leq x\leq50+50\,y$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution 
\end_layout

\begin_layout Standard
Without defining new variables, a formulation similar to that of exercise
 2.2.5 can be:
\begin_inset Formula 
\[
50\,y\leq x\leq50+50\,y.
\]

\end_inset

In this case: 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $y=0$
\end_inset

, then the constraints become: 
\begin_inset Formula 
\[
0\leq x\leq50.
\]

\end_inset


\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $y=1$
\end_inset

, then the constraints become: 
\begin_inset Formula 
\[
50\leq x\leq100.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_3_if-greater-than.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation of the constraint.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Special case: 
\begin_inset Formula $x=50$
\end_inset


\end_layout

\begin_layout Standard
In the case where 
\begin_inset Formula $x=50$
\end_inset

, 
\emph on
both values of 
\begin_inset Formula $y$
\end_inset

 are possible!
\emph default
 This is unavoidable, unless using numerical tricks (e.g., defining 
\begin_inset Formula $x_{1}\in\left[0,50-\varepsilon\right]$
\end_inset

, using the constraint written as 
\begin_inset Formula $50\,y\leq x\leq\left(50-\varepsilon\right)\,\left(1-y\right)+100\,y$
\end_inset

).
 
\end_layout

\begin_layout Standard
Why is that? 
\begin_inset Formula 
\[
50\,y\leq\boxed{\mathbf{50}}\leq50\,\left(1-y\right)+100\,y,
\]

\end_inset


\begin_inset Formula 
\[
y\leq1\leq\left(1-y\right)+2\,y,
\]

\end_inset


\begin_inset Formula 
\[
y\in\left\{ 0,1\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
The main problem? No optimisation algorithm can handle strict inequality
 constraints! 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Piecewise\SpecialChar softhyphen
linear function 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Thresholds-Piecewise-linear-function"

\end_inset


\end_layout

\begin_layout Standard
A model needs to use a nonlinear function in a constraint: 
\begin_inset Formula 
\[
f\!\left(x\right)=x^{3}+\log_{2}x.
\]

\end_inset

A piecewise-linear approximation with sixteen points, equally distributed
 between 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $9.5$
\end_inset

, would be sufficient in this application.
 In other words, the previous equation would be replaced by: 
\begin_inset Formula 
\[
f\!\left(x\right)=\begin{cases}
15.894\,x-22.788 & \text{ if }2\leq x\leq2.5\\
23.276\,x-41.243 & \text{ if }2.5\leq x\leq3\\
 & \vdots\\
256.906\,x-1579.98 & \text{ if }9\leq x\leq9.5
\end{cases}.
\]

\end_inset


\end_layout

\begin_layout Enumerate
Propose a MILP formulation for the constraint that forces 
\begin_inset Formula $y$
\end_inset

 to take an approximation of 
\begin_inset Formula $f\!\left(x\right)$
\end_inset

, with 
\begin_inset Formula $x\in\left[2,9.5\right]$
\end_inset

 and 
\begin_inset Formula $y\in\mathbb{R}^{+}$
\end_inset

.
 Use the set of points in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Modelling-thresholds-PWL"

\end_inset

 to this end.
 
\begin_inset Newline newline
\end_inset

Hint: for sixteen points to interpolate, use sixteen continuous variables
 and sixteen binary variables.
 
\end_layout

\begin_layout Enumerate
** Propose an equivalent MILP formulation that only uses a fraction of the
 binary variables.
 It is possible to find one that uses 
\begin_inset Formula $\left\lceil \log_{2}N\right\rceil $
\end_inset

 binary variables for 
\begin_inset Formula $N$
\end_inset

 points to interpolate.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f\!\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $16.947$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $28.585$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $44.682$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $66$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $93.295$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $127.322$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $168.834$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f\!\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $6$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $218.585$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $6.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $277.325$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $345.807$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $424.782$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $515$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $617.212$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $732.170$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9.5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $860.623$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Points for a linear approximation of the function 
\begin_inset Formula $f\!\left(x\right)=x^{3}+\log_{2}x$
\end_inset

 between 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $10$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "tab:Modelling-thresholds-PWL"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Decompose 
\begin_inset Formula $x$
\end_inset

 as sixteen continuous variables 
\begin_inset Formula $\xi_{i}\in\left[0,1\right]$
\end_inset

: 
\begin_inset Formula $x=\sum_{i=1}^{16}x_{i}\,\xi_{i}$
\end_inset

.
 Defined sixteen binary variables 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 Then,
\begin_inset Formula 
\[
y=\sum_{i=1}^{16}f\!\left(x_{i}\right)\,\xi_{i},\qquad\sum_{i=1}^{16}\zeta_{i}\leq2,
\]

\end_inset


\begin_inset Formula 
\[
\xi_{i}\leq\zeta_{i},\qquad\forall i\in\left[1,16\right]
\]

\end_inset


\begin_inset Formula 
\[
\zeta_{i}+\zeta_{j}\leq1\qquad\forall i\in\left[1,16\right],\quad\forall j\in\left[1,16\right]\quad\text{if }\left|i-j\right|\geq2
\]

\end_inset

For a better model, see for instance 
\begin_inset CommandInset href
LatexCommand href
name "Nonconvex piecewise linear functions: Advanced formulations and simple modeling tools"
target "http://www.mit.edu/~jvielma/publications/nonconvex-piecewise-linear-functions.pdf"
literal "false"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Standard (SOS2) formulation 
\end_layout

\begin_layout Standard
Idea: decompose 
\begin_inset Formula $x$
\end_inset

 as a convex combination of the known points.
 Hence sixteen continuous variables 
\begin_inset Formula $\xi_{i}\in\left[0,1\right]$
\end_inset

: 
\begin_inset Formula 
\[
x=\sum_{i=1}^{16}x_{i}\,\xi_{i}.
\]

\end_inset

Then, 
\begin_inset Formula $y$
\end_inset

 is the 
\series bold
same
\series default
 convex combinations of the values at those points: 
\begin_inset Formula 
\[
y=\sum_{i=1}^{16}f\!\left(x_{i}\right)\,\xi_{i}.
\]

\end_inset


\end_layout

\begin_layout Standard
Problem: the combination only makes sense if two consecutive 
\begin_inset Formula $\xi_{i}$
\end_inset

 are used! (Otherwise, the solution may be far from the linear interpolation
 between the known points.) Hence: enable them based on sixteen binary variables
 
\begin_inset Formula $\zeta_{i}$
\end_inset

.
 
\begin_inset Formula 
\[
\xi_{i}\leq\zeta_{i},\qquad\forall i\in\left[1,16\right].
\]

\end_inset

At most two points are chosen: 
\begin_inset Formula 
\[
\sum_{i=1}^{16}\zeta_{i}\leq2.
\]

\end_inset

If two points are chosen, they must be close to each other.
 
\begin_inset Formula 
\[
\zeta_{i}+\zeta_{j}\leq1\qquad\forall i\in\left[1,16\right],\quad\forall j\in\left[1,16\right]\quad\text{if }\left|i-j\right|\geq2.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Logarithmic formulation 
\end_layout

\begin_layout Standard
Idea: instead of using a unary encoding of the chosen point, go to binary.
 Reference: http://www.mit.edu/~jvielma/publications/nonconvex-piecewise-linear-fu
nctions.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Section
Puzzles
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-Puzzles"

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Formula $N$
\end_inset

 queens
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Puzzles-N-queens"

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Formula $N$
\end_inset

-queens problem is about placing 
\begin_inset Formula $N$
\end_inset

 queens in an 
\begin_inset Formula $N\times N$
\end_inset

 grid such that no two queens can threaten each other.
 The rules for queens are those of chess: a queen can attack another one
 if they are on the same row, column, or diagonal.
 
\end_layout

\begin_layout Standard
Write a mixed-integer linear program to solve the 
\begin_inset Formula $N$
\end_inset

-queens problem.
\end_layout

\begin_layout Remark
See also the CP counterpart: 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Constraint-programming-N-queens"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status collapsed

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{cccc}
\text{find} & \text{a solution}\\
\text{s.t.} & \sum_{i=1}^{N}x_{ij}=1 &  & \forall j\in\left\{ 1,2\dots N\right\} \\
 & \sum_{j=1}^{N}x_{ij}=1 & \forall i\in\left\{ 1,2\dots N\right\} \\
 & \sum_{\ell=1}^{N}x_{\ell\ell}=1\\
 & \sum_{\ell=1}^{N-k}x_{\ell,k+\ell}=1 & \forall k\in\left\{ 1,2\dots N-1\right\} \\
 & \sum_{\ell=1}^{N-k}x_{k+\ell,\ell}=1 & \forall k\in\left\{ 1,2\dots N-1\right\} \\
 & \sum_{\ell=1}^{N}x_{\ell,N-\ell}=1\\
 & \sum_{\ell=1}^{N-k}x_{\ell,N-k+\ell}=1 & \forall k\in\left\{ 1,2\dots N-1\right\} \\
 & \sum_{\ell=1}^{N-k}x_{k+\ell,N-\ell}=1 & \forall k\in\left\{ 1,2\dots N-1\right\} \\
 & \mathbf{x}_{i,j}\in\left\{ 0,1\right\}  & \forall i\in\left\{ 1,2\dots N\right\}  & \forall j\in\left\{ 1,2\dots N\right\} 
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i,j}=1$
\end_inset

 if there is a queen in square 
\begin_inset Formula $\left(i,j\right)$
\end_inset

, with both 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $i$
\end_inset

 in 
\begin_inset Formula $\left\{ 1,2\dots N\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
Queens can attack on columns: at most one queen per column.
\begin_inset Formula 
\[
\sum_{i=1}^{N}x_{ij}\leq1,\qquad\forall j\in\left\{ 1,2\dots N\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
Queens can attack on rows: at most one queen per row.
\begin_inset Formula 
\[
\sum_{j=1}^{N}x_{ij}=1,\qquad\forall i\in\left\{ 1,2\dots N\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
Queens can attack on diagonals: at most one queen per diagonal.
 Divide the set of diagonals into six: 
\end_layout

\begin_deeper
\begin_layout Itemize
For the major diagonal: 
\begin_inset Formula 
\[
\sum_{\ell=1}^{N}x_{\ell\ell}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize
For diagonals above the major: 
\begin_inset Formula 
\[
\sum_{\ell=1}^{N-k}x_{\ell,k+\ell}=1,\qquad\forall k\in\left\{ 1,2\dots N-1\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
For diagonals below the major: 
\begin_inset Formula 
\[
\sum_{\ell=1}^{N-k}x_{k+\ell,\ell}=1,\qquad\forall k\in\left\{ 1,2\dots N-1\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
For the minor diagonal:
\begin_inset Formula 
\[
\sum_{\ell=1}^{N}x_{\ell,N-\ell}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize
For diagonals above the minor: 
\begin_inset Formula 
\[
\sum_{\ell=1}^{N-k}x_{\ell,N-k+\ell}=1,\qquad\forall k\in\left\{ 1,2\dots N-1\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
For diagonals below the minor:
\begin_inset Formula 
\[
\sum_{\ell=1}^{N-k}x_{k+\ell,N-\ell}=1,\qquad\forall k\in\left\{ 1,2\dots N-1\right\} .
\]

\end_inset


\end_layout

\begin_layout Remark
It is more convenient to write computer code to generate these diagonals
 instead of relying on summation signs.
 For instance, in Julia with JuMP (
\family typewriter
x
\family default
 being the optimisation variable corresponding to 
\begin_inset Formula $x$
\end_inset

 and 
\family typewriter
m
\family default
 the JuMP model), using the fact that the minor diagonal is the major diagonal
 of the vertically reverse matrix (
\family typewriter
reverse
\family default
):
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

for i in -(N - 1):(N-1)
\end_layout

\begin_layout Plain Layout

    @constraint(m,
\end_layout

\begin_layout Plain Layout

        sum(diag(x, i)) <= 1)
\end_layout

\begin_layout Plain Layout

    @constraint(m,
\end_layout

\begin_layout Plain Layout

        sum(diag(reverse(x; dims = 1), i)) <= 1)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsection
Knight covering
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Puzzles-Knight-covering"

\end_inset


\end_layout

\begin_layout Standard
The knight-covering problem is about placing as many knights in an 
\begin_inset Formula $N\times N$
\end_inset

 grid as possible such that all squares are threatened by at least one knight
 or occupied by one knight; interactions between knights are ignored.
 The rules for knights are those of chess: its moves have an 
\begin_inset Formula $L$
\end_inset

-shape, i.e.
 two square vertically and one square horizontally, or the reverse.
 
\end_layout

\begin_layout Standard
Write a mixed-integer linear program to solve the knight-covering problem.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{cccc}
\min & \sum_{i=1}^{N}\sum_{j=1}^{N}x_{ij}\\
\text{s.t.} & x_{ij}+\sum_{\left(k,\ell\right)\in\mathcal{K}_{ij}}x_{k\ell}\geq1 & \forall i\in\left\{ 1,2\dots N\right\}  & \forall j\in\left\{ 1,2\dots N\right\} \\
 & \mathbf{x}_{i,j}\in\left\{ 0,1\right\}  & \forall i\in\left\{ 1,2\dots N\right\}  & \forall j\in\left\{ 1,2\dots N\right\} 
\end{array}
\]

\end_inset

 where 
\begin_inset Formula $\mathcal{K}_{ij}$
\end_inset

 is the set of moves of a knight at position 
\begin_inset Formula $\left(i,j\right)$
\end_inset

:
\begin_inset Formula 
\[
\mathcal{K}_{ij}=\left\{ \left(k,\ell\right)\in\left\{ 1,2\dots N\right\} ^{2}\,\middle|\,\left|\left(k-i\right)\left(\ell-j\right)\right|=2\right\} .
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i,j}=1$
\end_inset

 if there is a knight in square 
\begin_inset Formula $\left(i,j\right)$
\end_inset

, with both 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $i$
\end_inset

 in 
\begin_inset Formula $\left\{ 1,2\dots N\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Set:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{K}_{ij}$
\end_inset

: the set of moves of a knight at position 
\begin_inset Formula $\left(i,j\right)$
\end_inset


\begin_inset Formula 
\[
\mathcal{K}_{ij}=\left\{ \left(k,\ell\right)\in\left\{ 1,2\dots N\right\} ^{2}\,\middle|\,\left|\left(k-i\right)\left(\ell-j\right)\right|=2\right\} ,\qquad\forall\left(i,j\right)\in\left\{ 1,2\dots N\right\} ^{2}.
\]

\end_inset

The constraint 
\begin_inset Formula $\left|\left(k-i\right)\left(\ell-j\right)\right|=2$
\end_inset

 indicates that either 
\begin_inset Formula $\left(k-i\right)$
\end_inset

 or 
\begin_inset Formula $\left(\ell-j\right)$
\end_inset

 is equal to either 
\begin_inset Formula $+2$
\end_inset

 or 
\begin_inset Formula $-2$
\end_inset

: the other factor must then be equal to either 
\begin_inset Formula $+1$
\end_inset

 or 
\begin_inset Formula $-1$
\end_inset

.
 This property is correct because 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $j$
\end_inset

, 
\begin_inset Formula $k$
\end_inset

, and 
\begin_inset Formula $\ell$
\end_inset

 are all integers.
\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
Each square 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 must either have one knight (
\begin_inset Formula $x_{ij}=1$
\end_inset

) or be covered by any other knight moves (some 
\begin_inset Formula $x_{k\ell}=1$
\end_inset

 for 
\begin_inset Formula $\left(k,\ell\right)\in\mathcal{K}_{ij}$
\end_inset

).
\begin_inset Formula 
\[
x_{ij}+\sum_{\left(k,\ell\right)\in\mathcal{K}_{ij}}x_{k\ell}\geq1,\qquad\forall i\in\left\{ 1,2\dots N\right\} ,\qquad\forall j\in\left\{ 1,2\dots N\right\} .
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
More modelling 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-More"

\end_inset


\end_layout

\begin_layout Remark*
The exercises in this section are harder than those of Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Warm-up"

\end_inset

, and often require techniques from Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Boolean-algebra"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Modelling-Thresholds"

\end_inset

.
 
\end_layout

\begin_layout Subsection
Volleyball teams 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Volleyball-teams"

\end_inset


\end_layout

\begin_layout Standard
Make teams for a volleyball tournament.
 Each team has exactly six members.
 
\end_layout

\begin_layout Standard
Then, consider the gender of the players: impose that each time has at least
 two men and two women.
 
\end_layout

\begin_layout Standard
For the next step, add the notion of level for each player; they are noted
 on a scale of one to four.
 Each team must have at least one person for three different levels.
 
\end_layout

\begin_layout Standard
Finally, define the objective: teams must be as similar to each other as
 possible.
 More precisely, the total 
\begin_inset Quotes eld
\end_inset

variance
\begin_inset Quotes erd
\end_inset

 of the level and presence of each gender must be as low as possible (the
 objective must remain linear).
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model (
\begin_inset Formula $x_{ij}$
\end_inset

: player 
\emph on

\begin_inset Formula $i\in\mathcal{P}$
\end_inset


\emph default
 in team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset

; 
\begin_inset Formula $n_{jk}$
\end_inset

: number of players of level 
\begin_inset Formula $k\in\mathcal{L}$
\end_inset

 in team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset

; 
\begin_inset Formula $h_{jk}$
\end_inset

: whether team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset

 has at least a player of level 
\begin_inset Formula $k\in\mathcal{L}$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{cccc}
\min & \Delta_{j}^{a,\mathrm{lvl}}+\Delta_{j}^{a,\mathrm{M}}+\Delta_{j}^{a,\mathrm{W}}\\
\text{s.t.} & \sum_{j\in\mathcal{T}}x_{ij}=1 & \forall i\in\mathcal{P}\\
 & \sum_{i\in\mathcal{P}}x_{ij}=6 & \forall j\in\mathcal{T}\\
 & \sum_{i\in\mathcal{P}}m_{i}\,x_{ij}\geq2 & \forall j\in\mathcal{T}\\
 & \sum_{i\in\mathcal{P}}\left(1-m_{i}\right)\,x_{ij}\geq2 & \forall j\in\mathcal{T}\\
 & n_{jk}=\sum_{i\in\mathcal{P}}x_{ij}\,l_{ik} & \forall j\in\mathcal{T},\forall k\in\mathcal{L}\\
 & h_{jk}\leq n_{jk} & \forall j\in\mathcal{T},\forall k\in\mathcal{L}\\
 & n_{jk}\leq M\,h_{jk} & \forall j\in\mathcal{T},\forall k\in\mathcal{L} & M=6\\
 & \sum_{k\in\mathcal{L}}h_{jk}\geq3 & \forall j\in\mathcal{T}\\
\\
 & \mathrm{lvl}_{j}=\sum_{k\in\mathcal{L}}k\,n_{jk} & \forall j\in\mathcal{T} & \text{same for M, W}\\
 & \left|\mathcal{T}\right|\,\overline{\mathrm{lvl}}=\sum_{j\in\mathcal{T}}\mathrm{lvl}_{j} &  & \text{same for M, W}\\
 & \Delta_{j}=\mathrm{lvl}_{j}-\overline{\mathrm{lvl}} & \forall j\in\mathcal{T} & \text{same for M, W}\\
 & \Delta_{j}^{a}\geq\Delta_{j} & \forall j\in\mathcal{T} & \text{same for M, W}\\
 & \Delta_{j}^{a}\geq-\Delta_{j} & \forall j\in\mathcal{T} & \text{same for M, W}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{P}$
\end_inset

: the set of players
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of teams
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{L}$
\end_inset

: the set of levels
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $m_{i}$
\end_inset

: whether player 
\begin_inset Formula $i\in\mathcal{P}$
\end_inset

 is a man
\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{ik}$
\end_inset

: whether player 
\begin_inset Formula $i\in\mathcal{P}$
\end_inset

 has level 
\begin_inset Formula $k\in\mathcal{L}$
\end_inset

 (number from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $4$
\end_inset

)
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ij}\in\mathcal{B}$
\end_inset

: whether player 
\begin_inset Formula $i\in\mathcal{P}$
\end_inset

 is in team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $n_{jk}\in\mathbb{N}$
\end_inset

: number of players of level 
\begin_inset Formula $k\in\mathcal{L}$
\end_inset

 in team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $h_{jk}\in\mathcal{B}$
\end_inset

: whether team 
\begin_inset Formula $j\in\mathcal{T}$
\end_inset

 has at least a player of level 
\begin_inset Formula $k\in\mathcal{L}$
\end_inset


\end_layout

\begin_layout Standard
Objective? See later.
 
\begin_inset Newline newline
\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
A player can be in a single team: 
\begin_inset Formula 
\[
\sum_{j\in\mathcal{T}}x_{ij}=1,\qquad\forall i\in\mathcal{P}.
\]

\end_inset


\end_layout

\begin_layout Itemize
A team has six players: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{P}}x_{ij}=6,\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
At least two men in a team: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{P}}m_{i}\,x_{ij}\geq2,\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
At least two women in a team: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{P}}\left(1-m_{i}\right)\,x_{ij}\geq2,\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Define variable 
\begin_inset Formula $n_{jk}$
\end_inset

: 
\begin_inset Formula 
\[
n_{jk}=\sum_{i\in\mathcal{P}}x_{ij}\,l_{ik},\qquad\forall j\in\mathcal{T},\forall k\in\mathcal{L}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Define variable 
\begin_inset Formula $h_{jk}$
\end_inset

 (in other words: 
\begin_inset Formula $h_{jk}=\left[l_{jk}\geq1\right]$
\end_inset

): 
\begin_inset Formula 
\[
h_{jk}\leq n_{jk},\qquad\forall j\in\mathcal{T},\forall k\in\mathcal{L},
\]

\end_inset


\begin_inset Formula 
\[
n_{jk}\leq M\,h_{jk},\qquad M=6,\qquad\forall j\in\mathcal{T},\forall k\in\mathcal{L}.
\]

\end_inset

Need both bounds: cannot expect that the solver will push it up or down!
 (
\begin_inset Formula $M$
\end_inset

 is the number of players per team.)
\begin_inset Newline newline
\end_inset

Show this is correct for 
\begin_inset Formula $n_{jk}=0$
\end_inset

.
 
\series bold
Second
\series default
 constraint disabled! 
\begin_inset Formula 
\[
h_{jk}\leq0,\qquad0\leq6\,h_{jk},\qquad\mbox{only valid value: }h_{jk}=0.
\]

\end_inset

Show this is correct for 
\begin_inset Formula $n_{jk}=1$
\end_inset

.
 
\series bold
First
\series default
 constraint disabled! 
\begin_inset Formula 
\[
y\in\left\{ 0,1\right\} .
\]

\end_inset


\begin_inset Formula 
\[
h_{jk}\leq1,\qquad1\leq6\,h_{jk},\qquad\mbox{only valid value: }h_{jk}=1.
\]

\end_inset

Show this is correct for 
\begin_inset Formula $n_{jk}=2$
\end_inset

.
 
\series bold
First
\series default
 constraint disabled! 
\begin_inset Formula 
\[
h_{jk}\leq2,\qquad2\leq6\,h_{jk},\qquad\mbox{only valid value: }h_{jk}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize
At least three different levels in a team: 
\begin_inset Formula 
\[
\sum_{k\in\mathcal{L}}h_{jk}\geq3,\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Standard

\series bold
Objective?
\series default
 Teams as close to each other as possible: same level, same number for each
 gender.
 Minimise the 
\begin_inset Quotes eld
\end_inset

variance
\begin_inset Quotes erd
\end_inset

 (the thing that is closest to it while still linear).
 
\begin_inset Formula 
\[
\min\sum_{j}\left[\left|\overline{\mathrm{lvl}}-\mathrm{lvl}_{j}\right|+\left|\overline{\mathrm{M}}-\mathrm{M}_{j}\right|+\left|\overline{\mathrm{W}}-\mathrm{W}_{j}\right|\right].
\]

\end_inset

Developments for only one criterion (say, level).
 New variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\overline{\mathrm{lvl}}$
\end_inset

: average level (continous)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{lvl}_{j}$
\end_inset

: total level of team 
\begin_inset Formula $j$
\end_inset

 (integer)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Delta_{j}$
\end_inset

: signed difference of level between team 
\begin_inset Formula $j$
\end_inset

 and average (continous)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Delta_{j}^{a}$
\end_inset

: absolute value of 
\begin_inset Formula $\Delta_{j}$
\end_inset

 (continous, positive)
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
Define level of a team: 
\begin_inset Formula 
\[
\mathrm{lvl}_{j}=\sum_{k\in\mathcal{L}}k\,n_{jk},\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Define average level: 
\begin_inset Formula 
\[
\left|\mathcal{T}\right|\,\overline{\mathrm{lvl}}=\sum_{j\in\mathcal{T}}\mathrm{lvl}_{j}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Define the signed difference: 
\begin_inset Formula 
\[
\Delta_{j}=\mathrm{lvl}_{j}-\overline{\mathrm{lvl}},\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Define the absolute value: 
\begin_inset Formula 
\[
\Delta_{j}^{a}\geq\Delta_{j},\qquad\Delta_{j}^{a}\geq-\Delta_{j},\qquad\forall j\in\mathcal{T}.
\]

\end_inset


\end_layout

\begin_layout Standard
Objective (just for the level; sum the other components): 
\begin_inset Formula 
\[
\min\Delta_{j}^{a}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
* Greatest common divisor 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-GCD"

\end_inset


\end_layout

\begin_layout Standard
Write a mixed-integer linear optimisation program that computes the greatest
 common divisor (GCD) of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, two non-zero natural numbers.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model:
\begin_inset Formula 
\[
\begin{array}{cc}
\min & A\\
\text{s.t.} & a\,B=A\,b
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $x$
\end_inset

 be the GCD of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
 By definition, 
\begin_inset Formula 
\[
\begin{array}{cc}
\max & x\\
\mbox{s.t.} & \nicefrac{a}{x}\in\mathbb{N}_{0},\\
 & \nicefrac{b}{x}\in\mathbb{N}_{0},\\
 & x\in\mathbb{N}_{0}.
\end{array}
\]

\end_inset

However, it is far from linear.
 Define 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 such that 
\begin_inset Formula 
\[
A=\frac{a}{x},\qquad B=\frac{b}{x}.
\]

\end_inset

These can be rewritten as 
\begin_inset Formula 
\[
x=\frac{a}{A}=\frac{b}{B},\qquad\mathrm{hence}\qquad a\,B=A\,b.
\]

\end_inset

The optimisation program thus becomes 
\begin_inset Formula 
\[
\begin{array}{cc}
\max & \mathbf{\nicefrac{\mathbf{a}}{A}}\\
\mbox{s.t.} & a\,B=A\,b,\\
 & A,B\in\mathbb{N}_{0}
\end{array}\qquad\mathrm{or}\qquad\begin{array}{cc}
\max & \mathbf{\nicefrac{\mathbf{b}}{B}}\\
\mbox{s.t.} & a\,B=A\,b,\\
 & A,B\in\mathbb{N}_{0}.
\end{array}
\]

\end_inset

The numerator being constant, these programs reduce to 
\begin_inset Formula 
\[
\begin{array}{cc}
\mathbf{min} & \mathbf{A}\\
\mbox{s.t.} & a\,B=A\,b,\\
 & A,B\in\mathbb{N}_{0}
\end{array}\qquad\mathrm{or}\qquad\begin{array}{cc}
\mathbf{min} & \mathbf{B}\\
\mbox{s.t.} & a\,B=A\,b,\\
 & A,B\in\mathbb{N}_{0}.
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Attic problem 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Attic-problem"

\end_inset


\end_layout

\begin_layout Enumerate
Your aunt passes away, you and your sister are her only heirs.
 How to solve inheritance problems? Minimise the unfairness when splitting
 the heritage (consisting of a list of objects to divide amongst the two
 of you), computed with various criteria: monetary value, volume, sentimental
 value.
 Each of you shall get approximately the same amount for each of these criteria
 out of the heritage of your late aunt.
 
\end_layout

\begin_layout Enumerate
* However, your notary is in a hurry, and would want the actual distribution
 rather soon.
 Why is your model so slow to solve with many objects? Find an explanation
 that your notary could understand.
 
\begin_inset Newline newline
\end_inset


\emph on
Hint:
\emph default
 what is the value for the first LP relaxation?
\begin_inset Newline newline
\end_inset

To solve this question, you will need the material of Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Branch-and-bound-algorithm"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
Later on, you hear about a mysterious hidden child.
 With the help of your genealogist friend, you can find her.
 Decide again how to split the heritage among the three of you, even though
 your notary is far from happy with this situation.
 
\end_layout

\begin_layout Enumerate
To help him solve such problems quickly, your notary would like an automated
 tool to solve such problems quickly.
 Impressed with your pedagogical skills and explanations, he proposes you
 a consulting job to implement an enhanced version of your model that solves
 these deficiencies.
 What amount should you bill him (€100 per hour, including all taxes) and
 what ideas can you present to justify your salary? 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
You can use the following model:
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{j\in\mathcal{C}}z_{j}\\
\text{s.t.} & z_{j}\geq s_{j} & \forall j\in\mathcal{C}\\
 & z\geq-s_{j} & \forall j\in\mathcal{C}\\
 & \underbrace{\sum_{i\in\mathcal{O}}x_{i}\,w_{ij}}_{\substack{\mathrm{what\,the\,first}\\
\mathrm{person\,has}
}
}+s_{j}=\overline{w}_{j} & \forall j\in\mathcal{C}
\end{array}
\]

\end_inset

The LP relaxation of this model never gives an integer solution; moreover,
 its value is always zero.
 The solver must perform many branch before having a nonzero objective value.
\begin_inset Newline newline
\end_inset

With several persons: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{j\in\mathcal{C}}z_{j}\\
\text{s.t.} & z_{j}\geq s_{j} & \forall j\in\mathcal{C}\\
 & z\geq-s_{j} & \forall j\in\mathcal{C}\\
 & \sum_{k\in\mathcal{P}}x_{ik}=1 & \forall i\in\mathcal{O}\\
 & \sum_{i\in\mathcal{O}}x_{i}\,w_{ij}+s_{j}=\overline{w}_{j} & \forall j\in\mathcal{C}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection

\series bold
Basic attic problem (two persons)
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}$
\end_inset

: the set of objects.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{C}$
\end_inset

: the set of criteria.
 
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{ij}$
\end_inset

: actual value for object 
\begin_inset Formula $i$
\end_inset

 for criterion 
\begin_inset Formula $j$
\end_inset

.
 (Objective evaluation thereof.) 
\begin_inset Formula $\in\mathbb{R}^{+},\forall i\in\mathcal{O},\forall j\in\mathcal{C}$
\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i}=1$
\end_inset

 when the first person takes the object 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $0$
\end_inset

 if the second person takes it.
 
\begin_inset Formula $\in\mathcal{B},\forall i\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{j}$
\end_inset

 is the slack with respect to the ideal case.
 
\begin_inset Formula $\in\mathbb{R},\forall j\in\mathcal{C}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $z_{j}$
\end_inset

 is the absolute value of 
\begin_inset Formula $s_{j}$
\end_inset

.
 
\begin_inset Formula $\in\mathbb{R}^{+},\forall j\in\mathcal{C}$
\end_inset

 
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
Link between the variables, where 
\begin_inset Formula $\overline{w}_{j}$
\end_inset

 is the ideal repartition for criterion 
\begin_inset Formula $j$
\end_inset

: 
\begin_inset Formula 
\[
\underbrace{\sum_{i\in\mathcal{O}}x_{i}\,w_{ij}}_{\substack{\mathrm{what\,the\,first}\\
\mathrm{person\,has}
}
}+s_{j}=\overline{w}_{j},\qquad\forall j\in\mathcal{C}.
\]

\end_inset


\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min\sum_{j\in\mathcal{C}}\left|s_{j}\right|.
\]

\end_inset


\end_layout

\begin_layout Standard
How to deal with absolute values? Here: 
\begin_inset Formula 
\[
z_{j}\geq s_{j},\qquad z\geq-s_{j},\qquad\forall j\in\mathcal{C}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Slowness
\end_layout

\begin_layout Standard
Actually, the linear relaxation is very often zero during the tree exploration.
 Even with branching, it is still very often zero: impose 
\begin_inset Formula $s_{j}=0$
\end_inset

, the first relaxation imposes non-integer values for 
\begin_inset Formula $x_{i}$
\end_inset

; branch, there is one integer value for 
\begin_inset Formula $x_{i}$
\end_inset

, but all the others are still far from integrality.
 After many branching steps, finally, integer-feasible solutions start to
 appear.
 
\end_layout

\begin_layout Standard
Why integer solution appear so late in the game? Say there are three objects,
 one criterion.
 Weights: 
\begin_inset Formula 
\[
\left(50,20,35\right).
\]

\end_inset

Root: how to get a zero? The only constraint is: 
\begin_inset Formula 
\[
50\,x_{1}+20\,x_{2}+35\,x_{3}+\underbrace{s}_{0}=\frac{105}{2},
\]

\end_inset

hence an infinity of solutions for 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Then, branch: say, 
\begin_inset Formula $x_{1}=1$
\end_inset

.
 Then the constraint becomes: 
\begin_inset Formula 
\[
\underbrace{50\,x_{1}}_{50}+20\,x_{2}+35\,x_{3}+\underbrace{s}_{0}=\frac{105}{2},
\]

\end_inset


\begin_inset Formula 
\[
20\,x_{2}+35\,x_{3}+\underbrace{s}_{0}=\frac{5}{2},
\]

\end_inset

infinitely many solutions for 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Then, branch: say 
\begin_inset Formula $x_{2}=0$
\end_inset

.
 Then the constraint becomes: 
\begin_inset Formula 
\[
\underbrace{50\,x_{1}}_{50}+\underbrace{20\,x_{2}}_{0}+35\,x_{3}+\underbrace{s}_{0}=\frac{105}{2},
\]

\end_inset


\begin_inset Formula 
\[
35\,x_{3}+\underbrace{s}_{0}=\frac{5}{2},
\]

\end_inset

where there is only one solution: 
\begin_inset Formula 
\[
x_{3}=\frac{5}{70}.
\]

\end_inset

Still not integral, but objective function is zero! 
\begin_inset Newline newline
\end_inset

Then, branch: say 
\begin_inset Formula $x_{3}=1$
\end_inset

, bottom of the tree (no more branching can occur in this direction, all
 integer variables have their value fixed).
 Now, 
\begin_inset Formula $s$
\end_inset

 can no more be zero! 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename F:/Univ/_PhD/TA/MATH0462/Syllabus/2_4_attic_BB_tree.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Attic problem: B&B tree.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
More than two persons
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{P}$
\end_inset

: the set of persons.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}$
\end_inset

: the set of objects.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{C}$
\end_inset

: the set of criteria.
 
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{ij}$
\end_inset

: actual value for object 
\begin_inset Formula $i$
\end_inset

 for criterion 
\begin_inset Formula $j$
\end_inset

.
 (Objective evaluation thereof.) 
\begin_inset Formula $\in\mathbb{R}^{+},\forall i\in\mathcal{O},\forall j\in\mathcal{C}$
\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ik}=1$
\end_inset

 when the person 
\begin_inset Formula $k$
\end_inset

 takes the object 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula $\in\mathcal{B},\forall i\in\mathcal{O},\forall k\in\mathcal{P}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{j}$
\end_inset

 is the slack with respect to the ideal case.
 
\begin_inset Formula $\in\mathbb{R},\forall j\in\mathcal{C}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $z_{j}$
\end_inset

 is the absolute value of 
\begin_inset Formula $s_{j}$
\end_inset

.
 
\begin_inset Formula $\in\mathbb{R}^{+},\forall j\in\mathcal{C}$
\end_inset

 
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
An object is taken by exactly one person: 
\begin_inset Formula 
\[
\sum_{k\in\mathcal{P}}x_{ik}=1,\qquad\forall i\in\mathcal{O}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Link between the variables, where 
\begin_inset Formula $\overline{w}_{j}$
\end_inset

 is the ideal repartition for criterion 
\begin_inset Formula $j$
\end_inset

: 
\begin_inset Formula 
\[
\sum_{i\in\mathcal{O}}x_{i}\,w_{ij}+s_{j}=\overline{w}_{j},\qquad\forall j\in\mathcal{C}.
\]

\end_inset


\end_layout

\begin_layout Itemize
Absolute value: 
\begin_inset Formula 
\[
z_{j}\geq s_{j},\qquad z\geq-s_{j},\qquad\forall j\in\mathcal{C}.
\]

\end_inset


\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min\sum_{j\in\mathcal{C}}\left|s_{j}\right|.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Better formulation
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset href
LatexCommand href
name "Combining Problem Structure with Basis Reduction to Solve a Class of Hard Integer Programs"
target "http://www.jstor.org/stable/3690447"
literal "false"

\end_inset

 (tackling this specific problem) and 
\begin_inset CommandInset href
LatexCommand href
name "Solving a System of Linear Diophantine Equations with Lower and Upper Bounds on the Variables "
target "http://www.jstor.org/stable/3690447"
literal "false"

\end_inset

 (for backgrounds on solutions to systems of diophantine equations).
 
\end_layout

\begin_layout Standard
In short: notice that the equation 
\begin_inset Formula $\sum_{i\in\mathcal{O}}x_{i}\,w_{ij}+s_{j}=\overline{w}_{j}$
\end_inset

 can be turned into a diophantine equation (multiplying by some given integer,
 all coefficients become integers).
 At this stage, the 
\begin_inset Formula $s_{j}$
\end_inset

 become integer variables.
 This simple transformation might help the solver to find an optimal solution
 much faster.
 
\end_layout

\begin_layout Standard
To go further, the system of diophantine equations can be rewritten with
 a lattice decomposition, with a new set of constraints and variables.
 The idea is to find a vector basis of the integer solutions, i.e.
 to rewrite the equations as 
\begin_inset Formula $\mathbf{x}=\mathbf{q}+\sum_{i}\lambda_{i}\,\mathbf{p}_{i}$
\end_inset

: if the 
\begin_inset Formula $\lambda$
\end_inset

 take integer values, then the combination gives an integer solution to
 the problem.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Truck transportation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Trucks"

\end_inset


\end_layout

\begin_layout Standard
A company has a limited number of trucks to ship objects from their storehouse
 in Germany to the one in Belgium.
 Trucks have all the same cross section but differ in length.
 The objects have different lengths, but their width and height are standardized
 to the cross section of trucks.
 Model the following 3 
\series bold
independent
\series default
 problems a mixed-integer linear programs.
\end_layout

\begin_layout Enumerate
The company wants to minimize the number of trucks needed to ship the objects.
\end_layout

\begin_layout Enumerate
Each truck can carry a limited weight and the company wants to minimize
 the shipping cost.
 For each truck the shipping cost is composed of a fixed cost to pay if
 the truck takes the road and a variable cost proportional to the weight
 of the truck.
\end_layout

\begin_layout Enumerate
Truck drivers are divided in teams that stay together on the road.
 The company has a list of dependency between objects.
 If an object 
\begin_inset Formula $a$
\end_inset

 is dependent of an object 
\begin_inset Formula $b$
\end_inset

, it means that a must be shipped by the same team that ships object 
\begin_inset Formula $b$
\end_inset

.
 The company now wants to minimize the maximum empty space among the trucks
 assigned to take the road.
\end_layout

\begin_layout Subsection
Tennis championship 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Tennis"

\end_inset


\end_layout

\begin_layout Standard
A tennis club wants to organise a small championship between its 20 members.
 As time is limited, only 6 sessions of 10 simultaneous matches can be organised.
 Each player will have to play against 6 different opponents.
 
\end_layout

\begin_layout Enumerate
If each potential pair of opponents 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 is associated to a value 
\begin_inset Formula $c_{i,j}$
\end_inset

, formulate the problem of determining the programme of the matches that
 maximises the sum of all the 
\begin_inset Formula $c_{i,j}$
\end_inset

 for the organised matches as a mixed integer linear program.
 
\end_layout

\begin_layout Enumerate
Each player is associated with a strength 
\begin_inset Formula $f_{i}$
\end_inset

.
 We can define 
\begin_inset Formula $S_{j}$
\end_inset

 as the sum of all the 
\begin_inset Formula $f_{i}$
\end_inset

 of the opponents that player 
\begin_inset Formula $i$
\end_inset

 meets during their 6 matches.
 Formulate as a mixed integer linear program the problem of determining
 a matches programme such that, among all players, the difference between
 the largest 
\begin_inset Formula $S_{j}$
\end_inset

 and the smallest 
\begin_inset Formula $S_{j}$
\end_inset

 is minimum.
 
\end_layout

\begin_layout Subsection
Exam schedule 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Exams"

\end_inset


\end_layout

\begin_layout Standard
You wish to write a tool that automatically determines an exam schedule.
 To this end, you have a list 
\begin_inset Formula $S$
\end_inset

 of students and a list 
\begin_inset Formula $C$
\end_inset

 of courses.
 Each student 
\begin_inset Formula $i$
\end_inset

 follows a subset 
\begin_inset Formula $C_{i}$
\end_inset

 of courses.
 Each course 
\begin_inset Formula $j$
\end_inset

 is followed by a subset 
\begin_inset Formula $S_{j}$
\end_inset

 of students.
 Finally, all the exams must take place in a two-week period, from Monday
 to Friday.
 You can suppose that there are enough rooms.
\end_layout

\begin_layout Enumerate
Formulate the discrete problem of finding a valid schedule such that no
 student ever has two exams on the same day or during two consecutive days
 as a mixed-integer linear program.
 
\end_layout

\begin_layout Enumerate
Formulate the discrete optimisation problem of finding a valid schedule
 such that no student ever has two exams on the same day and that maximises
 the minimum number of days between two exams for each student as a mixed-intege
r linear program.
 
\end_layout

\begin_layout Subsection
Schmurf game 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Schmurf-game"

\end_inset


\end_layout

\begin_layout Standard
A player wants to write an optimisation model to set up his best team in
 the video game 
\emph on
Schmurf
\emph default
.
 In the game 
\emph on
Schmurf
\emph default
, a player has a budget of 1000 
\emph on
coins
\emph default
 to set up a team of as many 
\emph on
warriors 
\emph default
as they want.
 Each warrior has a given 
\emph on
strength
\emph default
 and a given 
\emph on
stamina
\emph default
.
 There are five different types of warriors whose characteristics are given
 in the table below.
 
\end_layout

\begin_layout Standard
Formulate as a linear (mixed-)integer optimisation program the following
 problems: 
\end_layout

\begin_layout Enumerate
Buying a team with the highest strength.
 
\end_layout

\begin_layout Enumerate
Buying a team with a total stamina that is as close as possible to twice
 the total strength (considering that it is maybe not possible to have a
 stamina exactly equal to twice the total strength) and a strength of at
 least 200.
 
\end_layout

\begin_layout Enumerate
A team will play against opponents lying is seven different rooms.
 The team must be split in seven smaller teams with a winning probability
 in each room given by a linear function of the number of warriors of each
 type.
 Explain how to create a split in seven teams so as to maximise the expected
 number of winning rooms of the whole team.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strength
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stamina
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Price
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Data for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-More-Schmurf-game"

\end_inset

.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Storing files on flash drives  
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Flash-drives"

\end_inset


\end_layout

\begin_layout Standard
We want to store computer files on flash drives.
 For technical reasons, each file cannot be split and stored in pieces on
 separate drives.
 We assume that we have 
\begin_inset Formula $n_{2}$
\end_inset

 files of 2 GB, 
\begin_inset Formula $n_{3}$
\end_inset

 files of 3 GB, 
\begin_inset Formula $n_{5}$
\end_inset

 files of 5 GB and 
\begin_inset Formula $n_{7}$
\end_inset

 files of size 7 GB.
\end_layout

\begin_layout Enumerate
Model the problem of storing the 
\begin_inset Formula $n_{2}+n_{3}+n_{5}+n_{7}$
\end_inset

 files on a minimum number of flash drives of size 16 GB each.
\end_layout

\begin_layout Enumerate
Assume flash drives of 32 GB cost 9 euros, flash drives of 16 GB cost 5
 euros and flash drives of 8 GB cost 3 euros.
 Model the problem of minimising the cost of storing the 
\begin_inset Formula $n_{2}+n_{3}+n_{5}+n_{7}$
\end_inset

 files.
\end_layout

\begin_layout Subsection
Scout staffs 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-Scout-staffs"

\end_inset


\end_layout

\begin_layout Standard
A chief scout needs to make the new staffs for the next year to come.
 He must choose which people goes in which staff.
 They are three different staffs: 
\emph on
wolf clubs
\emph default
, 
\emph on
boy scouts
\emph default
, and 
\emph on
rover scouts
\emph default
.
 Obviously, everyone cannot go in each staff and everyone has referred in
 which staff they may go.
 Each staff must have a reasonable size and everyone should be assigned
 to a staff.
 The goal of the chief scout is to maximize the harmony in each staff.
 To this end, he has an 
\emph on
affinity matrix
\emph default
 giving a value corresponding to the degree of friendship between two persons.
\end_layout

\begin_layout Standard
We generalize the problem for 
\begin_inset Formula $N$
\end_inset

 staffs and 
\begin_inset Formula $M$
\end_inset

 persons.
 Each staff 
\begin_inset Formula $k$
\end_inset

 must be leaded by minimum 
\begin_inset Formula $l_{k}$
\end_inset

 and maximum 
\begin_inset Formula $u_{k}$
\end_inset

 persons.
 For every person 
\begin_inset Formula $i$
\end_inset

 and every staff 
\begin_inset Formula $k$
\end_inset

, we have a Boolean 
\begin_inset Formula $s_{i,k}$
\end_inset

 equal to 
\begin_inset Formula $1$
\end_inset

 if the 
\begin_inset Formula $i$
\end_inset

 can go in staff 
\begin_inset Formula $k$
\end_inset

, 
\begin_inset Formula $0$
\end_inset

 otherwise.
 The degree of friendship between 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 is given by 
\begin_inset Formula $a_{i,j}$
\end_inset

 (the affinity matrix).
 
\end_layout

\begin_layout Standard
Model this problem as a mixed-integer linear program.
\end_layout

\begin_layout Subsection
CPU scheduling 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-More-CPU-scheduling"

\end_inset


\end_layout

\begin_layout Standard
Scheduling tasks on a supercomputer typically requires user to specify parameter
s about their jobs in advance: number of cores, total execution time, amount
 of RAM and disk space; users are expected to know precisely their needs.
 This way, the supercomputer administrator can schedule jobs to use the
 machine near 100% of its capacity, thereby justifying the high buying costs
 of this kind of hardware.
 
\begin_inset CommandInset href
LatexCommand href
name "Slurm"
target "https://slurm.schedmd.com/"
literal "false"

\end_inset

 is a software scheduler that uses this information to maximise usage of
 the cluster.
\end_layout

\begin_layout Standard
Scheduling services on private cloud infrastructure is similar, with the
 difference that these services must always be running and ready to accept
 new requests.
 Acknowledging the higher uncertainty in the server load (because service
 usage cannot be predicted with a high level of confidence), the goal is
 not to use the available machines to their full capacity, but rather to
 spread the load among them.
 A typical objective function is to minimise the maximum load.
 
\end_layout

\begin_layout Enumerate
Formulate the problem of job scheduling on private cloud infrastructure,
 considering only CPU usage, as a mixed-integer program.
\end_layout

\begin_layout Enumerate
Formulate the problem of job scheduling on supercomputers, considering only
 the processing time (an integer value), as a mixed-integer program.
 Maximising the usage of the cluster is equivalent to having the last task
 executed as soon as possible (an objective also called 
\emph on
makespan minimisation
\emph default
).
 The problem is sometimes called 
\emph on
open-shop scheduling
\emph default
.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Enumerate
.
\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \ell_{\max}\\
\text{s.t.} & \sum_{m\in\mathcal{M}}x_{m,t}=1 & \forall t\in\mathcal{T}\\
 & \ell_{m}=\sum_{t\in\mathcal{T}}r_{t}\,x_{m,t} & \forall m\in\mathcal{M}\\
 & \ell_{\max}\geq\ell_{m} & \forall m\in\mathcal{M}\\
 & \ell_{m}\geq0 & \forall m\in\mathcal{M}\\
 & \ell_{\max}\geq0\\
 & x_{m,t}\in\left\{ 0,1\right\}  & \forall m\in\mathcal{M},\forall t\in\mathcal{T}
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Solution for supercomputer scheduling
\end_layout

\begin_layout Standard
Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $t_{\max}\in\mathbb{N}$
\end_inset

: the makespan
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{m,t}=1$
\end_inset

 if task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset

 is scheduled on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{m,t}\in\mathbb{N}$
\end_inset

: the start time of task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset

 on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset

, 0 if the task 
\begin_inset Formula $t$
\end_inset

 is not scheduled on machine 
\begin_inset Formula $m$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $s_{m,t}+p_{t}$
\end_inset

 is the end time of the task if it is scheduled on 
\begin_inset Formula $m$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $z_{t_{1},t_{2},m}\in\left\{ 0,1\right\} $
\end_inset

: 1 if task 
\begin_inset Formula $t_{1}\in\mathcal{T}$
\end_inset

 is executed before task 
\begin_inset Formula $t_{2}\in\mathcal{T}$
\end_inset

 on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset

 (i.e.
 if 
\begin_inset Formula $x_{m,t_{1}}=1$
\end_inset

, 
\begin_inset Formula $x_{m,t_{2}}=1$
\end_inset

, and 
\begin_inset Formula $s_{m,t_{1}}<s_{m,t_{2}}$
\end_inset

), 0 otherwise
\end_layout

\begin_layout Standard
Set:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of tasks
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{M}$
\end_inset

: the set of machines
\end_layout

\begin_layout Standard
Data:
\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{t}\in\mathbb{N}$
\end_inset

: processing time of task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $M=\sum_{t\in\mathcal{T}}p_{t}$
\end_inset

, a bound on the value of 
\begin_inset Formula $s_{m,t}$
\end_inset

 for 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset

 and 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{m,t}$
\end_inset

 is zero when task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset

 is not scheduled on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset

:
\begin_inset Formula 
\[
s_{m,t}\leq M\,x_{m,t},\qquad\forall m\in\mathcal{M},\forall t\in\mathcal{T}
\]

\end_inset


\end_layout

\begin_layout Itemize
The makespace 
\begin_inset Formula $t_{\max}$
\end_inset

 is at least the time task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset

 ends:
\begin_inset Formula 
\[
t_{\max}\geq s_{m,t}+p_{t},\qquad\forall m\in\mathcal{M},\forall t\in\mathcal{T}
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $z_{t_{1},t_{2},m}$
\end_inset

 can only be 
\begin_inset Formula $1$
\end_inset

 if both tasks 
\begin_inset Formula $t_{1}\in\mathcal{T}$
\end_inset

 and 
\begin_inset Formula $t_{2}\in\mathcal{T}$
\end_inset

 are scheduled on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset

:
\begin_inset Formula 
\[
z_{t_{1},t_{2},m}\leq x_{m,t_{1}},\qquad\forall t_{1}\in\mathcal{T},\forall m\in\mathcal{M}
\]

\end_inset


\begin_inset Formula 
\[
z_{t_{1},t_{2},m}\leq x_{m,t_{2}},\qquad\forall t_{2}\in\mathcal{T},\forall m\in\mathcal{M}
\]

\end_inset


\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $z_{t_{1},t_{2},m}$
\end_inset

, then the starting time 
\begin_inset Formula $s_{m,t_{2}}$
\end_inset

 of the task 
\begin_inset Formula $t_{2}\in\mathcal{T}$
\end_inset

 must be at least that 
\begin_inset Formula $s_{m,t_{1}}$
\end_inset

 of the task 
\begin_inset Formula $t_{1}\in\mathcal{T}$
\end_inset

 plus its processing time 
\begin_inset Formula $p_{1}$
\end_inset

:
\begin_inset Formula 
\[
M\cdot\left(1-z_{t_{1},t_{2},m}\right)+s_{m,t_{2}}\geq s_{m,t_{1}}+p_{t_{1}},\qquad\forall t_{1}\in\mathcal{T},\forall t_{2}\in\mathcal{T},\forall m\in\mathcal{M}
\]

\end_inset

This is correct, because: if 
\begin_inset Formula $z_{t_{1},t_{2},m}=1$
\end_inset

, then the constraint reduces to 
\begin_inset Formula $s_{m,t_{2}}\geq s_{m,t_{1}}+p_{t_{1}}$
\end_inset

; otherwise, if 
\begin_inset Formula $z_{t_{1},t_{2},m}=0$
\end_inset

, the constraint is equivalent to 
\begin_inset Formula $M\geq s_{m,t_{1}}+p_{t_{1}}$
\end_inset

, where 
\begin_inset Formula $M$
\end_inset

 is the largest possible value of any end time 
\begin_inset Formula $s_{m,t}+p_{t}$
\end_inset

.
\end_layout

\begin_layout Standard
Objective:
\begin_inset Formula 
\[
\min t_{\max}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Solution for private cloud scheduling
\end_layout

\begin_layout Standard
Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{m,t}=1$
\end_inset

 if task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset

 is scheduled on machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\ell_{m}\in\mathbb{R}^{+}$
\end_inset

: load of machine 
\begin_inset Formula $m\in\mathcal{M}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\ell_{\max}\in\mathbb{R}^{+}$
\end_inset

: maximum load over the cluster
\end_layout

\begin_layout Standard
Set:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{T}$
\end_inset

: the set of tasks
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{M}$
\end_inset

: the set of machines
\end_layout

\begin_layout Standard
Data:
\end_layout

\begin_layout Itemize
\begin_inset Formula $r_{t}\in\mathbb{R}^{+}$
\end_inset

: resource usage of task 
\begin_inset Formula $t\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Standard
Constraints:
\end_layout

\begin_layout Itemize
Each task must be scheduled exactly once:
\begin_inset Formula 
\[
\sum_{m\in\mathcal{M}}x_{m,t}=1,\qquad\forall t\in\mathcal{T}
\]

\end_inset


\end_layout

\begin_layout Itemize
The load 
\begin_inset Formula $\ell_{m}$
\end_inset

 of a machine 
\begin_inset Formula $m$
\end_inset

 is defined as the sum of resource usage for tasks scheduled on 
\begin_inset Formula $m$
\end_inset

:
\begin_inset Formula 
\[
\ell_{m}=\sum_{t\in\mathcal{T}}r_{t}\,x_{m,t},\qquad\forall m\in\mathcal{M}
\]

\end_inset


\end_layout

\begin_layout Itemize
The maximum load is greater than all the loads: 
\begin_inset Formula 
\[
\ell_{\max}\geq\ell_{m},\qquad\forall m\in\mathcal{M}
\]

\end_inset

(This constraint is not sufficient for 
\begin_inset Formula $\ell_{\max}$
\end_inset

 to be equal to 
\begin_inset Formula $\max_{m\in\mathcal{M}}\ell_{m}$
\end_inset

: 
\begin_inset Formula $\ell_{\max}$
\end_inset

 must also be minimised.)
\end_layout

\begin_layout Standard
Objective:
\begin_inset Formula 
\[
\min\ell_{\max}
\]

\end_inset


\end_layout

\begin_layout Standard
Julia implementation:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

using JuMP
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

N = 2
\end_layout

\begin_layout Plain Layout

tasks = [100, 50, 25, 25]
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

m = Model()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@variable(m, assign[i in 1:N, t in 1:length(tasks)], Bin)
\end_layout

\begin_layout Plain Layout

@variable(m, load[i in 1:N] >= 0)
\end_layout

\begin_layout Plain Layout

@variable(m, max_load >= 0)
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

@constraint(m, task_scheduled_once[t in 1:length(tasks)],
\end_layout

\begin_layout Plain Layout

            sum(assign[:, t]) == 1)
\end_layout

\begin_layout Plain Layout

@constraint(m, set_sum_load[i in 1:N],
\end_layout

\begin_layout Plain Layout

            load[i] == sum(tasks[t] * assign[i, t] for t in 1:length(tasks)))
\end_layout

\begin_layout Plain Layout

@constraint(m, set_max_load[i in 1:N],
\end_layout

\begin_layout Plain Layout

            max_load >= load[i])
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

@objective(m, Min, max_load)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Graph 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modelling-Graph"

\end_inset


\end_layout

\begin_layout Standard
The following notations are commonly used when dealing with graphs: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 is a graph whose edges are in set 
\begin_inset Formula $E$
\end_inset

 and vertices in 
\begin_inset Formula $V$
\end_inset

.
 An edge is a pair of vertices: 
\begin_inset Formula $E\subseteq V^{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta\!\left(i\right)$
\end_inset

 is the set of edges that go in or out of vertex 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(i\right)=\left\{ \left(i,j\right)\,\Big|\,j\in V,\left(i,j\right)\in E\right\} .
\]

\end_inset

The same notation is often used when 
\begin_inset Formula $\mathcal{I}$
\end_inset

 is a set of vertices, and represents the set of edges that start within
 the set 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and end outside 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(\mathcal{I}\right)=\left\{ \left(i,j\right)\,\Big|\,i\in\mathcal{I},\left(i,j\right)\in E,j\not\in\mathcal{I}\right\} .
\]

\end_inset

In the particular case where 
\begin_inset Formula $S=V$
\end_inset

, 
\begin_inset Formula 
\[
\delta\!\left(S\right)=\emptyset.
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $E\!\left(S\right)$
\end_inset

 is the set of edges between the nodes of set 
\begin_inset Formula $S\subseteq V$
\end_inset

.
 
\begin_inset Formula 
\[
E\!\left(S\right)=\left\{ \left(i,j\right)\,\Big|\,\left(i,j\right)\in E,i\in S,j\not\in E\right\} .
\]

\end_inset

In the particular case where 
\begin_inset Formula $S=V$
\end_inset

, 
\begin_inset Formula 
\[
E=E\!\left(V\right).
\]

\end_inset


\end_layout

\begin_layout Subsection
Travelling salesman problem 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Graph-TSP"

\end_inset


\end_layout

\begin_layout Standard
Given a list of cities and the distances between each pair, the undirected
 travelling salesman problem finds the shortest path that visits each city
 exactly once while returning to the original city.
 
\end_layout

\begin_layout Standard

\series bold
Hint.
 
\series default
Two main formulations are possible: one eliminates subtours and is called
 subtour elimination, the other imposes connexity and is named cut-set.
 
\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Comparison-Graph-TSP"

\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Prize collection with fixed path length 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Graph-Prize-collection-fixed-length"

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 be an undirected graph, with 
\begin_inset Formula $E$
\end_inset

 being its set of edges and 
\begin_inset Formula $V$
\end_inset

 its set of vertices.
 Each vertex has a prize 
\begin_inset Formula $p_{i}$
\end_inset

.
 Formulate as a mixed-integer linear program the problem of finding the
 path of length exactly 
\begin_inset Formula $L$
\end_inset

 that maximises the total collected prizes, without cycle.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i\in V}p_{i}\,y_{i}\\
\text{s.t.} & \sum_{i\in V}\mathrm{end}_{i}=1,\\
 & \mathrm{end}_{i}\leq y_{i}, & \forall i\in V,\\
 & \sum_{e\in E}x_{e}=L,\\
 & \sum_{e\in\delta\left(i\right)}x_{e}=2\,y_{i}-\mathrm{end}_{i}, & \forall i\in V,\\
 & x_{e}\in\mathcal{B}, & \forall e\in E,\\
 & y_{i}\in\mathcal{B}, & \forall i\in V,\\
 & \mathrm{end}_{i}\in\mathcal{B} & \forall i\in V.
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{e}\in\mathcal{B}$
\end_inset

: whether edge 
\begin_inset Formula $e\in E$
\end_inset

 is taken
\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{i}\in\mathcal{B}$
\end_inset

: whether vertex 
\begin_inset Formula $i\in V$
\end_inset

 is travelled
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{end}_{i}\in\mathcal{B}$
\end_inset

: whether vertex 
\begin_inset Formula $i\in V$
\end_inset

 is the last node of the path (
\begin_inset Formula $0$
\end_inset

 if 
\begin_inset Formula $i$
\end_inset

 is not part of the path)
\end_layout

\begin_layout Standard
Objective: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\max\sum_{i\in V}p_{i}\,y_{i}
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
The path has only one end: 
\begin_inset Formula 
\[
\sum_{i\in V}\mathrm{end}_{i}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize
A node can be the end only if it is in the path: 
\begin_inset Formula 
\[
\mathrm{end}_{i}\leq y_{i},\qquad\forall i\in V.
\]

\end_inset


\end_layout

\begin_layout Itemize
The path must have the given length: 
\begin_inset Formula 
\[
\sum_{e\in E}x_{e}=L.
\]

\end_inset


\end_layout

\begin_layout Itemize
Among all the edges that are incident to one vertex, zero can be taken if
 the node is not travelled, one if this node is the end, and two otherwise.
 In other words, we want to encode the constraint: 
\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}=\begin{cases}
0 & \text{ if }y_{i}=0\\
1 & \text{ if }y_{i}=1\text{ and }\mathrm{end}_{i}=1\\
2 & \text{ if }y_{i}=1\text{ and }\mathrm{end}_{i}=0
\end{cases},\qquad\forall i\in V.
\]

\end_inset

It can be slightly reduced in size: 
\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}=\begin{cases}
0 & \text{ if }y_{i}=0\\
2-\mathrm{end}_{i} & \text{ if }y_{i}=1
\end{cases},\qquad\forall i\in V.
\]

\end_inset

Thanks to this, an edge cannot be taken if it is not part of the path; as
 there can be only one end, only one constraint will have a sum equal to
 one.
 
\end_layout

\begin_deeper
\begin_layout Itemize
One formulation uses those three constraints: 
\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}\leq2-\mathrm{end}_{i}+2\left(1-y_{i}\right),\qquad\forall i\in V,
\]

\end_inset


\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}\geq2-\mathrm{end}_{i}-2\left(1-y_{i}\right),\qquad\forall i\in V,
\]

\end_inset


\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}\leq2\,y_{i},\qquad\forall i\in V.
\]

\end_inset

The first two constraints correspond to the equality to 
\begin_inset Formula $2-\mathrm{end}_{i}$
\end_inset

, but only when 
\begin_inset Formula $y_{i}=1$
\end_inset

.
 The last one imposes the value of the sum to zero when 
\begin_inset Formula $y_{i}=0$
\end_inset

, 
\begin_inset Formula $\mathrm{end}_{i}$
\end_inset

 being then ignored.
 
\end_layout

\begin_layout Itemize
Another formulation uses directly an equality: 
\begin_inset Formula 
\[
\sum_{e\in\delta\left(i\right)}x_{e}=2\,y_{i}-\mathrm{end}_{i},\qquad\forall i\in V.
\]

\end_inset

In this case, when the node is taken (
\begin_inset Formula $y_{i}=1$
\end_inset

), the value becomes 
\begin_inset Formula $2-\mathrm{end}_{i}$
\end_inset

, as previously; in the other case, 
\begin_inset Formula $y_{i}=0$
\end_inset

, which implies 
\begin_inset Formula $\mathrm{end}_{i}=0$
\end_inset

 by a previous constraint, and the total is always zero.
 
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsection
Operation scheduling 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Graph-Operation-scheduling"

\end_inset


\end_layout

\begin_layout Standard
When synthesising hardware circuits (such as processors), a common need
 is to schedule the operations to perform.
 For instance, to sum up three numbers, the sum of two of them must be computed
 first; this partial result can then be added to the third number to get
 the final result.
 
\end_layout

\begin_layout Standard
The dependencies between operations is modelled as a graph: each operation
 is a node, edges are created between an operation 
\begin_inset Formula $o$
\end_inset

 and operations 
\begin_inset Formula $o^{\prime}$
\end_inset

 whose results are needed to compute 
\begin_inset Formula $o$
\end_inset

.
 Cycles are not allowed in the graph: they would indicate that an operation
 needs its own result before computing its result.
\end_layout

\begin_layout Standard
Not all operations take the same time to execute: usually, addition takes
 only a few cycles, while multiplication is slower, and division even slower.
 Thus, the transition from an operation to the next one has a latency, expressed
 as an integer number of cycles.
\end_layout

\begin_layout Standard
Formulate the problem of scheduling hardware operations with the objective
 of minimising the time when the last operation is executed as a mixed-integer
 linear program.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2_5_operation_scheduling.svg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Operation scheduling: example graph.
 This image in an excerpt of 
\begin_inset CommandInset href
LatexCommand href
name "LLVM's CIRCT project"
target "https://circt.llvm.org/docs/Scheduling/"
literal "false"

\end_inset

 and is released under an Apache 2.0 license.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status collapsed

\begin_layout Solution*
The last operation can be computed before the MIP formulation is generated
 as the only operation on which no operation depends.
 Denote this operation by the index 
\begin_inset Formula $\ell$
\end_inset

.
 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & t_{\ell}\\
\text{s.t.} & t_{t}\geq t_{s}+l_{s} & \forall\left(s,t\right)\in\mathcal{D}\\
 & t_{o}\in\mathbb{N}, & \forall o\in\mathcal{O}.
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Model
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}$
\end_inset

: the set of operations to perform; the last operation is the element 
\begin_inset Formula $\ell\in\mathcal{O}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{D}$
\end_inset

: the set of dependencies between operations, with 
\begin_inset Formula $\mathcal{D}\subset\mathcal{O}\times\mathcal{O}$
\end_inset

 and 
\begin_inset Formula $\left(o,o\right)\not\in\mathcal{D}$
\end_inset

 for 
\begin_inset Formula $o\in\mathcal{O}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $l_{o}\in\mathbb{N}_{0}$
\end_inset

 for 
\begin_inset Formula $o\in\mathcal{O}$
\end_inset

: the time to compute the operation 
\begin_inset Formula $o$
\end_inset

, i.e.
 its latency
\end_layout

\begin_layout Standard
Variable:
\end_layout

\begin_layout Itemize
\begin_inset Formula $t_{o}\in\mathbb{N}$
\end_inset

: the starting time for operation 
\begin_inset Formula $o\in O$
\end_inset


\end_layout

\begin_layout Standard
Objective:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\min t_{\ell}
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
The operation 
\begin_inset Formula $t$
\end_inset

 can only start when a dependent operation 
\begin_inset Formula $s$
\end_inset

 has finished its computation:
\begin_inset Formula 
\[
t_{t}\geq t_{s}+l_{s},\qquad\forall\left(s,t\right)\in\mathcal{D}.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "This model is currently implemented in LLVM's CIRCT"
target "https://github.com/llvm/circt/blob/main/lib/Scheduling/LPSchedulers.cpp#L24-L79"
literal "false"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Multicommodity capacitated network design * 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Graph-Network-design"

\end_inset


\end_layout

\begin_layout Standard
When creating their network, logistics companies have to decide, among a
 set of already determined hubs, which lines they create between two hubs.
 A given amount of trucks, boats, or planes can be assigned to each line.
 These lines must withstand the expected load between all the hubs.
 Hubs can be used for crossdocking, meaning that a vehicle can empty a part
 of its load for another vehicle to pick it up and bring it closer to its
 destination.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $K$
\end_inset

 be the set of 
\emph on
commodities
\emph default
, i.e.
 the set of flows through the network: each commodity 
\begin_inset Formula $k$
\end_inset

 has a source hub 
\begin_inset Formula $s_{k}\in V$
\end_inset

, a target hub 
\begin_inset Formula $t_{k}\in V$
\end_inset

, and a demand 
\begin_inset Formula $d_{k}\in\mathbb{R}_{0}^{+}$
\end_inset

 (expressed in tonnes).
 Hubs are modelled as graph nodes 
\begin_inset Formula $V$
\end_inset

 and lines as edges 
\begin_inset Formula $E\subseteq V\times V$
\end_inset

 (if a line cannot be created between two hubs, it is not present in 
\begin_inset Formula $E$
\end_inset

), within a directed graph.
 Creating a line between 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 [with the arc 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

] has a fixed cost 
\begin_inset Formula $f_{ij}$
\end_inset

; transporting a tonne between 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 has a unit cost 
\begin_inset Formula $c_{ij}$
\end_inset

; the maximum number of vehicles on a line corresponds to a capacity 
\begin_inset Formula $u_{ij}$
\end_inset

.
 
\end_layout

\begin_layout Standard

\emph on
Alternative statement
\emph default
.
 In computer networks, telecommunication operators have to design the architectu
re of their network to use the lowest amount of hardware while still being
 able to transfer the expected amounts of data.
 These amounts are encoded into a traffic matrix that gives a traffic (in
 gigabytes per second) between two border points of the operator network
 (the ingress and egress points).
 Between these points, the operator deploys a number of routers connected
 by several fibres to ingress and egress points, but also to other routers:
 the traffic flowing into a router is redistributed into its connected neighbour
s.
 
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $K$
\end_inset

 be the set of 
\emph on
commodities
\emph default
, i.e.
 the set of flows through the network: each commodity 
\begin_inset Formula $k$
\end_inset

 has an ingress point 
\begin_inset Formula $s_{k}\in V$
\end_inset

, an egress point 
\begin_inset Formula $t_{k}\in V$
\end_inset

, and a traffic 
\begin_inset Formula $d_{k}\in\mathbb{R}_{0}^{+}$
\end_inset

 (expressed in gigabytes per second).
 Routers are modelled as graph nodes 
\begin_inset Formula $V$
\end_inset

 and fibre connections as edges 
\begin_inset Formula $E\subseteq V\times V$
\end_inset

 (if a fibre cannot be deployed between two routers, it is not present in
 
\begin_inset Formula $E$
\end_inset

), within a directed graph.
 Deploying a fibre connection between 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 [with the arc 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

] has a fixed cost 
\begin_inset Formula $f_{ij}$
\end_inset

; the maximum traffic on a fibre corresponds to a capacity 
\begin_inset Formula $u_{ij}$
\end_inset

.
 
\end_layout

\begin_layout Note*
Compared to the first statement, there is no variable cost 
\begin_inset Formula $c_{ij}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{\left(i,j\right)\in E}\sum_{k\in K}c_{ij}\,x_{ij}^{\left(k\right)}+\sum_{\left(i,j\right)\in E}f_{ij}\,y_{ij}\\
\text{s.t.} & \sum_{j\in\delta^{+}\!\left(i\right)}x_{ij}^{\left(k\right)}-\sum_{j\in\delta^{-}\!\left(i\right)}x_{ij}^{\left(k\right)}=\begin{cases}
d_{k} & \text{ if }i=s_{k}\\
-d_{k} & \text{ if }i=t_{k}\\
0 & \text{ otherwise}
\end{cases} & \forall i\in V,\forall k\in K\\
 & \sum_{k\in K}x_{ij}^{\left(k\right)}\leq u_{ij}\,y_{ij} & \forall\left(i,j\right)\in E\\
 & x_{ij}^{\left(k\right)}\geq0 & \forall\left(i,j\right)\in E\\
 & y_{ij}\in\left\{ 0,1\right\}  & \forall\left(i,j\right)\in E
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Model
\end_layout

\begin_layout Standard
Sets:
\end_layout

\begin_layout Itemize
\begin_inset Formula $V$
\end_inset

: the set of vertices of the directed graph
\end_layout

\begin_layout Itemize
\begin_inset Formula $E$
\end_inset

: the set of edges of the directed graph, 
\begin_inset Formula $E\subseteq V\times V$
\end_inset


\end_layout

\begin_layout Standard
Data:
\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{ij}\in\mathbb{R}_{0}^{+}$
\end_inset

 for 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

: cost of transporting one unit of flow through the edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{ij}\in\mathbb{R}_{0}^{+}$
\end_inset

 for 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

: cost of opening the edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $u_{ij}\in\mathbb{R}_{0}^{+}$
\end_inset

 for 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

: capacity of the edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset

, i.e.
 maximum flow that 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 can withstand in the direction from 
\begin_inset Formula $i$
\end_inset

 to 
\begin_inset Formula $j$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $d_{k}\in\mathbb{R}_{0}^{+}$
\end_inset

 for 
\begin_inset Formula $k\in K$
\end_inset

: demand for commodity 
\begin_inset Formula $k$
\end_inset


\end_layout

\begin_layout Standard
Variables:
\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{ij}\in\left\{ 0,1\right\} $
\end_inset

 for 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

: whether the edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 is included in the design
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ij}^{\left(k\right)}\in\mathbb{R}^{+}$
\end_inset

 for 
\begin_inset Formula $\left(i,j\right)\in E$
\end_inset

 and 
\begin_inset Formula $k\in K$
\end_inset

: the flow through the edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 for commodity 
\begin_inset Formula $k$
\end_inset


\end_layout

\begin_layout Standard
Objective:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\min\sum_{\left(i,j\right)\in E}\sum_{k\in K}c_{ij}\,x_{ij}^{\left(k\right)}+\sum_{\left(i,j\right)\in E}f_{ij}\,y_{ij}
\]

\end_inset

Constraints:
\end_layout

\begin_layout Itemize
For each node 
\begin_inset Formula $i\in V$
\end_inset

, the flow that goes in must go out, for each commodity, unless 
\begin_inset Formula $i$
\end_inset

 is the source or the destination of the flow.
 
\begin_inset Formula 
\[
\sum_{j\in\delta^{+}\!\left(i\right)}x_{ij}^{\left(k\right)}-\sum_{j\in\delta^{-}\!\left(i\right)}x_{ij}^{\left(k\right)}=\begin{cases}
d_{k} & \text{ if }i=s_{k}\\
-d_{k} & \text{ if }i=t_{k}\\
0 & \text{ otherwise}
\end{cases},\qquad\forall i\in V,\forall k\in K.
\]

\end_inset


\end_layout

\begin_layout Itemize
Arcs have a limited capacity.
 Moreover, an arc can only be used if it is part of the design.
 
\begin_inset Formula 
\[
\sum_{k\in K}x_{ij}^{\left(k\right)}\leq u_{ij}\,y_{ij},\qquad\forall\left(i,j\right)\in E.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Graph colouring * 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Modelling-Graph-Graph-colouring"

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 be an undirected graph, with 
\begin_inset Formula $E$
\end_inset

 being its set of edges and 
\begin_inset Formula $V$
\end_inset

 its set of vertices.
 The 
\emph on
graph-colouring problem
\emph default
 assigns colours to vertices, with the constraint that two adjacent vertices
 cannot have the same colour.
 Formulate as a mixed-integer linear program the problem of minimum graph
 colouring (i.e.
 colouring a graph with as few colours as possible).
\end_layout

\begin_layout Standard
How does your current formulation deal with symmetry, i.e., starting from
 one optimal solution, is it possible to build another optimal solution
 by performing systematic operations like renumbering the colours? Propose
 several new constraints to break this symmetry.
\end_layout

\begin_layout Standard
Propose other kinds of constraints to strengthen the formulation.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{c\in\left[1,\left|V\right|\right]}y_{c}\\
\text{s.t.} & \sum_{c\in\left[1,\left|V\right|\right]}x_{i,c}=1, & \forall i\in V,\\
 & x_{i,c}+x_{j,c}\leq y_{c}, & \forall c\in\left[1,\left|V\right|\right],\forall\left(i,j\right)\in E,\\
 & x_{i,h}\in\mathcal{B}, & \forall c\in\left[1,\left|V\right|\right],\forall i\in V,\\
 & y_{c}\in\mathcal{B}, & \forall c\in\left[1,\left|V\right|\right].
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Model
\end_layout

\begin_layout Standard
Note: the maximum number of colours in the graph is the number of vertices
 (very conservative bound).
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i,h}\in\mathcal{B}$
\end_inset

: whether vertex 
\begin_inset Formula $i\in V$
\end_inset

 has colour 
\begin_inset Formula $c\in\left[1,\left|V\right|\right]$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{c}\in\mathcal{B}$
\end_inset

: whether colour 
\begin_inset Formula $c\in\left[1,\left|V\right|\right]$
\end_inset

 is used
\end_layout

\begin_layout Standard
Objective: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\max\sum_{c\in\left[1,\left|V\right|\right]}y_{c}
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
Each vertex has exactly one colour: 
\begin_inset Formula 
\[
\sum_{c\in\left[1,\left|V\right|\right]}x_{i,c}=1,\qquad\forall i\in V.
\]

\end_inset


\end_layout

\begin_layout Itemize
Two adjacent vertices cannot have the same colour: 
\begin_inset Formula 
\[
x_{i,c}+x_{j,c}\leq y_{c},\qquad\forall c\in\left[1,\left|V\right|\right],\forall\left(i,j\right)\in E.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Symmetry breaking
\end_layout

\begin_layout Standard
Sources of symmetry and corresponding symmetry-breaking constraints:
\end_layout

\begin_layout Itemize
a colour 
\begin_inset Formula $c+1$
\end_inset

 can only be used if all colours before it are used: 
\begin_inset Formula 
\[
y_{c+1}\leq y_{c},\qquad\forall c\in\left[1,\left|V\right|-1\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
the first colour has the largest number of nodes assigned to it; the next
 colours have a decreasing number of nodes: 
\begin_inset Formula 
\[
\sum_{i=1}^{\left|V\right|}x_{i,c}\geq\sum_{i=1}^{\left|V\right|}x_{i,c+1},\qquad\forall c\in\left[1,\left|V\right|-1\right].
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Formulation strengthening
\end_layout

\begin_layout Standard
The constraint per edge can be rewritten for any clique.
 In particular, it is sufficient to write it for all maximum cliques 
\begin_inset Formula $C\!\left(G\right)$
\end_inset

: 
\begin_inset Formula 
\[
\sum_{i\in\kappa}x_{i,c}\leq y_{c},\qquad\forall c\in\left[1,\left|V\right|\right],\forall\kappa\in C\!\left(G\right).
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Branch-and-bound algorithm 
\begin_inset CommandInset label
LatexCommand label
name "chap:Branch-and-bound-algorithm"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
16-17_S1, ex 4
\end_layout

\begin_layout Plain Layout
Ajouter un exercice où on a plusieurs nœuds que l'on continue à explorer
 !
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Plain Layout
Ajouter un exercice sans simplexe en dessous, par exemple avec un sac à
 dos et une heuristique (+ borne inf) ?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Standard
This is an 
\series bold
intelligent tree-exploring
\series default
 algorithm: it tries to prune branches as soon as possible by using a series
 of relaxed problems.
 Why such a complicated thing? 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-complete problem: no polynomial-time algorithm found (and probably does
 not exist).
 
\end_layout

\begin_layout Standard
To this end, it computes 
\series bold
two bounds
\series default
 (here, explained for minimisation): 
\end_layout

\begin_layout Itemize
a 
\series bold
lower bound
\series default
: remove constraints (i.e.
 solve the relaxed LP), so can only have a better objective value.
 
\end_layout

\begin_layout Itemize
an 
\series bold
upper bound
\series default
: as soon as there is an integer-feasible solution (also called 
\emph on
incumbents
\emph default
).
 There is no need to consider solutions worse than this.
 
\end_layout

\begin_layout Standard
How is the
\series bold
 tree explored?
\end_layout

\begin_layout Itemize
When 
\series bold
pruning
\series default
? If the relaxed value of a node is higher than the upper bound: no need
 to explore, adding constraints will make things even worse.
 
\end_layout

\begin_layout Itemize
When 
\series bold
optimal
\series default
? When lower bound is equal to upper bound: the algorithm 
\emph on
proved
\emph default
 this is an optimal solution (may have multiple of them!).
 Gap: 
\begin_inset Formula 
\[
\mathrm{gap}=\frac{z_{\mathrm{incumbent}}-z_{\mathrm{lower}}}{\left|z_{\mathrm{incumbent}}\right|}\geq0.
\]

\end_inset

(Usually defined as 
\begin_inset Formula $\infty$
\end_inset

 when no incumbent is found.)
\end_layout

\end_inset


\end_layout

\begin_layout Section

\series bold
Algorithm behaviour 
\end_layout

\begin_layout Subsection
Geometric solving 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Behaviour-Geometric-solving"

\end_inset


\end_layout

\begin_layout Standard
Solve the following problems geometrically using the branch-and-bound algorithm
 (i.e.
 by drawing the feasible area, finding the extreme points by hand—as the
 simplex algorithm would).
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{cc}
\max & 9\,x+5\,y\\
\text{s.t.} & 4\,x+9\,y\leq35\\
 & x\leq6\\
 & x-3\,y\geq1\\
 & 3\,x+2\,y\leq19\\
 & \left(x,y\right)\in\mathbb{Z}_{+}^{2}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{cc}
\max & 2\,x+3\,y\\
\text{s.t.} & -\frac{2}{3}\,x+y\leq\frac{5}{2}\\
 & \frac{1}{3}\,x+y\leq\frac{9}{2}\\
 & 2\,x+y\leq14\\
 & \left(x,y\right)\in\mathbb{Z}_{+}^{2}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
For the first problem, the solution is 
\begin_inset Formula $x=6$
\end_inset

 and 
\begin_inset Formula $y=0$
\end_inset

.
\end_layout

\begin_layout Solution*
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m = Model(Cbc.Optimizer)
\end_layout

\begin_layout Plain Layout

@variable(m, x >= 0, Int)
\end_layout

\begin_layout Plain Layout

@variable(m, y >= 0, Int)
\end_layout

\begin_layout Plain Layout

@constraint(m, x <= 6)
\end_layout

\begin_layout Plain Layout

@constraint(m, x - 3 * y >= 1)
\end_layout

\begin_layout Plain Layout

@constraint(m, 3 * x + 2 * y <= 19)
\end_layout

\begin_layout Plain Layout

@objective(m, Max, 9 * x + 5 * y)
\end_layout

\begin_layout Plain Layout

optimize!(m)
\end_layout

\end_inset


\end_layout

\begin_layout Solution*
For the second problem, the solution is 
\begin_inset Formula $x=6$
\end_inset

 and 
\begin_inset Formula $y=2$
\end_inset

.
\end_layout

\begin_layout Solution*
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

m = Model(Cbc.Optimizer)
\end_layout

\begin_layout Plain Layout

@variable(m, x >= 0, Int)
\end_layout

\begin_layout Plain Layout

@variable(m, y >= 0, Int)
\end_layout

\begin_layout Plain Layout

@constraint(m, - 2/3 * x + y <= 5/2)
\end_layout

\begin_layout Plain Layout

@constraint(m, 1/3 * x + y <= 9/2)
\end_layout

\begin_layout Plain Layout

@constraint(m, 2 * x + y <= 14)
\end_layout

\begin_layout Plain Layout

@objective(m, Max, 2 * x + 3 * y)
\end_layout

\begin_layout Plain Layout

optimize!(m)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Solution 1
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Subsubsection
Solution 2
\end_layout

\begin_layout Enumerate
Draw the feasible area, with all the constraints.
 Draw the objective function: the direction in which the objective function
 increases.
 
\end_layout

\begin_layout Enumerate
Using the simplex algorithm, find the optimal solution to the LP relaxation.
 
\end_layout

\begin_layout Enumerate
Branch on an integer variable: either lower than the floor of the variable,
 or higher than the ceiling.
 Each branch has an optimal solution.
 Once a branch has an integer solution, it is no more explored.
 
\begin_inset Newline newline
\end_inset

For now: the obtained integer solution is not optimal, you can 
\begin_inset Quotes eld
\end_inset

see
\begin_inset Quotes erd
\end_inset

 it.
 (Can do much more formal with bounds: see later.)
\begin_inset Formula 
\[
x\leq5\qquad\text{or}\qquad x\geq6.
\]

\end_inset


\end_layout

\begin_layout Enumerate
On the branch that is still not integer, branch again.
 Now, branch on the other variable (the first one is integer due to the
 branching: this operation creates new corners, in which the simplex will
 look for optimal solutions).
 
\begin_inset Formula 
\[
x\leq5\text{ and }y\leq2\qquad\text{or}\qquad x\leq5\text{ and }y\geq3.
\]

\end_inset


\end_layout

\begin_layout Enumerate
One side gives an integer solution that is clearly suboptimal (when compared
 to the previously found one): continue branching! But the first variable
 is no more integer.
 No need to explore both children: this branch corresponds to 
\begin_inset Formula $x\leq5$
\end_inset

, the two branches are 
\begin_inset Formula $x\leq4$
\end_inset

 and 
\begin_inset Formula $x\leq5$
\end_inset

 (i.e.
 
\begin_inset Formula $x=5$
\end_inset

); but there is no feasible point there (infeasible branch)! 
\begin_inset Formula 
\[
x\leq4\text{ and }y\geq3\qquad\text{or}\qquad x=5\text{ and }y\geq3.
\]

\end_inset


\end_layout

\begin_layout Enumerate
In the remaining area, still not yet an integer solution.
 So branch on the noninteger variable 
\begin_inset Formula $y$
\end_inset

: 
\begin_inset Formula 
\[
x\leq4\text{ and }y=3\qquad\text{or}\qquad x\leq4\text{ and }y\geq4.
\]

\end_inset

One zone gives an good point (but not optimal), the other one is infeasible.
\end_layout

\begin_layout Standard
Now, 
\series bold
you can see
\series default
 that the optimum has been found (but this can be heavily formalised): 
\begin_inset Formula $x=6$
\end_inset

 and 
\begin_inset Formula $y=2$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_0.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: step 1.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_1.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: steps 2 and 3.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_2.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: step 4.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_3.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: step 5.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_4.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: step 6.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_graphical_tree.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graphical representation: tree.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tree construction 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Behaviour-Tree-construction"

\end_inset


\end_layout

\begin_layout Enumerate
Give the tightest lower and upper bounds on the optimal value for the objective
 based on the tree of Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Branch-and-bound-Behaviour-Tree-construction"

\end_inset

.
 Compute the gap.
 
\end_layout

\begin_layout Enumerate
With the given partial tree, give the nodes which should be pruned (and
 why), and which could be explored further.
\end_layout

\begin_layout Enumerate
Explore your solver's MIP log and link it to the branch-and-bound tree.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_complete.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A partial branch-and-bound tree.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Branch-and-bound-Behaviour-Tree-construction"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The upper bound is 
\begin_inset Formula $31$
\end_inset

, the lower bound is 
\begin_inset Formula $27$
\end_inset

, with a gap of 
\begin_inset Formula $12.9\%$
\end_inset

.
 You should explore further nodes #3 and #5.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
Give the tightest lower and upper bounds on the optimal value for the objective
 based on the tree.
 Compute the gap
\end_layout

\begin_layout Standard
How are the bounds computed? 
\end_layout

\begin_layout Itemize

\series bold
Upper bound
\series default
: minimum of all integer-feasible solution found to date.
 
\end_layout

\begin_layout Itemize

\series bold
Lower bound
\series default
: more interesting.
 Child nodes may not have a better objective value that their parents! Hence:
 need to explore both children before updating the bound.
 Can propagate the information to the root.
\end_layout

\begin_layout Standard
Go through the nodes one by one, 
\series bold
from #0 to #8
\series default
.
 
\end_layout

\begin_layout Enumerate
Only the root node is explored.
 Its solution is not integer, so the upper bound is still infinite; the
 lower bound is set to that of the LP relaxation.
 
\begin_inset Formula 
\[
\underline{z}=25.
\]

\end_inset


\end_layout

\begin_layout Enumerate
A second node is explored.
 No conclusion yet.
 
\end_layout

\begin_layout Enumerate
A third node is explored.
 Both children from #0 are explored: can update the lower bound.
 All integer solutions will come out either out of #1 or #2: their objective
 function will never be less than 
\begin_inset Formula $26$
\end_inset

, because of this fact.
 
\begin_inset Formula 
\[
\underline{z}=26.
\]

\end_inset


\end_layout

\begin_layout Enumerate
A fourth node is explored.
 No conclusion.
 
\end_layout

\begin_layout Enumerate
A fifth node is explored.
 Both children from #1 are explored: can update the lower bound.
 All integer solutions will come out either out of #2, #3, or #4: no update
 on the lower bound.
 
\end_layout

\begin_layout Enumerate
A sixth node is explored.
 No conclusion.
 
\end_layout

\begin_layout Enumerate
A seventh node is explored.
 There is an integer solution, which can be used to update the upper bound
 (as this is the first solution): 
\begin_inset Formula 
\[
\overline{z}=35.
\]

\end_inset

Both children from #2 are explored: can update the lower bound.
 All integer solutions will come out either out of #3, #4, #5, or #6: 
\begin_inset Formula 
\[
\underline{z}=27.
\]

\end_inset


\end_layout

\begin_layout Enumerate
An eighth node is explored.
 There is an integer solution, which can be used to update the upper bound
 (if this solution is better than the previous one): 
\begin_inset Formula 
\[
\overline{z}=31.
\]

\end_inset


\end_layout

\begin_layout Standard
As a consequence, the gap is: 
\begin_inset Formula 
\[
\frac{\overline{z}-\underline{z}}{\overline{z}}=\frac{31-27}{31}=\frac{4}{31}\approx12.903\%.
\]

\end_inset


\end_layout

\begin_layout Standard
Hence two 
\series bold
main branching strategies
\series default
 categories: either update the upper bound quickly (find a feasible solution:
 depth-first search); or update the lower bound quickly (exhaust children:
 breadth-first search).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_0.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 0.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_1.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 1.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_2.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 2.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_3.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 3.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_4.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 4.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_5.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 5.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_6.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 6.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_7.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 7.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_tree_8.pdf
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bounds at node 8.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
With the given partial tree, give the nodes which should be pruned (and
 why), and which could be explored further
\end_layout

\begin_layout Standard
Only leaves can be pruned (nodes that could still be explored).
 
\end_layout

\begin_layout Itemize

\series bold
3
\series default
: no upper bound yet, no feasible solution; node lower bound less than the
 global upper bound: still hope to find good solution here.
 
\series bold
Explore.
 
\end_layout

\begin_layout Itemize

\series bold
7
\series default
: found an integer-feasible solution, no interest to explore further (adding
 constraints can only increase the value of the objective).
 Node lower and upper bounds are equal: the solution to the LP is integer-feasib
le.
 
\series bold
New incumbent.
 
\end_layout

\begin_layout Itemize

\series bold
8
\series default
:
\series bold
 infeasible.
 
\end_layout

\begin_layout Itemize

\series bold
5
\series default
: same as 3.
 
\series bold
Explore.
 
\end_layout

\begin_layout Itemize

\series bold
6
\series default
: integer-feasible solution, but worse than current incumbent.
 
\series bold
Prune.
 
\end_layout

\begin_layout Subsubsection

\series bold
See Gurobi's log
\end_layout

\begin_layout Standard
Run some code (groups model?), and explain the lines.
 
\end_layout

\begin_layout Standard
Starts with the presolve: general properties about the model, finds a first
 feasible solution, even though very poor (allows to prune earlier; if unable
 to find one in reasonable time, will stop looking for one: can be very
 interesting to provide one to the solver yourself!).
 Removes a series of constraints and variables to make problem smaller (e.g.:
 two variables defined equal, equality constraints can be used; also does
 a lot of inference).
 
\end_layout

\begin_layout Standard
*: found a feasible solution by branching.
 H: found a feasible solution by heuristic.
 
\end_layout

\begin_layout Standard
Nodes: number of explored or not yet explored nodes.
 First tries to find a feasible solution (unexplored count almost constant);
 after quite some time, will try to prove optimality (unexplored count explodes:
 memory consumption too!).
 
\end_layout

\begin_layout Standard
Objective value 
\emph on
for the current node
\emph default
.
 Current depth in the tree.
 Number of integer-feasible solutions found.
 Number of integer-infeasible variables at current node.
 
\end_layout

\begin_layout Standard
Incumbent: best feasible solution.
 Best lower bound.
 Gap.
 
\end_layout

\begin_layout Standard
Simplex iterations performed to now.
 (Why simplex? Easy to reconverge when adding a new constraint; see numerical
 optimisation course about duality and sensitivity analysis.)
\end_layout

\begin_layout Standard
Why no tree exploring at the beginning? No branch-and-bound: working on
 the root node, tries to get the most information out of it.
 For example, generate cutting planes to improve formulation (see following
 courses).
 The goal is to limit the size of the tree! 
\series bold
Mostly black magic.

\series default
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
* Worst case 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Behaviour-Worst-case"

\end_inset


\end_layout

\begin_layout Standard
Give an example where the branch-and-bound algorithm performs a large number
 of iterations (when compared to the number of variables) to find a first
 integer solution.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A worst case can be found when having two integer variables and a linear
 equality: the number of integer solutions along this line is very small,
 but branching does not really help reaching a solution quickly.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Remark*
The attic problem can be used as a solution to this exercise! 
\end_layout

\begin_layout Standard
Problematic constraint: 
\begin_inset Formula $a\,x-b\,y=0$
\end_inset

, where 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are coprime integers.
 The first non-zero integer solution for 
\begin_inset Formula $\left(x,y\right)$
\end_inset

 is 
\begin_inset Formula $\left(b,a\right)$
\end_inset

.
 Hence the mathematical program: 
\begin_inset Formula 
\[
\begin{array}{cc}
\min & c\,x+d\,y\\
\mbox{s.t.} & a\,x-b\,y=0,\\
 & x\geq1,\quad y\geq1,\\
 & x\in\mathbb{Z}^{+},\,y\in\mathbb{Z}^{+}.
\end{array}
\]

\end_inset

The algorithm will keep on branching until reaching 
\begin_inset Formula $x\geq b$
\end_inset

, 
\begin_inset Formula $y\geq a$
\end_inset

, alternating on both variables.
 
\end_layout

\begin_layout Enumerate
The situation at first.
 Feasible area: intersection of yellow (
\begin_inset Formula $x\geq1$
\end_inset

, 
\begin_inset Formula $y\geq1$
\end_inset

) and blue (
\begin_inset Formula $3\,x=5\,y$
\end_inset

).
\end_layout

\begin_layout Enumerate
The first solution from the simplex: a corner of the feasible area.
 
\begin_inset Formula 
\[
\left(\frac{5}{3},1\right)
\]

\end_inset

However, this corner is not integer: the B&B algorithm will then branch.
 
\end_layout

\begin_layout Enumerate
One variable is integer, the other is not: branch on 
\begin_inset Formula $x$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

On the one hand, 
\begin_inset Formula $x\leq\left\lfloor 5/3\right\rfloor =1$
\end_inset

: equivalent to setting 
\begin_inset Formula $x=1$
\end_inset

, no integer point there.
 
\begin_inset Newline newline
\end_inset

On the other hand, 
\begin_inset Formula $x\geq\left\lfloor 5/3\right\rfloor =2$
\end_inset

: goes on (green area).
 
\end_layout

\begin_layout Enumerate
New simplex iterations to get the green point.
 
\begin_inset Formula 
\[
\left(2,\frac{6}{5}\right).
\]

\end_inset

Once again, this is not an integer solution.
 
\end_layout

\begin_layout Enumerate
One variable is integer, the other is not: branch on 
\begin_inset Formula $y$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

On the one hand, 
\begin_inset Formula $y\leq\left\lfloor 6/5\right\rfloor =1$
\end_inset

: equivalent to setting 
\begin_inset Formula $y=1$
\end_inset

, no integer point there.
 
\begin_inset Newline newline
\end_inset

On the other hand, 
\begin_inset Formula $y\geq\left\lfloor 6/5\right\rfloor =2$
\end_inset

: goes on (green area).
 
\end_layout

\begin_layout Enumerate
New simplex iterations to get the green point.
 
\begin_inset Formula 
\[
\left(\frac{10}{3},2\right).
\]

\end_inset

Once again, this is not an integer solution.
 
\end_layout

\begin_layout Enumerate
One variable is integer, the other is not: branch on 
\begin_inset Formula $x$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

On the one hand, 
\begin_inset Formula $x\leq\left\lfloor 10/3\right\rfloor =3$
\end_inset

: no integer point there.
 
\begin_inset Newline newline
\end_inset

On the other hand, 
\begin_inset Formula $x\geq\left\lfloor 10/3\right\rfloor =4$
\end_inset

: goes on (green area).
 
\end_layout

\begin_layout Enumerate
New simplex iterations to get the green point.
 
\begin_inset Formula 
\[
\left(4,\frac{12}{5}\right).
\]

\end_inset

Once again, this is not an integer solution.
 
\end_layout

\begin_layout Enumerate
One variable is integer, the other is not: branch on 
\begin_inset Formula $y$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

On the one hand, 
\begin_inset Formula $y\leq\left\lfloor 12/5\right\rfloor =2$
\end_inset

: no integer point there.
 
\begin_inset Newline newline
\end_inset

On the other hand, 
\begin_inset Formula $y\geq\left\lfloor 12/5\right\rfloor =3$
\end_inset

: goes on (green area).
 
\end_layout

\begin_layout Enumerate
New simplex iterations to get the green point.
 
\begin_inset Formula 
\[
\left(5,3\right).
\]

\end_inset

This is an integer solution: done! 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_0.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 1.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_1.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 2.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_2.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 3.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_3.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 4.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_4.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 5.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_5.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 6.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_6.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 7.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_7.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 8.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_8.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 9.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_inefficient_9.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Step 10.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tree interpretation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Behaviour-Tree-interpretation-1"

\end_inset


\end_layout

\begin_layout Standard
In the branch-and-bound tree of Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Branch-and-bound-Behaviour-Tree-interpretation-1"

\end_inset

, in each node, a number located at the top of the node indicates an upper
 bound, whereas a number located at the bottom indicates a lower bound.
 
\end_layout

\begin_layout Enumerate
Is it a minimisation or a maximisation problem? 
\end_layout

\begin_layout Enumerate
Compute the tightest lower and upper bound for the problem.
 
\end_layout

\begin_layout Enumerate
What are the nodes that must be explored further? 
\end_layout

\begin_layout Enumerate
Assume that we are interested in the two best solutions.
 What are the nodes that should be explored further? 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_treebis.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A partial branch-and-bound tree.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Branch-and-bound-Behaviour-Tree-interpretation-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tree interpretation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Behaviour-Tree-interpretation-2"

\end_inset


\end_layout

\begin_layout Standard
Consider the branch-and-bound tree which is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Branch-and-bound-Behaviour-Tree-interpretation-2"

\end_inset

.
 For each node, the above number (if present) represents an upper bound
 on the optimal value of the given subproblem, while the below number represents
 a lower bound on the optimal value of the given subproblem.
\end_layout

\begin_layout Enumerate
Determine the sense of optimization (maximisation or minimisation).
\end_layout

\begin_layout Enumerate
Give the tightest possible lower and upper bound for the full problem.
\end_layout

\begin_layout Enumerate
Determine which nodes need to be explored further.
\end_layout

\begin_layout Enumerate
Assume that we are interested in the best two solutions (instead of just
 one), determine which leaves of the tree can potentially contain the second
 best solution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 3_BB_treeter.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A partial branch-and-bound tree.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Branch-and-bound-Behaviour-Tree-interpretation-2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section

\series bold
Implementation choices
\end_layout

\begin_layout Subsection
Pruning 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Implementation-Pruning"

\end_inset


\end_layout

\begin_layout Standard
In the branch-and-bound algorithm, give the different opportunities to prune
 the search and explain briefly.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
By bound, by optimality, by infeasibility.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Three possibilities: 
\end_layout

\begin_layout Enumerate
By bound: if the LP relaxation has an objective value 
\emph on
worse
\emph default
 than the best current integer solution (i.e.
 the incumbent), there is no need to pursue the exploration: adding constraints
 will never improve the objective function.
 
\end_layout

\begin_layout Enumerate
By optimality: if the solution to the LP relaxation is integer, then it
 is optimal.
 Hence, there is no need to pursue the exploration: adding constraints will
 never improve the objective function.
 
\end_layout

\begin_layout Enumerate
By infeasibility: if the LP relaxation is infeasible, the corresponding
 MILP is infeasible.
 Hence, if a branch in the B&B tree is infeasible, pursuing the exploration
 will not bring any solution.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Exploration strategies 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Implementation-Exploration-strategies"

\end_inset


\end_layout

\begin_layout Standard
Explain two simple node selection strategies that can be used to explore
 the branch-and-bound tree.
 In particular, detail their effect on the bounds, and on the number of
 nodes to find an integer solution.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Depth-first (improves primal bound) or breadth-first search (improves dual
 bound).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Enumerate
Depth-first search (DFS): explore nodes that are far from the root (i.e.
 where a lot of branching happened).
 By fixing quickly a large number of variables to integer values, this strategy
 will find integer solutions after 
\begin_inset Quotes eld
\end_inset

few
\begin_inset Quotes erd
\end_inset

 nodes.
 The primal bound evolves quickly.
 
\end_layout

\begin_layout Enumerate
Breadth-first search (BFS): explore nodes that have a small depth (i.e.
 where little branching happened).
 This way, the dual bound is improved by pruning large parts of the tree
 (marking them as useless).
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
** Implementation 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Branch-and-bound-Implementation-Implementation"

\end_inset


\end_layout

\begin_layout Enumerate
Develop a MILP model for the knapsack problem (as in Exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Warm-up-Knapsack"

\end_inset

).
 
\end_layout

\begin_layout Enumerate
Implement an algorithm that solves to optimality instances of this problem
 by pure enumeration of all solutions.
 
\end_layout

\begin_layout Enumerate
Implement a branch-and-bound that solves to optimality instances of this
 problem.
 
\end_layout

\begin_layout Enumerate
Implement a pseudopolynomial dynamic algorithm that solves to optimality
 instances of this problem.
 
\end_layout

\begin_layout Enumerate
Compare those three approaches, in terms of worst case and average case
 time complexity.
 
\end_layout

\begin_layout Chapter
Formulation comparison 
\begin_inset CommandInset label
LatexCommand label
name "chap:Formulation-comparison"

\end_inset


\end_layout

\begin_layout Standard
Due to the way the branch-and-bound algorithm works, adapting the formulation
 can make the solving process faster: if fewer non-integer-feasible points
 are present, then fewer branching are required to find the optimum solution,
 as the LP relaxation more often yields integer-feasible solutions.
 The ideal case is when all extreme points of the feasible polyhedron are
 integer (this is always the case for totally unimodular matrices).
 
\end_layout

\begin_layout Standard
A formulation 
\begin_inset Formula $P_{1}$
\end_inset

 is 
\emph on
stronger
\emph default
 than 
\begin_inset Formula $P_{2}$
\end_inset

 if the first one is included in the second one, i.e.
 
\begin_inset Formula $P_{1}\subsetneq P_{2}$
\end_inset

 (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparison-Two-formulations"

\end_inset

).
 Both formulations must be correct for the problem to solve (i.e.
 have the same set of integer-feasible points): the comparison is based
 on the LP relaxation of the integrality constraints.
 The best formulation for a problem is the convex hull (all its extreme
 points are integer solutions).
 
\end_layout

\begin_layout Itemize
To prove that 
\begin_inset Formula $P_{1}\subseteq P_{2}$
\end_inset

, any point of 
\begin_inset Formula $P_{1}$
\end_inset

 must be a point of 
\begin_inset Formula $P_{2}$
\end_inset

; to this end, the main technique is to work with the set of constraints
 of 
\begin_inset Formula $P_{1}$
\end_inset

 and to show that it implies the set of constraints of 
\begin_inset Formula $P_{2}$
\end_inset

.
 However, this is not enough to prove that 
\begin_inset Formula $P_{1}$
\end_inset

 is a stronger formulation: both might be equal.
 (See Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparison-Included"

\end_inset

.)
\begin_inset Newline newline
\end_inset

Simply checking that one point of 
\begin_inset Formula $P_{1}$
\end_inset

 is in 
\begin_inset Formula $P_{2}$
\end_inset

 is not enough, as this would conclude in cases where no real conclusion
 is possible (like in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparison-Two-formulations"

\end_inset

).
 
\end_layout

\begin_layout Itemize
To prove that 
\begin_inset Formula $P_{1}\subsetneq P_{2}$
\end_inset

 (having proved that 
\begin_inset Formula $P_{1}\subseteq P_{2}$
\end_inset

), it is sufficient to find a point that is within 
\begin_inset Formula $P_{2}$
\end_inset

 but not within 
\begin_inset Formula $P_{1}$
\end_inset

.
 As the two formulations have the same set of integer-feasible points (they
 represent the same problem), such a point cannot be found as an integer
 solution, but rather a fractional one.
 (See Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparison-Disjoint"

\end_inset

.)
\end_layout

\begin_layout Itemize
Proving that 
\begin_inset Formula $P_{1}=P_{2}$
\end_inset

 is equivalent to proving that 
\begin_inset Formula $P_{1}\subseteq P_{2}$
\end_inset

 and 
\begin_inset Formula $P_{2}\subseteq P_{1}$
\end_inset

.
 
\end_layout

\begin_layout Remark*
A 
\emph on
stronger
\emph default
 formulation is not always 
\emph on
better
\emph default
 in all possible meanings of the word 
\begin_inset Quotes eld
\end_inset

better
\begin_inset Quotes erd
\end_inset

: this formulation might require many more constraints and/or variables
 than the first one, which may make it harder to implement and to solve
 (unless specific care is taken, which often means lazy constraints, when
 they are supported by the solver).
 Usually, an exponential number of constraints is required to describe the
 convex hull.
 
\begin_inset Newline newline
\end_inset

For many problems, it is possible to deal with an exponential number of
 constraints using either lazy constraints (the most useful constraint is
 selected by a separation procedure within the total set of possible constraints
) or cutting planes (to bring the formulation closer to the convex hull,
 as in Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Cuts-and-valid"

\end_inset

).
 Most commercial solvers allow these procedures.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 4_abstract_formulations.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The LP-feasible sets of two formulations.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Comparison-Two-formulations"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 4_abstract_formulations_included.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Prove that 
\begin_inset Formula $P_{1}\subseteq P_{2}$
\end_inset

: any point of 
\begin_inset Formula $P_{1}$
\end_inset

 must be a point of 
\begin_inset Formula $P_{2}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Comparison-Included"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 4_abstract_formulations_disjoint.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Prove that 
\begin_inset Formula $P_{1}\subsetneq P_{2}$
\end_inset

: considering that 
\begin_inset Formula $P_{1}\subseteq P_{2}$
\end_inset

, there is a point 
\begin_inset Formula $x$
\end_inset

 in 
\begin_inset Formula $P_{1}$
\end_inset

 that is not in 
\begin_inset Formula $P_{2}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Comparison-Disjoint"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
General problems 
\begin_inset CommandInset label
LatexCommand label
name "sec:Formulation-comparison-General-problems"

\end_inset


\end_layout

\begin_layout Subsection
Discrete facility location
\begin_inset Foot
status open

\begin_layout Plain Layout
Also see exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Warm-up-Hospital-discrete-facility-location"

\end_inset

.
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Formulation-comparison-General-problems-Discrete-facility-location"

\end_inset


\end_layout

\begin_layout Standard
The uncapacitated facility location problem deals with the optimal opening
 of facilities (their position cannot be changed) to meet some demand (always
 one unit) while minimising the total cost (opening facilities, producing
 the goods, delivering them to the customers).
 There is no bound on the amount of goods a facility can produce.
 A client's demand is always met by only one facility.
 
\end_layout

\begin_layout Enumerate
Propose two formulations for the uncapacitated facility location.
 
\begin_inset Newline newline
\end_inset


\series bold
Hint
\series default
: one has an aggregated constraint, not the other one.
 
\end_layout

\begin_layout Enumerate
Is a formulation stronger than the other, or are they equal? 
\end_layout

\begin_layout Enumerate
Implement both formulations and compare the solving times when increasing
 the size of the problem.
 Is one better than the other? Does it correspond to your expectations?
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
First formulation: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{j\in\mathcal{F}}o_{j}\,x_{j}+\sum_{i\in\mathcal{D}i}\sum_{j\in\mathcal{F}}s_{ij}\,y_{ij}\\
\text{s.t.} & \sum_{j\in\mathcal{F}}y_{ij}=1, & \forall i\in\mathcal{C},\\
 & y_{ij}\leq x_{j}, & i\in\mathcal{C},\forall j\in\mathcal{F}.
\end{array}
\]

\end_inset

Second formulation: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{j\in\mathcal{F}}o_{j}\,x_{j}+\sum_{i\in\mathcal{D}i}\sum_{j\in\mathcal{F}}s_{ij}\,y_{ij}\\
\text{s.t.} & \sum_{j\in\mathcal{F}}y_{ij}=1, & \forall i\in\mathcal{C},\\
 & \sum_{i\in\mathcal{C}}y_{ij}\leq\left|\mathcal{C}\right|\,x_{j}, & \forall j\in\mathcal{F}.
\end{array}
\]

\end_inset

The first formulation is strictly stronger than the second one.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
First formulation
\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{F}$
\end_inset

: the set of facilities
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{C}$
\end_inset

: the set of clients
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $o_{j}$
\end_inset

: cost of opening facility 
\begin_inset Formula $j\in\mathcal{F}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{ij}$
\end_inset

: cost of serving client 
\begin_inset Formula $i\in\mathcal{C}$
\end_inset

 from facility 
\begin_inset Formula $j\in\mathcal{F}$
\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{j}\in\mathcal{B}$
\end_inset

 if the facility 
\begin_inset Formula $j\in\mathcal{F}$
\end_inset

 is open
\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{ij}\in\mathcal{B}$
\end_inset

 if facility 
\begin_inset Formula $j\in\mathcal{F}$
\end_inset

 serves client 
\begin_inset Formula $i\in\mathcal{C}$
\end_inset


\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min\sum_{j\in\mathcal{F}}o_{j}\,x_{j}+\sum_{i\in\mathcal{D}i}\sum_{j\in\mathcal{F}}s_{ij}\,y_{ij}
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
The demand of each client must be exactly satisfied.
 
\begin_inset Formula 
\[
\sum_{j\in\mathcal{F}}y_{ij}=1,\qquad\forall i\in\mathcal{C}
\]

\end_inset


\end_layout

\begin_layout Itemize
A facility can serve clients only if it is open.
 (No big-
\begin_inset Formula $M$
\end_inset

 due to unit demand.) 
\begin_inset Formula 
\begin{equation}
y_{ij}\leq x_{j},\qquad\forall i\in\mathcal{C},\forall j\in\mathcal{F}.\label{eq:Formulation-comparison-General-problems-Discrete-facility-location-Good-formulation}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Second formulation
\end_layout

\begin_layout Standard
With 
\begin_inset Formula $N$
\end_inset

 the total number of clients, a facility 
\begin_inset Formula $j$
\end_inset

 can serve clients only if it is open (no bound on the number of clients):
 
\begin_inset Formula 
\begin{equation}
\sum_{i\in\mathcal{C}}y_{ij}\leq\left|\mathcal{C}\right|\,x_{j},\qquad\forall j\in\mathcal{F}.\label{eq:Formulation-comparison-General-problems-Discrete-facility-location-Bad-formulation}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Inclusion
\end_layout

\begin_layout Standard
Directly ask: which formulation is better than the other? Hint: aggregation
 is often bad, prefer to use constraints with few variables.
 
\end_layout

\begin_layout Standard
The first formulation is better than the first one, as 
\begin_inset Formula $\mathrm{FL}_{1}\subsetneq\mathrm{FL}_{2}$
\end_inset

: summing constraint 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Formulation-comparison-General-problems-Discrete-facility-location-Good-formulation"

\end_inset

 over 
\begin_inset Formula $i$
\end_inset

 is exactly 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Formulation-comparison-General-problems-Discrete-facility-location-Bad-formulation"

\end_inset

.
 
\end_layout

\begin_layout Standard
More formally: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{FL}_{1}\subseteq\mathrm{FL}_{2}$
\end_inset

: it is possible to write the second formulation starting from the first
 one.
 
\begin_inset Formula 
\[
\ref{eq:Formulation-comparison-General-problems-Discrete-facility-location-Bad-formulation}=\sum_{i\in\mathcal{C}}\ref{eq:Formulation-comparison-General-problems-Discrete-facility-location-Good-formulation}.
\]

\end_inset

Hence, if a point respects the constraints 
\begin_inset Formula $\mathrm{FL}_{1}$
\end_inset

, then it respects the constraints of 
\begin_inset Formula $\mathrm{FL}_{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
However, 
\begin_inset Formula $\mathrm{FL}_{1}\subsetneq\mathrm{FL}_{2}$
\end_inset

: there is a point which is accepted by the LP relaxation of 
\begin_inset Formula $\mathrm{FL}_{2}$
\end_inset

 but not by that of 
\begin_inset Formula $\mathrm{FL}_{1}$
\end_inset

.
 For two facilities and two clients, take 
\begin_inset Formula 
\[
x_{1}=0.8,\qquad x_{2}=0.2,
\]

\end_inset


\begin_inset Formula 
\[
y_{11}=0.6,\qquad y_{12}=0.4,\qquad y_{21}=1.0,\qquad y_{22}=0.
\]

\end_inset

This point is accepted by 
\begin_inset Formula $\mathrm{FL}_{2}$
\end_inset

: 
\begin_inset Formula 
\[
\underbrace{0.6+1.0}_{1.6}\leq\underbrace{2\times.8}_{1.6},\qquad\underbrace{0.4+0.0}_{0.4}\leq\underbrace{2\times0.2}_{0.4}.
\]

\end_inset

However, it is not by 
\begin_inset Formula $\mathrm{FL}_{1}$
\end_inset

: 
\begin_inset Formula 
\[
0.6\leq0.8,\qquad\boxed{1.0\not\leq0.8},\qquad0.4\leq0.8,\qquad0.0\leq0.8.
\]

\end_inset


\end_layout

\begin_layout Standard
The first formulation is thus tighter, as its feasible area is smaller.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Exams schedule 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Formulation-comparison-General-problems-Exams-schedule"

\end_inset


\end_layout

\begin_layout Standard
We want to create a schedule for the exam session.
 In order to do so, we formulate the problem of finding a time slot for
 each exam in such a way that no student has more than one exam on the same
 day.
 We define binary variables as
\begin_inset Formula 
\begin{align*}
x_{it} & =1\;\text{if exam }i\text{ takes place on day }t\\
 & =0\;\text{otherwise.}
\end{align*}

\end_inset

We denote by 
\begin_inset Formula $L$
\end_inset

 the set of courses, by 
\begin_inset Formula $T$
\end_inset

 the set of days and by 
\begin_inset Formula $S$
\end_inset

 the set of all students.
 For a given student 
\begin_inset Formula $k\in S$
\end_inset

, we denote by 
\begin_inset Formula $C\left(k\right)$
\end_inset

 the index set of all courses followed by student 
\begin_inset Formula $k$
\end_inset

.
 To encode the constraints, we suggest two options:
\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\begin{align*}
\sum_{t\in T}x_{it} & =1\qquad\text{for all }i\in L,t\in T\\
\sum_{i\in C\left(k\right)}x_{it} & \leq1\qquad\text{for all }k\in S,t\in T.
\end{align*}

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\begin{align*}
\sum_{t\in T}x_{it} & =1\qquad\text{for all }i\in L,t\in T\\
x_{it}+x_{jt} & \leq1\qquad\text{for all }\left(i,j\right)\in C\!\left(k\right)\times C\!\left(k\right),k\in S,t\in T,i\not=j.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Determine between (a) and (b) which one is the best formulation and prove
 that it is the case.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The first formulation is strictly stronger than the second one.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Only the second constraint is different between the two formulations.
 The main difference is that one is aggregated (first formulation, 
\begin_inset Formula $P_{1}$
\end_inset

), and the other is not (second formulation, 
\begin_inset Formula $P_{2}$
\end_inset

).
 
\end_layout

\begin_layout Standard
Directly ask: which formulation is better than the other? Here: aggregation
 is better! More variables, but much stronger (see lifting procedure for
 cutting planes).
 
\end_layout

\begin_layout Standard
The technique is to aggregate the disaggregated version, and to see what
 happens: sum over the indices that are not in common with the other constraint,
 try to conclude.
 In this case, this means summing the second constraint of 
\begin_inset Formula $P_{2}$
\end_inset

 over all 
\begin_inset Formula $i$
\end_inset

, for a given 
\begin_inset Formula $j\in C\!\left(k\right)$
\end_inset

, a given 
\begin_inset Formula $k\in S$
\end_inset

, a given 
\begin_inset Formula $t\in T$
\end_inset

: 
\begin_inset Formula 
\[
\sum_{\substack{i\in C\left(k\right)\\
i\not=j
}
}\left(x_{it}+x_{jt}\right)\leq\sum_{\substack{i\in C\left(k\right)\\
i\not=j
}
}1,
\]

\end_inset


\begin_inset Formula 
\[
\sum_{i\in C\left(k\right)}x_{it}\leq\left|C\left(k\right)\right|-1.
\]

\end_inset

This constraint is looser than that of 
\begin_inset Formula $P_{1}$
\end_inset

: 
\begin_inset Formula $\leq1$
\end_inset

.
 Thus, if a point is in 
\begin_inset Formula $P_{1}$
\end_inset

, it is ensured to be in 
\begin_inset Formula $P_{2}$
\end_inset

; but the reverse is not true.
 
\end_layout

\begin_layout Standard
Intuition behind this? The two constraints are 
\begin_inset Formula $\leq1$
\end_inset

, but one has many more variables that the other: it must be stronger (see,
 for example, the lifting procedure for cutting planes: for a later lecture).
 For the previous exercise, the left-hand sides were not the same (either
 a binary variable or a large constant times a binary variable): one constraint
 was aggregated, the other not; for the exam schedules, no constraint is
 just a sum of constraints in the other formulation.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Courses schedule 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Formulation-comparison-General-problems-Courses-schedule"

\end_inset


\end_layout

\begin_layout Standard
We want to create a schedule for the courses.
 In order to do so, we formulate the problem of finding a time slot for
 each course in such a way that no students and no professors have two courses
 at the same time slot.
 We define binary variables as
\begin_inset Formula 
\begin{align*}
x_{it} & =1\;\text{if course }i\text{ takes place on time slot }t\\
 & =0\;\text{otherwise.}
\end{align*}

\end_inset

We denote by 
\begin_inset Formula $L$
\end_inset

 the set of courses, by 
\begin_inset Formula $T$
\end_inset

 the set of time slots, by 
\begin_inset Formula $S$
\end_inset

 the set of all students, and by 
\begin_inset Formula $P$
\end_inset

 the set of professors.
 For a given student 
\begin_inset Formula $k\in S$
\end_inset

, we denote by 
\begin_inset Formula $C\!\left(k\right)$
\end_inset

 the index set of all courses followed by student 
\begin_inset Formula $k$
\end_inset

.
 Similarly for a given professor 
\begin_inset Formula $j\in$
\end_inset

, we denote by 
\begin_inset Formula $D\!\left(j\right)$
\end_inset

 the index set of all courses taught by professor 
\begin_inset Formula $j$
\end_inset

.To encode the constraints, we suggest two options:
\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\begin{align*}
\sum_{t\in T}x_{it} & =1\qquad\text{for all }i\in L,t\in T,\\
\sum_{i\in C\left(k\right)}x_{it} & \leq1\qquad\text{for all }k\in S,t\in T,\\
\sum_{i\in D\left(j\right)}x_{it} & \leq1\qquad\text{for all }j\in P,t\in T.
\end{align*}

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\begin{align*}
\sum_{t\in T}x_{it} & =1\qquad\text{for all }i\in L,t\in T,\\
x_{it}+x_{\hat{\imath}t} & \leq1\qquad\text{for all }\left(i,\hat{\imath}\right)\in C\!\left(k\right)\times C\!\left(k\right),k\in S,t\in T,i\not=\hat{\imath},\\
x_{it}+x_{\hat{\imath}t} & \leq1\qquad\text{for all }\left(i,\hat{\imath}\right)\in D\!\left(j\right)\times D\!\left(j\right),j\in P,t\in T,i\not=\hat{\imath}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Determine between (a) and (b) which one is the best formulation and prove
 that it is the case.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The first formulation is strictly stronger than the second one.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Highly similar to that of 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Formulation-comparison-General-problems-Exams-schedule"

\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lot sizing  
\begin_inset CommandInset label
LatexCommand label
name "subsec:Formulation-comparison-General-problems-Lot-sizing"

\end_inset


\end_layout

\begin_layout Standard
We consider the lot-sizing problem, i.e.
 we want to produce items by batch in order to satisfy a demand.
 There are 
\begin_inset Formula $T$
\end_inset

 time periods, and, at each time period 
\begin_inset Formula $t$
\end_inset

, there is a demand 
\begin_inset Formula $d_{t}$
\end_inset

.
 For each batch produced, we pay a fixed price 
\begin_inset Formula $f_{t}$
\end_inset

 (irrespective of the batch size) and a variable price 
\begin_inset Formula $p_{t}$
\end_inset

 (proportional to the batch size).
 We neglect here the stock prices.
 We consider two formulations of such a problem.
\end_layout

\begin_layout Enumerate
We define continuous variables 
\begin_inset Formula $x_{t}\forall t\in\left[1,T\right]$
\end_inset

 indicating the amount produced at each time period t, binary variables
 
\begin_inset Formula $y_{t}\forall t\in\left[1,T\right]$
\end_inset

 indicating whether there was any production at period 
\begin_inset Formula $t$
\end_inset

, and variables 
\begin_inset Formula $s_{t}\forall t\in\left[1,T\right]$
\end_inset

 indicating the stock going from period 
\begin_inset Formula $t-1$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

.
 
\begin_inset Formula 
\[
\begin{array}{cccc}
P_{1}=\Big\{\left(x,y,s\right)\in\mathbb{R}_{+}^{T}\times\mathcal{B}^{T}\times\mathbb{R}_{+}^{T}\,\Big| & x_{t}+s_{t-1}=d_{t}+s_{t} & \forall t\in\left[1,T-1\right],\\
 & x_{T}+s_{T-1}=d_{T},\\
 & s_{0}=0,\\
 & x_{t}\leq M_{t}\,y_{t} & \forall t\in\left[1,T\right] & \Big\},
\end{array}
\]

\end_inset

where 
\begin_inset Formula $M_{t}=\sum_{i=t}^{T}d_{i}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
We define 
\begin_inset Formula $\mathcal{O}\!\left(T^{2}\right)$
\end_inset

 additional continuous variables 
\begin_inset Formula $w_{st}\forall s\in\left[1,T\right]\ \forall t\in\left[s,T\right]$
\end_inset

 indicating the fraction of the demand of period 
\begin_inset Formula $t$
\end_inset

 that is served from a production in period 
\begin_inset Formula $s$
\end_inset

.
 The formulation reads as follows.
\begin_inset Formula 
\[
\begin{array}{cccc}
P_{2}=\Big\{\left(x,y,w\right)\in\mathbb{R}_{+}^{T}\times\mathcal{B}^{T}\times\mathbb{R}_{+}^{T\left(T+1\right)/2}\,\Big| & x_{t}=\sum_{i=t}^{T}d_{i}\,w_{ti} & \forall t\in\left[1,T\right],\\
 & \sum_{s=1}^{t}w_{st}=1 & \forall t\in\left[1,T\right],\\
 & w_{st}\leq y_{s} & \forall t\in\left[1,T\right] & \Big\}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
Then:
\end_layout

\begin_layout Enumerate
Prove that the second formulation is at least as strong as the first one.
 
\begin_inset Newline newline
\end_inset


\series bold
Hint
\series default
: to be able to compare both formulations, you need to consider (project
 onto) the 
\begin_inset Formula $\left(x,y\right)$
\end_inset

 space.
\end_layout

\begin_layout Enumerate
Give some intuition on why the second formulation is 
\emph on
strictly
\emph default
 stronger than the first one.
\end_layout

\begin_layout Section
Graph
\end_layout

\begin_layout Standard
The following notations are often used for graphs in optimisation: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 is a graph whose edges are in set 
\begin_inset Formula $E$
\end_inset

 and vertices in 
\begin_inset Formula $V$
\end_inset

.
 An edge is a pair of vertices: 
\begin_inset Formula $E\subseteq V^{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta\!\left(i\right)$
\end_inset

 is the set of edges that go in or out of vertex 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(i\right)=\left\{ \left(i,j\right)\,\Big|\,j\in V,\left(i,j\right)\in E\right\} .
\]

\end_inset

The same notation is often used when 
\begin_inset Formula $\mathcal{I}$
\end_inset

 is a set of vertices, and represents the set of edges that start within
 the set 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and end outside 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(\mathcal{I}\right)=\left\{ \left(i,j\right)\,\Big|\,i\in\mathcal{I},\left(i,j\right)\in E,j\not\in\mathcal{I}\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $E\!\left(S\right)$
\end_inset

 is the set of edges between the nodes of set 
\begin_inset Formula $S\subseteq V$
\end_inset

.
 
\begin_inset Formula 
\[
E\!\left(S\right)=\left\{ \left(i,j\right)\,\Big|\,\left(i,j\right)\in E,i\in S,j\not\in E\right\} .
\]

\end_inset


\end_layout

\begin_layout Subsection
* Travelling salesman problem (TSP)
\begin_inset Foot
status open

\begin_layout Plain Layout
Also see exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-TSP"

\end_inset

.
\end_layout

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Comparison-Graph-TSP"

\end_inset


\end_layout

\begin_layout Standard
Given a list of cities and the distances between each pair, the undirected
 travelling salesman problem finds the shortest path that visits each city
 exactly once while returning to the original city.
 It has applications outside operational research; for example, to manufacture
 microchips, in order to minimise delays, every component must be placed
 as closely as possible to the other ones; the components' position can
 also be optimised.
 
\end_layout

\begin_layout Enumerate
Propose two formulations for the undirected travelling salesman.
 
\begin_inset Newline newline
\end_inset


\series bold
Hint
\series default
: one eliminates subtours and is called subtour elimination (
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

), the other imposes connexity and is named cut-set (
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

).
 
\end_layout

\begin_layout Enumerate
Prove that the two formulations are equivalent or that one is stronger than
 the other.
 To this end, follow these steps.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
For a set of vertices 
\begin_inset Formula $S\subsetneq V$
\end_inset

, what kind of relationship is there between the set of outgoing edges 
\begin_inset Formula $\delta\!\left(S\right)$
\end_inset

, the set of edges within 
\begin_inset Formula $S$
\end_inset

 
\begin_inset Formula $E\!\left(S\right)$
\end_inset

, and the whole set of edges 
\begin_inset Formula $E=E\!\left(V\right)$
\end_inset

? 
\end_layout

\begin_layout Enumerate
What can you say about 
\series bold

\begin_inset Formula $P_{\mathrm{cut}}\subseteq P_{\mathrm{sub}}$
\end_inset


\series default
? 
\end_layout

\begin_layout Enumerate
What can you say about 
\series bold

\begin_inset Formula $P_{\mathrm{sub}}\subseteq P_{\mathrm{cut}}$
\end_inset


\series default
? 
\end_layout

\end_deeper
\begin_layout Enumerate
Implement both formulations and compare the solving times when increasing
 the size of the problem.
 Is one better than the other? Does it correspond to your expectations?
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
First formulation, 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{e}c_{e}\,x_{e}\\
\text{s.t.} & \sum_{e\in\delta\left(i\right)}x_{e}=2, & \forall i\in V,\\
 & \sum_{e\in E}x_{e}=\left|V\right|,\\
 & \sum_{e\in E\left(S\right)}x_{e}\leq\left|S\right|-1, & \forall S\subsetneq V:\:2\leq\left|S\right|\leq\left|V\right|-1.
\end{array}
\]

\end_inset

Second formulation, 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{e}c_{e}\,x_{e}\\
\text{s.t.} & \sum_{e\in\delta\left(i\right)}x_{e}=2, & \forall i\in V,\\
 & \sum_{e\in E}x_{e}=\left|V\right|,\\
 & \sum_{e\in\delta\left(S\right)}x_{e}\geq2, & \forall S\subsetneq V:\:2\leq\left|S\right|\leq\left|V\right|-1.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Solution*
The following relationship holds: 
\begin_inset Formula 
\[
\underbrace{\delta\!\left(S\right)}_{\substack{\mathrm{edges\,going}\\
\mathrm{out\,of\,}S
}
}=\underbrace{E\!\left(V\right)}_{\mathrm{all\,edges}}\backslash\underbrace{E\!\left(S\right)}_{\mathrm{edges\,in\,}S}\backslash\underbrace{E\!\left(V\backslash S\right)}_{\mathrm{edges\,not\,in\,}S}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Q1.
 Two models: common part
\end_layout

\begin_layout Standard
Notations: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 is a graph whose edges are in set 
\begin_inset Formula $E$
\end_inset

 and vertices in 
\begin_inset Formula $V$
\end_inset

.
 An edge is a pair of vertices: 
\begin_inset Formula $E\subseteq V^{2}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta\!\left(i\right)$
\end_inset

 is the set of edges that go in or out of vertex 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(i\right)=\left\{ \left(i,j\right)\,\Big|\,j\in V,\left(i,j\right)\in E\right\} .
\]

\end_inset

The same notation is often used when 
\begin_inset Formula $\mathcal{I}$
\end_inset

 is a set of vertices, and represents the set of edges that start within
 the set 
\begin_inset Formula $\mathcal{I}$
\end_inset

 and end outside 
\begin_inset Formula $\mathcal{I}$
\end_inset

.
 
\begin_inset Formula 
\[
\delta\!\left(\mathcal{I}\right)=\left\{ \left(i,j\right)\,\Big|\,i\in\mathcal{I},\left(i,j\right)\in E,j\not\in\mathcal{I}\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $E\!\left(S\right)$
\end_inset

 is the set of edges between the nodes of set 
\begin_inset Formula $S\subseteq V$
\end_inset

.
 
\begin_inset Formula 
\[
E\!\left(S\right)=\left\{ \left(i,j\right)\,\Big|\,\left(i,j\right)\in E,i\in S,j\not\in E\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
Sets: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{E}$
\end_inset

: set of edges
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{V}$
\end_inset

: set of vertices
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{e}$
\end_inset

: cost of going through edge 
\begin_inset Formula $e\in\mathcal{E}$
\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ij}=1$
\end_inset

 if salesman uses the edge 
\begin_inset Formula $e=\left(i,j\right)\in\mathcal{E}$
\end_inset

, i.e.
 if he goes directly from 
\begin_inset Formula $i$
\end_inset

 to 
\begin_inset Formula $j$
\end_inset


\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min\sum_{e}c_{e}\,x_{e}.
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
If getting in a city, must go out.
 
\begin_inset Formula 
\begin{equation}
\sum_{e\in\delta\left(i\right)}x_{e}=2,\qquad\forall i\in V.\tag{{1}}\label{eq:Comparison-Graph-TSP-Both-formulations-In-out}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
(Redundant, but necessary for the rest of the exercise.) All vertices must
 be visited: 
\begin_inset Formula 
\begin{equation}
\sum_{e\in E}x_{e}=\left|V\right|.\tag{{2}}\label{eq:Comparison-Graph-TSP-Both-formulations-All-vertices}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Not enough: the solution can have subtours, non-connected path.
 So add many more constraints.
 Always an exponential number of them! (Practical solution: generate them
 on the fly, when they are needed.)
\end_layout

\begin_layout Subsubsection
Q1.
 
\series bold
Formulation: Subtour elimination
\end_layout

\begin_layout Standard
Directly eliminate subtours: for every subtour in the graph (incomplete
 Hamiltonian cycles), impose that at least one edge is not followed.
 
\begin_inset Formula 
\begin{equation}
\sum_{e\in\boxed{E}\left(S\right)}x_{e}\leq\left|S\right|-1,\qquad\forall S\subsetneq V:\:2\leq\left|S\right|\leq\left|V\right|-1.\tag{{3}}\label{eq:Comparison-Graph-TSP-Subtour-elimination}
\end{equation}

\end_inset


\end_layout

\begin_layout Remark*
Oldest formulation for this problem.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename F:/Univ/_PhD/TA/MATH0462/Syllabus/4_TSP_subtour.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Subtour elimination: here, the main tour and a subtour.
 If, for each and every subset of nodes, there must be one edge less than
 the number of vertices, then subtours are disallowed (no cycle within this
 subset of nodes).
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Q1.
 
\series bold
Formulation: Cut-set
\end_layout

\begin_layout Standard
Impose connexity of the path: for each 
\begin_inset Quotes eld
\end_inset

island
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $S$
\end_inset

 of vertices, impose to get in and out of it (or more).
 
\begin_inset Formula 
\begin{equation}
\sum_{e\in\boxed{\delta}\left(S\right)}x_{e}\geq2,\qquad\forall S\subsetneq V:\:2\leq\left|S\right|\leq\left|V\right|-1.\tag{{4}}\label{eq:Comparison-Graph-TSP-Cut-set}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Q2.
 Prove equivalence
\end_layout

\begin_layout Standard
Two steps: 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $P_{\mathrm{cut}}\subseteq P_{\mathrm{sub}}$
\end_inset


\series default
: start with the constraints of 
\begin_inset Formula $P_{\mathrm{sub}},$
\end_inset

 show how to reach 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset


\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $P_{\mathrm{sub}}\subseteq P_{\mathrm{cut}}$
\end_inset


\series default
: start with the constraints of 
\begin_inset Formula $P_{\mathrm{cut}},$
\end_inset

 show how to reach 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset


\end_layout

\begin_layout Standard
Only difference between the formulations: subtour or cut-set constraints.
 So mainly work with these constraints (transform one into the other), may
 inject the others within the mix.
 
\end_layout

\begin_layout Standard
Must prove a bijection between the two sets of constraints, i.e.
 for each subset 
\begin_inset Formula $S$
\end_inset

 of edges.
 
\end_layout

\begin_layout Subsubsection
Q2.1.
 
\series bold
Relationship between 
\begin_inset Formula $E\!\left(S\right)$
\end_inset

 and 
\begin_inset Formula $\delta\!\left(S\right)$
\end_inset


\end_layout

\begin_layout Standard
Why 
\series bold

\begin_inset Formula $\delta\!\left(S\right)$
\end_inset


\series default
? Used for cut-set formulation.
 Why 
\begin_inset Formula $E\!\left(S\right)$
\end_inset

? Used for subtour elimination.
 Next step: prove one implies the other, so will require this kind of relationsh
ip.
 
\end_layout

\begin_layout Standard
The outgoing edges from 
\begin_inset Formula $S$
\end_inset

 are, among all the edges, those that are neither in 
\begin_inset Formula $S$
\end_inset

 nor in 
\begin_inset Formula $V\backslash S$
\end_inset

.
 
\begin_inset Formula 
\begin{equation}
\delta\!\left(S\right)=\underbrace{E\!\left(V\right)}_{\mathrm{all\,edges}}\backslash\underbrace{E\!\left(S\right)}_{\mathrm{edges\,in\,}S}\backslash\underbrace{E\!\left(V\backslash S\right)}_{\mathrm{edges\,not\,in\,}S}.\tag{{5}}\label{eq:Comparison-Graph-TSP-Graph-relationship-Delta-e}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 4_Pcut_Psub.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\series bold
\begin_inset Formula $\delta\!\left(S\right)=E\!\left(V\right)\backslash E\!\left(S\right)\backslash E\!\left(V\backslash S\right)$
\end_inset


\series default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Q2.2.
 Prove the inclusion: 
\begin_inset Formula $P_{\mathrm{sub}}\subseteq P_{\mathrm{cut}}$
\end_inset


\end_layout

\begin_layout Standard
Any point within 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

 is within 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

.
 Start with the constraints of 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

 and prove that they imply the constraints of 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

.
 
\end_layout

\begin_layout Standard

\series bold
General idea?
\series default
 Try to apply 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Comparison-Graph-TSP-Graph-relationship-Delta-e"

\end_inset

 for each and every 
\begin_inset Formula $S$
\end_inset

.
 Write equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Comparison-Graph-TSP-Subtour-elimination"

\end_inset

 for 
\begin_inset Formula $E\!\left(S\right)$
\end_inset

 and 
\begin_inset Formula $E\!\left(V\backslash S\right)$
\end_inset

.
 Need 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Comparison-Graph-TSP-Both-formulations-All-vertices"

\end_inset

 for 
\begin_inset Formula $E\!\left(V\right)$
\end_inset

.
 Rework them all to get 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Comparison-Graph-TSP-Cut-set"

\end_inset

 for 
\begin_inset Formula $\delta\!\left(S\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
For some 
\begin_inset Formula $S$
\end_inset

 such that 
\begin_inset Formula $S\subsetneq V$
\end_inset

 and 
\begin_inset Formula $2\leq\left|S\right|\leq\left|V\right|-1$
\end_inset

, write equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Comparison-Graph-TSP-Subtour-elimination"

\end_inset

 for 
\begin_inset Formula $V\backslash S$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\sum_{e\in E\left(V\backslash S\right)}x_{e}\leq\left|V\backslash S\right|-1.\tag{{6}}\label{eq:Comparison-Graph-TSP-Proof-VS}
\end{equation}

\end_inset

Then, taking 
\begin_inset Formula $\eqref{eq:Comparison-Graph-TSP-Both-formulations-All-vertices}-\eqref{eq:Comparison-Graph-TSP-Subtour-elimination}-\eqref{eq:Comparison-Graph-TSP-Proof-VS}$
\end_inset

 exactly yields 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Comparison-Graph-TSP-Cut-set"

\end_inset

 (for operator: one 
\begin_inset Formula $=$
\end_inset

, two 
\begin_inset Formula $\leq$
\end_inset

 behind 
\begin_inset Formula $-$
\end_inset

, meaning that the result is 
\begin_inset Formula $\geq$
\end_inset

): 
\begin_inset Formula 
\[
\underbrace{\overbrace{\left(\sum_{e\in E\left(V\right)}x_{e}\right)}^{\eqref{eq:Comparison-Graph-TSP-Both-formulations-All-vertices}}-\overbrace{\left(\sum_{e\in E\left(S\right)}x_{e}\right)}^{\eqref{eq:Comparison-Graph-TSP-Subtour-elimination}}-\overbrace{\left(\sum_{e\in E\left(V\backslash S\right)}x_{e}\right)}^{\eqref{eq:Comparison-Graph-TSP-Proof-VS}}}_{\sum_{e\in\delta\left(S\right)}x_{e}\mathrm{,\,by\,}\eqref{eq:Comparison-Graph-TSP-Graph-relationship-Delta-e}}\geq\underbrace{\overbrace{\left(\left|V\right|\right)}^{\eqref{eq:Comparison-Graph-TSP-Both-formulations-All-vertices}}-\overbrace{\left(\left|S\right|-1\right)}^{\eqref{eq:Comparison-Graph-TSP-Subtour-elimination}}-\overbrace{\left(\left|V\backslash S\right|-1\right)}^{\eqref{eq:Comparison-Graph-TSP-Proof-VS}}}_{2}.
\]

\end_inset

In other words: the formulation 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

 is at least as general as 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

, because it implies the constraints of the latter.
 
\end_layout

\begin_layout Subsubsection

\series bold
Q2.3.
 Prove the inclusion: 
\begin_inset Formula $P_{\mathrm{cut}}\subseteq P_{\mathrm{sub}}$
\end_inset


\end_layout

\begin_layout Standard
The reverse is true: any point within 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

 is within 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

.
 Start with the constraints of 
\begin_inset Formula $P_{\mathrm{cut}}$
\end_inset

 and prove that they imply the constraints of 
\begin_inset Formula $P_{\mathrm{sub}}$
\end_inset

.
 Sum 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Comparison-Graph-TSP-Both-formulations-In-out"

\end_inset

 over all vertices of 
\begin_inset Formula $S$
\end_inset

: 
\begin_inset Formula 
\[
\sum_{i\in S}\sum_{e\in\delta\left(i\right)}x_{e}=2\,\left|S\right|.
\]

\end_inset

Add it to the opposite of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Comparison-Graph-TSP-Cut-set"

\end_inset

:
\begin_inset Formula 
\[
\underbrace{\overbrace{\sum_{i\in S}\sum_{e\in\delta\left(i\right)}x_{e}}^{\eqref{eq:Comparison-Graph-TSP-Both-formulations-In-out}}-\overbrace{\sum_{e\in\delta\left(S\right)}x_{e}}^{\eqref{eq:Comparison-Graph-TSP-Cut-set}}}_{2\,\sum_{e\in E\left(S\right)}x_{e}}\leq\overbrace{2\,\left|S\right|}^{\eqref{eq:Comparison-Graph-TSP-Both-formulations-In-out}}-\overbrace{2}^{\eqref{eq:Comparison-Graph-TSP-Cut-set}}.
\]

\end_inset

Explain the transformation from the image.
 This is exactly constraint 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Comparison-Graph-TSP-Subtour-elimination"

\end_inset

 after dividing by two.
 
\end_layout

\begin_layout Standard

\series bold
In conclusion: both formulations are equal (they have the same LP relaxation).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 4_Psub_Pcut.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\series bold
\begin_inset Formula $P_{\mathrm{sub}}\subseteq P_{\mathrm{cut}}$
\end_inset


\series default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Numerical experiments
\end_layout

\begin_layout Standard
TODO: write the code, run it.
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Cuts and valid inequalities 
\begin_inset CommandInset label
LatexCommand label
name "chap:Cuts-and-valid"

\end_inset


\end_layout

\begin_layout Standard
Cuts and valid inequalities help make a formulation stronger: more corners
 of the feasible region will be integer-feasible solutions (at least for
 some variables), without needing branching.
 The goal is to reach the convex hull of the integer-feasible points.
 
\end_layout

\begin_layout Standard
In theory, it would be possible to solve exactly mixed-integer programs
 with a cutting plane generator and the simplex algorithm; however, in practice,
 this was shown to have very poor performance.
 Nevertheless, cutting planes help the branch-and-bound algorithm be more
 efficient, and all mixed-integer solvers use them nowadays.
\end_layout

\begin_layout Standard
Many commercial solvers also allow the users to write their own cutting
 planes, than can depend on the problem structure (for example, Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Cuts-Knapsack-covers"

\end_inset

 derives cutting planes for a specific kind of constraint).
 This is done through callback functions that are called at branch-and-bound
 nodes: they are allowed to add constraints 
\emph on
that remove fractional solutions
\emph default
.
 
\end_layout

\begin_layout Standard
An orthogonal but related notion is 
\emph on
lazy constraints
\emph default
: as opposed to cutting planes, they do not strengthen the formulation,
 they are required for it to be correct.
 However, in many applications, the complete formulation is too large (like
 the subtour elimination and cut-set constraints for the TSP, as in Exercise
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-TSP"

\end_inset

): it is often desirable to ignore some constraints of the formulation,
 and to add them back only when they are violated.
 In this case, solvers often implement a similar mechanism called 
\emph on
lazy constraints
\emph default
 to add those missing constraints.
 As opposed to user cuts, these are allowed to remove 
\emph on
integer-feasible solutions
\emph default
.
 
\end_layout

\begin_layout Section
Integer and mixed-integer cuts 
\begin_inset CommandInset label
LatexCommand label
name "sec:Cuts-Generic"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Remark*
There are multiple correct answers for each question.
 Even if you use the exact same techniques as indicated in the solutions,
 you might get different cuts, but still correct.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Valid inequalities 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Generic-Valid-inequalities"

\end_inset


\end_layout

\begin_layout Standard
Find a valid inequality for the following sets:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathcal{B},y\in\mathcal{B}\,|\,12\,x-6\,y\leq7\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},y\in\mathcal{B}\,|\,x\leq20\,y,\quad x\leq7\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},y\in\mathbb{N}\,|\,x\leq6\,y,\quad x\leq16\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},\left(y_{1},y_{2},y_{3}\right)\in\mathbb{N}^{3}\,|\,-x-\frac{10}{3}y_{1}+y_{2}+\frac{11}{4}y_{3}\leq\frac{21}{2}\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ \left(x,y,z\right)\in\mathcal{B}^{3},s\in\mathbb{R}^{+}\,|\,2\,x+3\,y+9\,z-s=32\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Rounding for the first constraint: 
\begin_inset Formula 
\[
2\,x-y\leq1.
\]

\end_inset

Disjunction on the binary/integer variable for the next two: 
\begin_inset Formula 
\[
x\leq7\,y\qquad\text{and}\qquad x\leq4+4\,y.
\]

\end_inset

MIR for the last two: 
\begin_inset Formula 
\[
y+3\,z-s\leq10\qquad\text{and}\qquad\frac{1}{3}\,y+\frac{5}{3}\,z+\frac{1}{3}\,s\leq6.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Techniques: rounding (1), disjunction (2, 3), MIR (4, 5).
\end_layout

\begin_layout Subsubsection

\series bold
(1) 
\series default

\begin_inset Formula $X=\left\{ x\in\mathcal{B},y\in\mathcal{B}\,|\,12\,x-6\,y\leq7\right\} $
\end_inset

.
 
\end_layout

\begin_layout Standard
Draw the area: some integer points, the polyhedron does not have corners
 due to this constraint at integer-feasible points.
 Two corners are not integer-feasible.
 
\end_layout

\begin_layout Standard
General technique: round coefficients (all variables are integer).
 Chvátal-Gomory procedure: 
\begin_inset Formula 
\[
\left\lfloor a_{1}\right\rfloor x_{1}+\left\lfloor a_{2}\right\rfloor x_{2}\leq\left\lfloor b\right\rfloor .
\]

\end_inset

Left-hand side: value is reduced due to rounding down, and reaches an integer
 value; same for right-hand side, and it then reaches an integer value.
 Due to working with integers exclusively (important!), still valid.
 
\end_layout

\begin_layout Standard

\series bold
Problem here: nothing to round!
\series default
 Theory allows to multiply by some real 
\begin_inset Formula $u$
\end_inset

: divide by something to get something to round! 
\end_layout

\begin_layout Standard
Here: divide by six, then round.
 
\series bold
Pay attention to the sign
\series default
: the rounding operator applies on the complete coefficient, be it positive
 or negative (this is rarely important, but otherwise you may get incorrect
 results: try dividing by 4).
 
\begin_inset Formula 
\[
\frac{12}{6}\,x-\frac{6}{6}\,y\leq\frac{7}{6}\qquad\Rightarrow\qquad\left\lfloor \frac{12}{6}\right\rfloor \,x+\boxed{\left\lfloor -\frac{6}{6}\right\rfloor }\,y\leq\left\lfloor \frac{7}{6}\right\rfloor 
\]

\end_inset


\begin_inset Formula 
\[
\Rightarrow\qquad2\,x-y\leq1.
\]

\end_inset

Much better than the existing constraint, but could do better (
\begin_inset Formula $x-y\leq0$
\end_inset

), by dividing by another value (8).
 
\end_layout

\begin_layout Remark*
Can also be done for equalities! Transform into 
\begin_inset Formula $\leq$
\end_inset

 and 
\begin_inset Formula $\geq$
\end_inset

.
 
\end_layout

\begin_layout Standard
(In 
\emph on
Integer Programming
\emph default
, Wolsey, section 8.2, example 8.5.)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 5_valid_ineq_12x6y7.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible area for 
\begin_inset Formula $12x_{1}-6x_{2}\leq7$
\end_inset

 and a generated cut.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
(2) 
\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},y\in\mathcal{B}\,|\,x\leq20\,y,\quad x\leq7\right\} $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $y$
\end_inset

 is a binary variable: explore all possible values.
 
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $y=0$
\end_inset

, the only possible value for 
\begin_inset Formula $x$
\end_inset

 is 
\begin_inset Formula $0$
\end_inset

.
 
\begin_inset Formula 
\[
x\leq0,\quad x\leq7\qquad\Rightarrow\qquad x=0.
\]

\end_inset


\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $y=1$
\end_inset

, then 
\begin_inset Formula 
\[
x\leq20,\quad x\leq7\qquad\Rightarrow\qquad x\leq7.
\]

\end_inset


\end_layout

\begin_layout Standard
How to merge both of them? 
\begin_inset Formula 
\[
x\leq7\,y.
\]

\end_inset

Subsumes both constraints! 
\end_layout

\begin_layout Standard
More generally, for a mixed-integer set of constraints 
\begin_inset Formula $x\leq c\,y$
\end_inset

, 
\begin_inset Formula $x\leq b$
\end_inset

, where 
\begin_inset Formula $x\in\mathbb{R}^{+}$
\end_inset

 and 
\begin_inset Formula $y\in\mathbb{N}$
\end_inset

 (this exercise: 
\begin_inset Formula $y$
\end_inset

 is binary), 
\begin_inset Formula 
\[
x\leq b-\gamma\,\left(\kappa-y\right),\qquad\kappa=\left\lceil \frac{b}{c}\right\rceil ,\qquad\gamma=b-\left(\kappa-1\right)\,c.
\]

\end_inset

(In 
\emph on
Integer Programming
\emph default
, Wolsey, section 8.2, example 8.3.) Here? 
\begin_inset Formula 
\[
\kappa=\left\lceil \frac{7}{20}\right\rceil =1,\qquad\gamma=7-0\times20=7,
\]

\end_inset


\begin_inset Formula 
\[
x\leq7-7\left(1-y\right)=7-7+7\,y=7y.
\]

\end_inset


\end_layout

\begin_layout Remark*
This applies in the case of big-
\begin_inset Formula $M$
\end_inset

 constraint (e.g., a plant can only produce when it is on).
 Thanks to this, the solver can, in some cases, improve the value of your
 
\begin_inset Formula $M$
\end_inset

, based on known bounds for the variables.
 However, this kind of valid inequality is more general than this.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 5_valid_ineq_x20yx7.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible area for 
\begin_inset Formula $x\leq20\,y,\quad x\leq7$
\end_inset

 and a generated cut.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
(3) 
\series default

\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},y\in\mathbb{N}\,|\,x\leq6\,y,\quad x\leq16\right\} $
\end_inset


\end_layout

\begin_layout Standard
Application of the previous general technique! The coefficients are 
\begin_inset Formula $c=6$
\end_inset

 and 
\begin_inset Formula $b=16$
\end_inset

.
 Then
\begin_inset Formula 
\[
\kappa=\left\lceil \frac{b}{c}\right\rceil =\left\lceil \frac{16}{6}\right\rceil =3,\qquad\gamma=b-\left(\kappa-1\right)\,c=16-\left(3-1\right)\,6=4.
\]

\end_inset

The resulting valid inequality is: 
\begin_inset Formula 
\[
x\leq b-\gamma\,\left(\kappa-y\right)=16-4\,\left(3-y\right)=4+4\,y.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 5_valid_ineq_x6yx16.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible area for 
\begin_inset Formula $x\leq6\,y,\quad x\leq16$
\end_inset

 and a generated cut.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
MIR introduction
\end_layout

\begin_layout Standard
The next one requires to bring out the big guns: the kabbalistic 
\emph on
mixed-integer rounding inequality
\emph default
 (MIR).
 It applies to inequalities like 
\begin_inset Formula 
\[
\underbrace{\sum_{j}a_{j}\,x_{j}}_{x_{j}\in\mathbb{Z}}+\underbrace{\sum_{i}d_{i}\,y_{i}}_{y_{i}\in\mathbb{R}}\leq b.
\]

\end_inset

Define the fractional part of a number (
\begin_inset Quotes eld
\end_inset

the part after the decimal point
\begin_inset Quotes erd
\end_inset

): 
\begin_inset Formula 
\[
f_{b}=b-\left\lfloor b\right\rfloor .
\]

\end_inset

The MIR valid inequality is (keep the children away!): 
\begin_inset Formula 
\[
\sum_{j:f_{a_{j}}\leq f_{b}}\left\lfloor a_{j}\right\rfloor \,x_{j}+\sum_{j:f_{a_{j}}>f_{b}}\left(\left\lfloor a_{j}\right\rfloor +\frac{f_{a_{j}}-f_{b}}{1-f_{b}}\right)\,x_{j}+\sum_{i:d_{i}>0}d_{i}\,y_{i}+\sum_{i:d_{i}<0}\frac{d_{i}}{1-f_{b}}\,y_{i}\leq\left\lfloor b\right\rfloor .
\]

\end_inset

(In 
\emph on
Integer Programming
\emph default
, Wolsey, sections 8.6 and 8.7.)
\end_layout

\begin_layout Subsubsection

\series bold
(4) 
\series default

\begin_inset Formula $X=\left\{ x\in\mathbb{R}^{+},\left(y_{1},y_{2},y_{3}\right)\in\mathbb{N}^{3}\,|\,-x-\frac{10}{3}y_{1}+y_{2}+\frac{11}{4}y_{3}\leq\frac{21}{2}\right\} $
\end_inset


\end_layout

\begin_layout Standard
Compute the fractional parts: 
\begin_inset Formula 
\[
f_{b}=\frac{2}{3},\qquad\underbrace{f_{a_{1}}=\frac{2}{3},\qquad f_{a_{2}}=0}_{\leq f_{b}},\qquad\underbrace{f_{a_{3}}=\frac{3}{4}}_{>f_{b}}.
\]

\end_inset

Why this value for 
\begin_inset Formula $f_{a_{1}}$
\end_inset

? By definition of the fractional value: 
\begin_inset Formula 
\[
f_{a_{1}}=a_{1}-\left\lfloor a_{1}\right\rfloor =\left(-\frac{10}{3}\right)-\underbrace{\left\lfloor -\frac{10}{3}\right\rfloor }_{=-4}=-\frac{10}{3}+\frac{12}{3}=\frac{2}{3}.
\]

\end_inset

Then apply MIR: 
\begin_inset Formula 
\[
\overbrace{\left\lfloor a_{1}\right\rfloor \,y_{1}+\left\lfloor a_{2}\right\rfloor \,y_{2}}^{f_{a_{j}}\leq f_{b}}+\overbrace{\left(\left\lfloor a_{3}\right\rfloor +\frac{f_{a_{3}}-f_{b}}{1-f_{b}}\right)\,y_{3}}^{f_{a_{j}}>f_{b}}+\overbrace{\frac{-1/3}{1-2/3}s}^{d_{i}<0}\leq\left\lfloor b\right\rfloor ,
\]

\end_inset


\begin_inset Formula 
\[
\underbrace{\left\lfloor -\frac{10}{3}\right\rfloor }_{=-4}\,y_{1}+\underbrace{\left\lfloor 1\right\rfloor }_{=1}\,y_{2}+\underbrace{\left(\overbrace{\left\lfloor \frac{11}{4}\right\rfloor }^{=2}+\overbrace{\frac{\left(3/4\right)-\left(2/3\right)}{1-\left(2/3\right)}}^{\left(1/12\right)/\left(1/3\right)}\right)}_{=9/4}\,y_{3}+\frac{-1/3}{1-2/3}s\leq10,
\]

\end_inset


\begin_inset Formula 
\[
y+3\,z-s\leq10.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
(5) 
\series default

\begin_inset Formula $X=\left\{ \left(x,y,z\right)\in\mathcal{B}^{3},s\in\mathbb{R}^{+}\,|\,2\,x+3\,y+9\,z-s=32\right\} $
\end_inset


\end_layout

\begin_layout Standard

\series bold
Equality
\series default
 constraint, hence separate into two parts: 
\begin_inset Formula $\leq$
\end_inset

 and 
\begin_inset Formula $\geq$
\end_inset

.
 A valid inequality for any of those two is still valid for the original
 equality constraint.
 Here, for example, work on 
\begin_inset Formula $\leq$
\end_inset

.
 
\end_layout

\begin_layout Standard
How to apply MIR? Need something to round! Here, 
\series bold
divide by three
\series default
: 
\begin_inset Formula 
\[
\underbrace{\frac{2}{3}\,x+y+3\,z}_{\mathrm{integer}}\underbrace{-\frac{1}{3}s}_{\mathrm{real}}\leq\frac{32}{3}.
\]

\end_inset

Compute the fractional parts: 
\begin_inset Formula 
\[
f_{b}=\frac{2}{3},\qquad\underbrace{f_{a_{1}}=\frac{2}{3},\qquad f_{a_{2}}=0,\qquad f_{a_{3}}=0}_{\leq f_{b}}.
\]

\end_inset

Then apply MIR: 
\begin_inset Formula 
\[
\underbrace{\left\lfloor \frac{2}{3}\right\rfloor }_{=0}\,x+y+3\,z+\frac{-1/3}{1-2/3}s\leq10,
\]

\end_inset


\begin_inset Formula 
\[
y+3\,z-s\leq10.
\]

\end_inset


\end_layout

\begin_layout Standard
How about dividing by five? This generates another valid inequality (which
 could be important for cutting planes).
 
\begin_inset Formula 
\[
\underbrace{\frac{2}{5}\,x+\frac{3}{5}\,y+\frac{9}{5}\,z}_{\mathrm{integer}}\underbrace{-\frac{1}{5}s}_{\mathrm{real}}\leq\frac{32}{5}.
\]

\end_inset

Compute the fractional parts: 
\begin_inset Formula 
\[
f_{b}=\frac{2}{5},\qquad\underbrace{f_{a_{1}}=\frac{2}{5}}_{\leq f_{b}},\qquad\underbrace{f_{a_{2}}=\frac{3}{5},\qquad f_{a_{3}}=\frac{4}{5}}_{>f_{b}}.
\]

\end_inset

Then apply MIR: 
\begin_inset Formula 
\[
\left\lfloor \frac{2}{5}\right\rfloor \,x+\left(\left\lfloor \frac{3}{5}\right\rfloor +\frac{3/5-2/5}{1-2/5}\right)\,y+\left(\left\lfloor \frac{9}{5}\right\rfloor +\frac{4/5-2/5}{1-2/5}\right)\,z+\frac{-1/5}{1-2/5}\,s\leq6,
\]

\end_inset


\begin_inset Formula 
\[
\frac{1}{3}\,y+\frac{5}{3}\,z+\frac{1}{3}\,s\leq6.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cutting planes 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Generic-Cutting-planes"

\end_inset


\end_layout

\begin_layout Standard
Find a valid inequality for 
\begin_inset Formula $X$
\end_inset

 which cuts the point 
\begin_inset Formula $x^{*}$
\end_inset

:
\begin_inset Formula 
\[
X=\left\{ \left(v,w,x,y,z\right)\in\mathbb{Z}^{5}\,|\,9\,v+12\,w+8\,x+17\,y+13\,z\geq50\right\} ,
\]

\end_inset


\begin_inset Formula 
\[
x^{*}=\left(0,\frac{25}{6},0,0,0\right).
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula $3\,v+3\,w+2\,x+5\,y+4\,z\geq13.$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Difference with previous exercise? Ensure the given point is cut (not just
 any valid inequality), applying any of the previous techniques (or the
 ones that will follow).
 For example, useful for branch-and-cut: ensure current non-integer-feasible
 point is thrown away, such as the current point: 
\begin_inset Formula 
\[
x^{*}=\left(0,\frac{25}{6},0,0,0\right).
\]

\end_inset


\end_layout

\begin_layout Standard
The given set is 
\begin_inset Formula 
\[
X=\left\{ \left(v,w,x,y,z\right)\in\mathbb{Z}^{5}\,|\,9\,v+12\,w+8\,x+17\,y+13\,z\geq50\right\} .
\]

\end_inset

Try to divide by four (after all, this is Friday afternoon) and to round:
 
\begin_inset Formula 
\[
\left\lceil \frac{9}{4}\right\rceil \,v+\left\lceil \frac{12}{4}\right\rceil \,w+\left\lceil \frac{8}{4}\right\rceil \,x+\left\lceil \frac{17}{4}\right\rceil \,y+\left\lceil \frac{13}{4}\right\rceil \,z\geq\left\lceil \frac{50}{4}\right\rceil ,
\]

\end_inset


\begin_inset Formula 
\[
3\,v+3\,w+2\,x+5\,y+4\,z\geq13.
\]

\end_inset

Why rounding up? To the left: ensure the result is integer, with a quantity
 that is higher than previously; as the left-hand side is integer, can round
 the other one to be integer (round it up so the overall constraint is stronger).
 
\end_layout

\begin_layout Standard
This new constraint cuts the current point: 
\begin_inset Formula 
\[
3\cdot0+3\,\frac{25}{6}+2\cdot0+5\cdot0+4\cdot0=\frac{25}{2}\not\geq13.
\]

\end_inset


\end_layout

\begin_layout Standard
(In 
\emph on
Integer Programming
\emph default
, Wolsey, section 8.3.2.)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Knapsack covers 
\begin_inset CommandInset label
LatexCommand label
name "sec:Cuts-Knapsack-covers"

\end_inset


\end_layout

\begin_layout Subsection
Knapsack covers 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Knapsack-covers-Basic"

\end_inset


\end_layout

\begin_layout Standard
Find valid covers for the following 
\begin_inset Formula $X$
\end_inset

 which cuts the points 
\begin_inset Formula $x^{*}$
\end_inset

:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,9\,v+8\,w+6\,x+6\,y+5\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(0,\frac{5}{8},\frac{3}{4},\frac{3}{4},0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,9\,v+8\,w+6\,x+6\,y+5\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(\frac{1}{2},\frac{1}{8},\frac{3}{4},\frac{3}{4},0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,7\,v+6\,w+6\,x+4\,y+3\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(\frac{1}{7},1,\frac{1}{2},\frac{1}{4},1\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,12\,v-9\,w+8\,x+6\,y-3\,z\leq2\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(0,0,\frac{1}{2},\frac{1}{6},1\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
In order: 
\begin_inset Formula $w+x+y\leq2$
\end_inset

, 
\begin_inset Formula $v+x\leq1$
\end_inset

, 
\begin_inset Formula $v+w+z\leq2$
\end_inset

, 
\begin_inset Formula $-w+x\leq0$
\end_inset

 (with a change of variables: 
\begin_inset Formula $w^{\prime}=1-w$
\end_inset

 and 
\begin_inset Formula $z^{\prime}=1-z$
\end_inset

).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
For knapsack constraints, stronger valid inequalities can be derived.
 Hypotheses: only binary variables, only positive coefficients, less-than
 inequality, positive right-hand side.
 
\begin_inset Formula 
\[
\sum_{i}\underbrace{a_{i}}_{>0}\,\underbrace{x_{i}}_{\in\mathcal{B}}\leq\underbrace{b}_{>0}.
\]

\end_inset

Principle? Find a subset 
\begin_inset Formula $\mathcal{S}$
\end_inset

 of objects such that, if all of them are taken, the constraint is violated.
 At least one of those objects must then be left out.
 
\begin_inset Formula 
\[
\mathcal{S}\quad:\qquad\sum_{i\in S}a_{i}>b\qquad\Rightarrow\qquad\sum_{i\in S}x_{i}\leq\left|S\right|-1.
\]

\end_inset

Many such sets 
\begin_inset Formula $\mathcal{S}$
\end_inset

 usually exist; pick one that cuts the point.
 
\end_layout

\begin_layout Subsubsection
(1) 
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,9\,v+8\,w+6\,x+6\,y+5\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(0,\frac{5}{8},\frac{3}{4},\frac{3}{4},0\right)$
\end_inset


\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $\mathcal{S}=\left\{ 1,2\right\} $
\end_inset

 can be used (
\begin_inset Formula $9+8\not\leq14$
\end_inset

) to generate 
\begin_inset Formula $v+w\leq1$
\end_inset

, but it does not cut 
\begin_inset Formula $x^{*}$
\end_inset

 (
\begin_inset Formula $0+5/8\leq1$
\end_inset

).
 However, 
\begin_inset Formula $\mathcal{S}=\left\{ 2,3,4\right\} $
\end_inset

 does: 
\begin_inset Formula 
\[
8+6+6=20\not\leq14,\qquad\frac{5}{8}+\frac{3}{4}+\frac{3}{4}=\frac{17}{8}\not\leq2.
\]

\end_inset

A valid inequality that cuts the point 
\begin_inset Formula $x^{*}$
\end_inset

 is thus 
\begin_inset Formula 
\[
w+x+y\leq2.
\]

\end_inset


\end_layout

\begin_layout Standard
How to find a good 
\begin_inset Formula $\mathcal{S}$
\end_inset

? Look at the components of 
\begin_inset Formula $x^{*}$
\end_inset

 that are non-zero, starting with the ones with the largest coefficients
 in the constraint.
 
\end_layout

\begin_layout Subsubsection
(2) 
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,9\,v+8\,w+6\,x+6\,y+5\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(\frac{1}{2},\frac{1}{8},\frac{3}{4},\frac{3}{4},0\right)$
\end_inset


\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $\mathcal{S}=\left\{ 1,3\right\} $
\end_inset

 can be used (
\begin_inset Formula $9+6\not\leq14$
\end_inset

) to generate 
\begin_inset Formula $v+x\leq1$
\end_inset

, and it cuts 
\begin_inset Formula $x^{*}$
\end_inset

 (
\begin_inset Formula $1/2+3/4\not\leq1$
\end_inset

).
 A valid inequality that cuts the point 
\begin_inset Formula $x^{*}$
\end_inset

 is thus 
\begin_inset Formula 
\[
v+x\leq1.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
(3) 
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,7\,v+6\,w+6\,x+4\,y+3\,z\leq14\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(\frac{1}{7},1,\frac{1}{2},\frac{1}{4},1\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
The set 
\begin_inset Formula $\mathcal{S}=\left\{ 1,2,5\right\} $
\end_inset

 can be used (
\begin_inset Formula $7+6+3\leq14$
\end_inset

) to generate 
\begin_inset Formula $v+w+z\leq2$
\end_inset

, and it cuts 
\begin_inset Formula $x^{*}$
\end_inset

 (
\begin_inset Formula $1/7+1+1\not\leq2$
\end_inset

).
 A valid inequality that cuts the point 
\begin_inset Formula $x^{*}$
\end_inset

 is thus 
\begin_inset Formula 
\[
v+w+z\leq2.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
(4) 
\begin_inset Formula $X=\left\{ x\in\mathcal{B}^{5}\,|\,12\,v-9\,w+8\,x+6\,y-3\,z\leq2\right\} $
\end_inset

, 
\begin_inset Formula $x^{*}=\left(0,0,\frac{1}{2},\frac{1}{6},1\right)$
\end_inset


\end_layout

\begin_layout Standard
Hey, this is not a knapsack! Look at the negative coefficients! Solution?
 Define new variables.
 Those new variables must be binary, as the goal is to reach a knapsack!
 Hence the complement:  
\begin_inset Formula 
\[
a=1-w,\qquad b=1-z.
\]

\end_inset

The constraint now becomes: 
\begin_inset Formula 
\[
12\,v-9\,\left(1-a\right)+8\,x+6\,y-3\,\left(1-b\right)\leq2,
\]

\end_inset


\begin_inset Formula 
\[
12\,v+9\,a+8\,x+6\,y+3\,b\leq2+9+3,
\]

\end_inset


\begin_inset Formula 
\[
12\,v+9\,a+8\,x+6\,y+3\,b\leq14.
\]

\end_inset

The point to cut is now 
\begin_inset Formula $x^{*'}=\left(0,1,\frac{1}{2},\frac{1}{6},0\right)$
\end_inset

.
 Apply the cover procedure for the set 
\begin_inset Formula $\mathcal{S}=\left\{ 2,3\right\} $
\end_inset

, as it satisfies the hypotheses: 
\begin_inset Formula $9+8=17\not\leq14$
\end_inset

 and 
\begin_inset Formula $1+\frac{1}{2}=\frac{3}{2}\not\leq1$
\end_inset

.
 
\begin_inset Formula 
\[
a+x\leq1,
\]

\end_inset


\begin_inset Formula 
\[
\left(1-w\right)+x\leq1,
\]

\end_inset


\begin_inset Formula 
\[
-w+x\leq0.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cover lifting 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Knapsack-covers-Lifting"

\end_inset


\end_layout

\begin_layout Standard
For the set 
\begin_inset Formula $X=\left\{ \left(u,v,w,x,y,z\right)\in\mathcal{B}^{6}\,|\,12\,u+9\,v+7\,w+5\,x+5\,y+3\,z\leq14\right\} $
\end_inset

 and the cover 
\begin_inset Formula $w+y+z\leq2$
\end_inset

: 
\end_layout

\begin_layout Enumerate
Determine whether the cover is a facet of 
\begin_inset Formula $X\cap\left\{ \left(u,v,w,x,y,z\right)\in\mathcal{B}^{6}\,|\,u=v=x=0\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Lift the inequality for 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The cover is a facet of the given set, as it has three affinely independent
 points.
 
\end_layout

\begin_layout Solution*
After one iteration of lifting (on 
\begin_inset Formula $u$
\end_inset

), the cover becomes 
\begin_inset Formula $2\,u+w+y+z\leq2$
\end_inset

.
 After lifting 
\begin_inset Formula $v$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

: 
\begin_inset Formula $2\,u+v+w+y+z\leq2$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Cover inequalities can usually be made stronger by adding more variables,
 which is the goal of lifting.
 
\end_layout

\begin_layout Standard
Polyhedron 
\begin_inset Formula $P$
\end_inset

: set of points defined by linear inequalities and equalities.
 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $k$
\end_inset

 points 
\begin_inset Formula $\left\{ x^{i}\right\} $
\end_inset

 (each 
\begin_inset Formula $x^{i}\in\mathbb{R}^{n}$
\end_inset

) affinely independent: if the 
\begin_inset Formula $k-1$
\end_inset

 directions 
\begin_inset Formula $x^{j}-x^{j-1}$
\end_inset

 are linearly independent.
 
\begin_inset Newline newline
\end_inset

Dimension of a polyhedron 
\begin_inset Formula $\mathrm{dim}\!\left(P\right)$
\end_inset

: one less than the maximum number of affinely independent points in the
 polyhedron.
 For example, in 2D, maximum two linearly independent vectors, hence three
 affinely independent points: dimension at most 
\begin_inset Formula $2$
\end_inset

, depending on the polyhedron (see figures).
 
\begin_inset Newline newline
\end_inset

Face 
\begin_inset Formula $F$
\end_inset

 of a polyhedron 
\begin_inset Formula $P$
\end_inset

: set of points such that a valid inequality 
\begin_inset Formula $\pi\,x\leq\pi_{0}$
\end_inset

 of 
\begin_inset Formula $P$
\end_inset

 is tight (this inequality 
\emph on
defines
\emph default
 the face).
 
\begin_inset Formula 
\[
F=\left\{ x\,\Big|\,x\in P,\quad\pi\,x\boxed{=}\pi_{0}\right\} .
\]

\end_inset

Facet 
\begin_inset Formula $F$
\end_inset

 of a polyhedron 
\begin_inset Formula $P$
\end_inset

: if 
\begin_inset Formula $F$
\end_inset

 is a face whose dimension is one less than that of the polyhedron.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 5_polyhedron_2d.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
2D polyhedron of dimension 
\begin_inset Formula $2$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 5_polyhedron_1d.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
2D polyhedron of dimension 
\begin_inset Formula $1$
\end_inset

 (squeezed with respect to the previous one).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
(1) Is it a facet? 
\end_layout

\begin_layout Standard
Set: 
\begin_inset Formula $X=\left\{ \left(u,v,w,x,y,z\right)\in\mathcal{B}^{6}\,|\,12\,u+9\,v+7\,w+5\,x+5\,y+3\,z\leq14\right\} $
\end_inset

.
 Considered polyhedron: 
\begin_inset Formula $P=X\cap\left\{ \left(u,v,w,x,y,z\right)\in\mathcal{B}^{6}\,|\,u=v=x=0\right\} $
\end_inset

.
 Inequality potentially defining the facet 
\begin_inset Formula $F$
\end_inset

: 
\begin_inset Formula $w+y+z\leq2$
\end_inset

.
 Dimension of the polyhedron? 
\begin_inset Formula 
\[
\mathrm{dim}\!\left(P\right)=6\underbrace{-}_{\cap}3.
\]

\end_inset


\end_layout

\begin_layout Standard
Then, 
\begin_inset Formula $F$
\end_inset

 is a facet if there are three affinely independent points that are feasible
 and tight; only look for integer points, in this case (no LP relaxation
 whatsoever: directly working with discrete sets), hence can enumerate.
 Use enumeration to find feasible points, then check affine independence.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $y$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w+y+z\leq2?$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7\,w+5\,y+3\,z\leq14?$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset

: 
\begin_inset Formula $F$
\end_inset

-tight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5+3=8\leq14$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset

: 
\begin_inset Formula $F$
\end_inset

-tight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7+3=10\leq14$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2$
\end_inset

: 
\begin_inset Formula $F$
\end_inset

-tight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7+5=12\leq14$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3\not\leq2!$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Is point in the facet?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Is point in the polyhedron?
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Affinely independent? No combination of two of them can yield the third
 one.
 Hence: 
\begin_inset Formula 
\[
p_{1}=\left(w=0,\quad y=1,\quad z=1\right),
\]

\end_inset


\begin_inset Formula 
\[
p_{2}=\left(w=1,\quad y=0,\quad z=1\right),
\]

\end_inset


\begin_inset Formula 
\[
p_{3}=\left(w=1,\quad y=1,\quad z=0\right).
\]

\end_inset

It must be a facet, as its dimension is two (one less than the number of
 affinely independent points), which is exactly one less than the dimension
 of the polyhedron 
\begin_inset Formula $X$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\series bold
(2) Lifting
\end_layout

\begin_layout Standard
The given cover is as good as it can be considering only three variables
 remaining in 
\begin_inset Formula $P$
\end_inset

, what about the full set 
\begin_inset Formula $X$
\end_inset

? The goal of lifting a valid inequality is adding new variables into the
 cover, to make it even stronger.
 The new variable is added with some coefficient 
\begin_inset Formula $\alpha$
\end_inset

 to be determined (as high as possible to have a strong constraint, but
 still valid: cannot cut feasible points!).
 
\end_layout

\begin_layout Standard
Link it to formulation comparison: if the left-hand side is higher, then
 the constraint is stronger.
 For the Exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Formulation-comparison-General-problems-Exams-schedule"

\end_inset

 (exams), the constraint 
\begin_inset Formula $x_{i}+x_{j}\leq1$
\end_inset

 was weaker than 
\begin_inset Formula $\sum_{i}x_{i}\leq1$
\end_inset

.
 
\end_layout

\begin_layout Standard
Start with a facet for the restricted polyhedron 
\begin_inset Formula $P$
\end_inset

, three variables.
 At each step: consider more variables, still a facet, but for a less and
 less restricted polyhedron.
 
\end_layout

\begin_layout Itemize
How to add 
\begin_inset Formula $u$
\end_inset

? The cover becomes
\begin_inset Formula 
\[
\alpha\,u+w+y+z\leq2.
\]

\end_inset

Which values of 
\begin_inset Formula $\alpha$
\end_inset

 are acceptable? 
\begin_inset Newline newline
\end_inset

If 
\begin_inset Formula $u=0$
\end_inset

, all values of 
\begin_inset Formula $\alpha$
\end_inset

 let the cover valid.
 However, if 
\begin_inset Formula $u=1$
\end_inset

, it becomes (rewritten to make 
\begin_inset Formula $\alpha$
\end_inset

 stand alone) 
\begin_inset Formula 
\[
\alpha+w+y+z\leq2,
\]

\end_inset


\begin_inset Formula 
\[
\alpha\leq2-w-y-z.
\]

\end_inset

The knapsack constraint of 
\begin_inset Formula $X$
\end_inset

 must still be valid with 
\begin_inset Formula $u=1$
\end_inset

: 
\begin_inset Formula 
\[
12+9\,v+7\,w+5\,x+5\,y+3\,z\leq14,
\]

\end_inset


\begin_inset Formula 
\[
9\,v+7\,w+5\,x+5\,y+3\,z\leq14-12=2.
\]

\end_inset

The best value for 
\begin_inset Formula $\alpha$
\end_inset

 (maximum) is then found as the minimum value of 
\begin_inset Formula $2-w-y-z$
\end_inset

 (so the inequality is as tight as possible) with the previous constraint
 (so the inequality is valid for 
\begin_inset Formula $P$
\end_inset

).
 
\begin_inset Formula 
\[
\begin{array}{cc}
\min & 2-w-y-z\\
\mbox{s.t.} & 9\,v+7\,w+5\,x+5\,y+3\,z\leq2
\end{array}.
\]

\end_inset

It can be rewritten as 
\begin_inset Formula 
\[
2-\begin{array}{cc}
\max & w+y+z\\
\mbox{s.t.} & 9\,v+7\,w+5\,x+5\,y+3\,z\leq2
\end{array}.
\]

\end_inset

The variables 
\begin_inset Formula $v$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 have no impact on the objective: they can be imposed to zero.
 
\begin_inset Formula 
\[
2-\begin{array}{cc}
\max & w+y+z\\
\mbox{s.t.} & 7\,w+5\,y+3\,z\leq2
\end{array}.
\]

\end_inset

The optimal value of this program is 
\begin_inset Formula $0$
\end_inset

 (impossible to take any object), hence the value of 
\begin_inset Formula $\alpha$
\end_inset

 is given by 
\begin_inset Formula 
\[
\alpha=2-0.
\]

\end_inset

The lifted constraint becomes 
\begin_inset Formula 
\[
2\,u+w+y+z\leq2.
\]

\end_inset


\end_layout

\begin_layout Remark
Let them do the next two.
 
\end_layout

\begin_layout Itemize
How to add 
\begin_inset Formula $v$
\end_inset

? The cover becomes
\begin_inset Formula 
\[
2\,u+\beta\,v+w+y+z\leq2.
\]

\end_inset

With the same reasoning, 
\begin_inset Formula 
\[
\beta=2-\begin{array}{cc}
\max & 2\,u+w+y+z\\
\mbox{s.t.} & 12\,u+7\,w+5\,y+3\,z\leq14-9=5
\end{array}=1.
\]

\end_inset

Hence the lifted inequality is: 
\begin_inset Formula 
\[
2\,u+v+w+y+z\leq2.
\]

\end_inset


\end_layout

\begin_layout Itemize
How to add 
\begin_inset Formula $x$
\end_inset

? The cover becomes 
\begin_inset Formula 
\[
2\,u+v+w+\gamma\,x+y+z\leq2.
\]

\end_inset

With the same reasoning, 
\begin_inset Formula 
\[
\gamma=2-\begin{array}{cc}
\max & 2\,u+v+w+y+z\\
\mbox{s.t.} & 12\,u+9\,v+7\,w+5\,y+3\,z\leq14-5=9
\end{array}=0.
\]

\end_inset

Hence the lifted inequality has no 
\begin_inset Formula $x$
\end_inset

: 
\begin_inset Formula 
\[
2\,u+v+w+y+z\leq2.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Generic algorithm: Integer Programming, Wolsey, 9.3.2.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Solution to a knapsack problem only with covers and lifting 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Knapsack-covers-Solving"

\end_inset


\end_layout

\begin_layout Standard
Solve the following knapsack instance (knapsack capacity: twenty kilograms)
 using a computer and only a LP solver (without support for integer variables).
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Item
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Profit (€)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Weight (kg)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write the corresponding integer linear program.
 Find a feasible solution: this is a lower bound on the objective function.
 You should get 
\begin_inset Formula $17$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Write its linear relaxation and solve it to optimality.
 The objective value is a first upper bound; you should get 
\begin_inset Formula $19.4375$
\end_inset

.
\end_layout

\begin_layout Enumerate
Find as many violated cover inequalities as possible by the following process:
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Solve the linear relaxation, 
\end_layout

\begin_layout Enumerate
Find (at least) one cover inequality that is violated by the solution to
 this LP
\end_layout

\begin_layout Standard
After adding four constraints, you could get the upper bound 
\begin_inset Formula $18.6363$
\end_inset

 and the optimal solution 
\begin_inset Formula 
\[
\left(0,0.9090,0.9090,0.9090,0,0.1818,0.0909\right).
\]

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Extend some cover inequalities by inspection (try to add a new variable
 into the mix without changing the right-hand side).
 
\begin_inset Newline newline
\end_inset

For example, with the inequality 
\begin_inset Formula $x_{2}+x_{3}+x_{6}\leq2$
\end_inset

, you can generate 
\begin_inset Formula $x_{2}+x_{3}+x_{6}+x_{7}\leq2$
\end_inset

, as only two objects (at most) amongst them can be taken at once: if you
 take 
\begin_inset Formula $x_{2}$
\end_inset

 and 
\begin_inset Formula $x_{3}$
\end_inset

, then it is no more possible to take 
\begin_inset Formula $x_{6}$
\end_inset

 or 
\begin_inset Formula $x_{7}$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

After adding three constraints (the previous one and two slight variations
 thereof), you could get the upper bound 
\begin_inset Formula $18.6$
\end_inset

 and the optimal solution 
\begin_inset Formula 
\[
\left(0.4,1,1,1,0,0,0\right).
\]

\end_inset

 
\end_layout

\begin_layout Enumerate
Show that an extended inequality by the previous procedure is less strong
 than one generated by lifting.
 To do this, start from 
\begin_inset Formula $x_{1}+x_{2}+x_{3}+x_{4}\leq3$
\end_inset

, generate one valid inequality by extension, and another one by lifting,
 compare them by optimising the corresponding relaxations (is one bound
 tighter than the other?).
 
\begin_inset Newline newline
\end_inset

After adding the lifted cover, you could get the upper bound 
\begin_inset Formula $17.6666$
\end_inset

 and the optimal solution 
\begin_inset Formula 
\[
\left(0,0.3333,1,1,0.6666,0,0\right).
\]

\end_inset

 
\end_layout

\begin_layout Enumerate
Add new cover inequalities and lift them until the problem is solved; you
 should get an optimal value of 
\begin_inset Formula $17$
\end_inset

 with the optimal solution 
\begin_inset Formula 
\[
\left(0,1,1,1,0,0,0\right).
\]

\end_inset


\end_layout

\begin_layout Remark*
Multiple paths are possible, getting different intermediate results.
 Some may be shorter than others; the intermediate results are shown for
 the shortest one.
 
\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
Integer program
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{cc}
\max & 4\,x_{1}+5\,x_{2}+6\,x_{3}+6\,x_{4}+6\,x_{5}+10\,x_{6}+15\,x_{7}\\
\mbox{s.t.} & 5\,x_{1}+5\,x_{2}+6\,x_{3}+7\,x_{4}+8\,x_{5}+12\,x_{6}+16\,x_{7}\leq20,\\
 & \mathbf{x}\in\mathcal{B}^{7}.
\end{array}
\]

\end_inset

Solution of value 
\begin_inset Formula $17$
\end_inset

: take objects 
\begin_inset Formula $2$
\end_inset

, 
\begin_inset Formula $4$
\end_inset

, and 
\begin_inset Formula $5$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\series bold
Linear relaxation
\series default

\begin_inset Formula 
\[
\begin{array}{cc}
\max & 4\,x_{1}+5\,x_{2}+6\,x_{3}+6\,x_{4}+6\,x_{5}+10\,x_{6}+15\,x_{7}\\
\mbox{s.t.} & 5\,x_{1}+5\,x_{2}+6\,x_{3}+7\,x_{4}+8\,x_{5}+12\,x_{6}+16\,x_{7}\leq20,\\
 & \mathbf{x}\in\mathbb{R}^{7}.
\end{array}
\]

\end_inset

Value: 
\begin_inset Formula $19.4375$
\end_inset

.
 Solution: 
\begin_inset Formula $\left(0,1,1,0,0,0,0.5625\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\series bold
Add covers
\end_layout

\begin_layout Standard
Three objects: can take 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $3$
\end_inset

 at the same time, but never when there is a 
\begin_inset Formula $7$
\end_inset

.
 Hence: 
\begin_inset Formula 
\[
x_{2}+x_{7}\leq1,\qquad x_{3}+x_{7}\leq1.
\]

\end_inset

Value: 
\begin_inset Formula $18.6666$
\end_inset

.
 Solution: 
\begin_inset Formula $\left(0,1,1,1,0,0.1666,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
Cannot take 
\begin_inset Formula $2$
\end_inset

, 
\begin_inset Formula $3$
\end_inset

, and 
\begin_inset Formula $6$
\end_inset

.
 
\begin_inset Formula 
\[
x_{2}+x_{3}+x_{6}\leq2.
\]

\end_inset

Value: 
\begin_inset Formula $18.6551$
\end_inset

.
 Solution: 
\begin_inset Formula $\left(0,0.9310,0.9310,1,0,0.1319,0.0689\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
Cannot take 
\begin_inset Formula $4$
\end_inset

 and 
\begin_inset Formula $7$
\end_inset

.
 
\begin_inset Formula 
\[
x_{4}+x_{7}\leq1.
\]

\end_inset

Value: 
\begin_inset Formula $18.6363$
\end_inset

.
 Solution: 
\begin_inset Formula $\left(0,0.9090,0.9090,0.9090,0,0.1818,0.0909\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\series bold
Extending
\end_layout

\begin_layout Standard
From 
\begin_inset Formula $x_{2}+x_{3}+x_{6}\leq2$
\end_inset

 generate 
\begin_inset Formula 
\[
x_{2}+x_{3}+x_{6}\boxed{+x_{7}}\leq2.
\]

\end_inset

If taking 
\begin_inset Formula $7$
\end_inset

, can only violate the constraint even more! Slight variations thereof:
\begin_inset Formula 
\[
x_{2}+x_{4}+x_{6}+x_{7}\leq2,\qquad x_{3}+x_{4}+x_{6}+x_{7}\leq2.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Comparing
\end_layout

\begin_layout Standard
With the original cover 
\begin_inset Formula $\,x_{1}+x_{2}+x_{3}+x_{4}\leq3$
\end_inset

: 
\begin_inset Formula 
\[
18.5999,\qquad\left(0.2399,0.92,0.92,0.92,0,0.0799,0.08\right).
\]

\end_inset

With the extended cover 
\begin_inset Formula $\,x_{1}+x_{2}+x_{3}+x_{4}+x_{5}+x_{6}+x_{7}\leq3$
\end_inset

:
\begin_inset Formula 
\[
18.5999,\qquad\left(0.1333,0.8666,0.8666,0.8666,0,0.1333,0.1333\right).
\]

\end_inset

With the lifted cover 
\begin_inset Formula $\,x_{1}+x_{2}+x_{3}+x_{4}+x_{5}+2\,x_{6}+3\,x_{7}\leq3$
\end_inset

:
\begin_inset Formula 
\[
17.6666,\qquad\left(0,0.3333,1,1,0.6666,0,0\right).
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Finalising
\end_layout

\begin_layout Standard
Just add one more cover: 
\begin_inset Formula 
\[
x_{3}+x_{4}+x_{5}\leq2.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Supplementary exercises 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary"

\end_inset


\end_layout

\begin_layout Subsection
Set 1 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-1"

\end_inset


\end_layout

\begin_layout Standard
For each of the following sets, give a valid inequality for the discrete
 set that cuts the point 
\begin_inset Formula $\overline{x}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{1}=\left\{ x\in\left\{ 0,1\right\} ^{4}\,\Big|\,5\,x_{1}+7\,x_{2}+8\,x_{3}+9\,x_{4}\leq15\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(1\right)}=\left(1,1,\frac{3}{8},0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{2}=\left\{ x\in\mathbb{Z}_{+}^{4}\,\Big|\,x_{1}-\frac{2}{3}\,x_{2}+\frac{7}{6}\,x_{3}+\frac{4}{3}\,x_{4}=\frac{2}{3}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(2\right)}=\left(\frac{2}{3},0,0,0\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{3}=\left\{ x\in\mathbb{Z}_{+}^{4}\,\Big|\,x_{1}-\frac{1}{3}\,x_{2}+\frac{5}{3}\,x_{3}+\frac{1}{3}\,x_{4}=\frac{1}{3}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(3\right)}=\left(\frac{1}{2},\frac{1}{2},0,0\right)$
\end_inset

.
\end_layout

\begin_layout Subsection
Set 2 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-2"

\end_inset


\end_layout

\begin_layout Standard
We consider the set 
\begin_inset Formula $X=\left\{ x\in\left\{ 0,1\right\} ^{4}\,\Big|\,3\,x_{1}+5\,x_{2}+6\,x_{3}+11\,x_{4}\leq13\right\} $
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Show that the inequality 
\begin_inset Formula $x_{1}+x_{2}+x_{3}\leq2$
\end_inset

 is valid for 
\begin_inset Formula $X$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Show that 
\begin_inset Formula $x_{1}+x_{2}+x_{3}\leq2$
\end_inset

 is not a facet of 
\begin_inset Formula $\mathrm{conv}\!\left(X\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Lift the variable 
\begin_inset Formula $x_{4}$
\end_inset

 into the inequality.
 
\end_layout

\begin_layout Enumerate
Show that the new inequality in a facet of 
\begin_inset Formula $\mathrm{conv}\!\left(X\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Set 3 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-3"

\end_inset


\end_layout

\begin_layout Standard
Find a valid inequality for 
\begin_inset Formula $X$
\end_inset

 which cuts the point 
\begin_inset Formula $x^{*}$
\end_inset

 for the following cases.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\ \mathbb{Z}^{4}\,\Big|\,5\,x_{1}+10\,x_{2}-9\,x_{3}+20\,x_{4}\leq42\right\} $
\end_inset

 and 
\begin_inset Formula $x^{*}=\left(9,1,1,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\left\{ 0,1\right\} ^{7}\,\Big|\,5\,x_{1}+5\,x_{2}+6\,x_{3}+7\,x_{4}+8\,x_{5}+12\,x_{6}+16\,x_{7}\leq20\right\} $
\end_inset

 and 
\begin_inset Formula $x^{*}=\left(0,\frac{1}{3},1,1,\frac{2}{3},0,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X=\left\{ x\in\mathbb{Z}^{3}\,\Big|\,3\,x_{1}+4\,x_{2}+9\,x_{3}\leq33\right\} $
\end_inset

 and 
\begin_inset Formula $x^{*}=\left(-4,6,2\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Set 4 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-4"

\end_inset


\end_layout

\begin_layout Standard
For each discrete set and each point, find a valid inequality that cuts
 off the given point.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{1}=\left\{ x\in\left\{ 0,1\right\} ^{4}\,\Big|\,7\,x_{1}+9\,x_{2}+10\,x_{3}+12\,x_{4}\leq25\right\} $
\end_inset

 and 
\begin_inset Formula $x=\left(0,1,1,\frac{1}{2}\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{2}=\left\{ \left(x,y\right)\in\mathbb{R}^{+}\times\left\{ 0,1\right\} \,\Big|\,x\leq20\,y,\quad x\leq5\right\} $
\end_inset

 and 
\begin_inset Formula $x=\left(5,\frac{1}{4}\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{3}=\left\{ x\in\mathbb{Z}_{+}^{4}\,\Big|\,6\,x_{1}+7\,x_{2}-3\,x_{3}-x_{4}\leq1\right\} $
\end_inset

 and 
\begin_inset Formula $x=\left(\frac{1}{6},0,0,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Set 5 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-5"

\end_inset


\end_layout

\begin_layout Standard
For each of the following sets, determine a valid inequality for the discrete
 set separating the given point 
\begin_inset Formula $\overline{x}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{1}=\left\{ x\in\left\{ 0,1\right\} ^{4}\,\Big|\,5\,x_{1}+7\,x_{2}+8\,x_{3}+13\,x_{4}\leq17\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(1\right)}=\left(1,1,\frac{1}{2},0\right)$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

If possible, provide a facet-defining inequality of 
\begin_inset Formula $\mathrm{conv}\!\left(X_{1}\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{2}=\left\{ x\in\mathbb{Z}\times\mathbb{R}^{+}\,\Big|\,x_{1}+x_{2}\geq\frac{5}{4}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(2\right)}=\left(\frac{5}{4},0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{3}=\left\{ x\in\mathbb{Z}_{+}^{4}\,\Big|\,3\,x_{1}-\frac{1}{2}\,x_{2}+5\,x_{3}+\frac{3}{2}\,x_{4}\leq\frac{1}{2}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(3\right)}=\left(\frac{1}{6},0,0,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Set 6 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cuts-Supplementary-Set-6"

\end_inset


\end_layout

\begin_layout Standard
For each of the following sets, determine a valid inequality for the discrete
 set separating the given point 
\begin_inset Formula $\overline{x}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{1}=\left\{ x\in\left\{ 0,1\right\} ^{4}\,\Big|\,9\,x_{1}+5\,x_{2}+7\,x_{3}+13\,x_{4}\leq17\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(1\right)}=\left(1,1,\frac{3}{7},0\right)$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

If possible, provide a facet-defining inequality of 
\begin_inset Formula $\mathrm{conv}\!\left(X_{1}\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{2}=\left\{ x\in\mathbb{Z}\times\mathbb{R}^{+}\,\Big|\,x_{1}+x_{2}\geq\frac{7}{5}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(2\right)}=\left(\frac{7}{5},0\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $X_{3}=\left\{ x\in\mathbb{Z}_{+}^{4}\,\Big|\,3\,x_{1}-\frac{1}{3}\,x_{2}+\frac{6}{5}\,x_{3}-\frac{3}{2}\,x_{4}\leq\frac{1}{2}\right\} $
\end_inset

 and 
\begin_inset Formula $\overline{x}^{\left(3\right)}=\left(\frac{1}{2},0,0,0\right)$
\end_inset

.
 
\end_layout

\begin_layout Section
Lazy constraints 
\begin_inset CommandInset label
LatexCommand label
name "sec:Cuts-Lazy-constraints"

\end_inset


\end_layout

\begin_layout Subsection
Travelling salesman problem 
\begin_inset CommandInset label
LatexCommand label
name "sec:Cuts-Lazy-constraints-TSP"

\end_inset


\end_layout

\begin_layout Standard
The generalised subtour elimination constraint can be used to formulate
 the prize-collecting travelling salesman problem: with respect to the travellin
g salesman problem, travelling through an edge 
\begin_inset Formula $e$
\end_inset

 has a cost 
\begin_inset Formula $c_{e}$
\end_inset

, and visiting a city 
\begin_inset Formula $j$
\end_inset

 allows them to make a profit of 
\begin_inset Formula $f_{j}$
\end_inset

; not all cities have to be visited, but the salesman still must follow
 a cycle, starting at the first city.
 
\end_layout

\begin_layout Enumerate
Give (at least) one MILP model for the travelling salesman problem (see
 Exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-TSP"

\end_inset

).
 
\end_layout

\begin_layout Enumerate
Which constraints would be interesting to be added as lazy constraints during
 the optimisation? 
\end_layout

\begin_layout Enumerate
Implement the TSP with lazy constraints.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The subtour elimination formulation: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{e}c_{e}\,x_{e}\\
\text{s.t.} & \sum_{e\in\delta\left(i\right)}x_{e}=2, & \forall i\in V,\\
 & \sum_{e\in E\left(S\right)}x_{e}\leq\left|S\right|-1, & \forall S\subsetneq V:\:2\leq\left|S\right|\leq\left|V\right|-1.
\end{array}
\]

\end_inset

Consider adding lazily the subtour elimination, based on a subtour you find
 in the graph (any tour that does not include the origin is a subtour).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Comparison-Graph-TSP"

\end_inset

 for the model.
 Lazy constraints: too many subtour elimination constraints.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Prize-collecting travelling salesman problem 
\begin_inset CommandInset label
LatexCommand label
name "sec:Cuts-Lazy-constraints-PCTSP"

\end_inset


\end_layout

\begin_layout Standard
The generalised subtour elimination constraint can be used to formulate
 the prize-collecting travelling salesman problem: with respect to the travellin
g salesman problem, travelling through an edge 
\begin_inset Formula $e$
\end_inset

 has a cost 
\begin_inset Formula $c_{e}$
\end_inset

, and visiting a city 
\begin_inset Formula $j$
\end_inset

 allows them to make a profit of 
\begin_inset Formula $f_{j}$
\end_inset

; not all cities have to be visited, but the salesman still must follow
 a cycle, starting at the first city.
 
\end_layout

\begin_layout Enumerate
Give a MILP model for the prize-collecting travelling salesman problem using
 the generalised subtour elimination constraint (GSEC).
 
\end_layout

\begin_layout Enumerate
What could be practical problems of implementing this formulation? 
\end_layout

\begin_layout Enumerate
Derive a separation procedure that could be used for a lazy-constraint-based
 implementation of the problem.
 The generated constraint must maximise the violation.
 
\end_layout

\begin_layout Enumerate
Solve the following instance of the prize-collecting travelling salesman
 problem with lazy constraint generation.
 
\begin_inset Formula 
\[
c_{e}=\begin{pmatrix}0 & 4 & 3 & 3 & 5 & 2 & 5\\
4 & 0 & 5 & 3 & 3 & 4 & 7\\
3 & 5 & 0 & 4 & 6 & 0 & 4\\
3 & 3 & 4 & 0 & 4 & 4 & 6\\
5 & 3 & 6 & 4 & 0 & 5 & 8\\
2 & 4 & 0 & 4 & 5 & 0 & 3\\
5 & 7 & 4 & 6 & 8 & 3 & 0
\end{pmatrix},
\]

\end_inset


\begin_inset Formula 
\[
f_{j}=\begin{pmatrix}2 & 4 & 1 & 3 & 7 & 1 & 7\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A formulation: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \max\sum_{j\in N}f_{j}\,y_{j}-\sum_{e\in E}c_{e}\,x_{e}\\
\text{s.t.} & \sum_{e\in\delta\left(j\right)}x_{e}=2\,y_{j}, & \forall j\in V,\\
 & y_{\mathrm{origin}}=1,\\
 & \sum_{e\in E\left(S\right)}x_{e}\leq\sum_{j\in S\backslash\left\{ k\right\} }y_{j}, & \forall k\in S,\quad\forall S\subseteq V\backslash\left\{ \mathrm{origin}\right\} .
\end{array}
\]

\end_inset

Consider adding lazily the subtour elimination, based on a subtour you find
 in the graph (any tour that does not include the origin is a subtour).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
Formulate the prize-collecting travelling salesman problem
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $G$
\end_inset

: a graph with edges 
\begin_inset Formula $E$
\end_inset

 and vertices 
\begin_inset Formula $V$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{e}$
\end_inset

: the cost of traversing an edge 
\begin_inset Formula $e\in E$
\end_inset

, with 
\begin_inset Formula $e=\left(i,j\right)$
\end_inset

, 
\begin_inset Formula $i\in V$
\end_inset

, 
\begin_inset Formula $j\in V$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $f_{j}$
\end_inset

: the profit of traversing a vertex 
\begin_inset Formula $j\in V$
\end_inset

.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathrm{origin}$
\end_inset

: the origin city within 
\begin_inset Formula $V$
\end_inset

.
 
\end_layout

\begin_layout Standard
Binary variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{e}=1$
\end_inset

 when edge 
\begin_inset Formula $e\in E$
\end_inset

 is travelled
\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{j}=1$
\end_inset

 when vertex 
\begin_inset Formula $j\in V$
\end_inset

 is gone through
\end_layout

\begin_layout Standard
Objective: maximise profit (prizes that are collected at the cities and
 costs to travel through edges).
 
\begin_inset Formula 
\[
\max\sum_{j\in N}f_{j}\,y_{j}-\sum_{e\in E}c_{e}\,x_{e}.
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
If a vertex 
\begin_inset Formula $j\in V$
\end_inset

 is visited, then two adjacent edges must be used (one for entering, the
 other for leaving).
 
\begin_inset Formula 
\[
\sum_{e\in\delta\left(j\right)}x_{e}=2\,y_{j},\qquad\forall j\in V.
\]

\end_inset


\end_layout

\begin_layout Itemize
The origin city must be visited.
 
\begin_inset Formula 
\[
y_{\mathrm{origin}}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize

\emph on
Generalised subtour elimination constraints
\emph default
 (GSEC): there is no subtour 
\begin_inset Formula $S\subseteq E$
\end_inset

 that does not contain the origin.
 
\begin_inset Formula 
\[
\sum_{e\in E\left(S\right)}x_{e}\leq\sum_{j\in S\backslash\left\{ k\right\} }y_{j},\qquad\forall k\in S,\qquad\forall S\subseteq V\backslash\left\{ \mathrm{origin}\right\} .
\]

\end_inset

Three nodes make a subtour 
\begin_inset Formula $S$
\end_inset

; if 
\begin_inset Formula $1$
\end_inset

 is not amongst them (
\begin_inset Formula $S\subseteq V\backslash\left\{ \mathrm{origin}\right\} $
\end_inset

): it must be forbidden.
 Write three constraints by iterating through 
\begin_inset Formula $k$
\end_inset

: if the three edges must be crossed, then two nodes out of three (
\begin_inset Formula $\left|S\right|-1$
\end_inset

, the last one being 
\begin_inset Formula $k$
\end_inset

) must be chosen by the salesman (two 
\begin_inset Formula $y_{j}$
\end_inset

), which disables this subtour.
 
\begin_inset Newline newline
\end_inset

Why GSEC? Not required for correctness, as the 
\begin_inset Formula $y$
\end_inset

s are already linked to the 
\begin_inset Formula $x$
\end_inset

s, 
\series bold
as long as
\series default
 there are constraints to remove the subtours (as for the TSP).
 However, these constraints are stronger than the previous subtour elimination
 and cut-set.
 
\end_layout

\begin_layout Subsubsection

\series bold
Practical implementation
\end_layout

\begin_layout Standard
GSEC: generating an exponential number of constraints (sets of all subsets).
 How many of them are actually useful during the optimisation process? In
 the sense that they effectively cut out solutions when exploring the B&B
 tree (even though they are necessary for modelling).
 
\end_layout

\begin_layout Standard
Thus: when implementing such as model, don't include all the GSECs.
 Just the trivial ones, with two nodes (
\begin_inset Formula $\left|S\right|=2$
\end_inset

), at the beginning.
 Hence for 
\begin_inset Formula $S\subseteq N\backslash\left\{ 1\right\} $
\end_inset

 with 
\begin_inset Formula $\left|S\right|=2$
\end_inset

, for all 
\begin_inset Formula $k\in S$
\end_inset

: 
\begin_inset Formula 
\[
x_{i,j}\leq y_{i},\qquad x_{ij}\leq y_{j},\qquad\forall\left(i,j\right)\in E.
\]

\end_inset

This means adding 
\emph on
lazy constraints
\emph default
 using the solver's callback mechanisms.
 These are not valid inequalities, as they are actual constraints needed
 for the formulation, they are not implied by anything.
 
\end_layout

\begin_layout Subsubsection

\series bold
Solving
\end_layout

\begin_layout Standard
Say that 
\begin_inset Formula $\mathrm{origin}=1$
\end_inset

.
 
\end_layout

\begin_layout Standard
A solution 
\begin_inset Formula $\left(\mathbf{x^{*},y^{*}}\right)$
\end_inset

 violates a GSEC constraint for some 
\begin_inset Formula $S\subseteq N\backslash\left\{ 1\right\} $
\end_inset

 and 
\begin_inset Formula $k\in S$
\end_inset

 if 
\begin_inset Formula 
\[
\sum_{e\in E\left(S\right)}x_{e}\boxed{>}\sum_{i\in S\backslash\left\{ k\right\} }y_{i},\qquad\mbox{i.e. if }\qquad\underbrace{\sum_{e\in E\left(S\right)}x_{e}^{*}-\sum_{i\in S\backslash\left\{ k\right\} }y_{i}^{*}}_{\mathrm{violation}}>0.
\]

\end_inset

How to generate a GSEC for a solution 
\begin_inset Formula $\left(\mathbf{x^{*},y^{*}}\right)$
\end_inset

? The unknowns are 
\begin_inset Formula $k$
\end_inset

 and 
\begin_inset Formula $S$
\end_inset

 to maximise the violation without testing all subsets (that would make
 no sense!).
 Replace the subset 
\begin_inset Formula $S$
\end_inset

 with the full set of edges 
\begin_inset Formula $E$
\end_inset

, and make variables 
\begin_inset Formula $w_{e}$
\end_inset

 to determine when an edge is taken (same for the nodes with 
\begin_inset Formula $z_{j}$
\end_inset

, related with an AND constraint).
 Then maximise the violation of the constraint.
 
\begin_inset Formula 
\begin{eqnarray*}
\zeta_{k} & = & \max_{\substack{S\subseteq N\backslash\left\{ \mathrm{origin}\right\} \\
k\in S
}
}\sum_{e\in E\left(S\right)}x_{e}^{*}-\sum_{j\in S\backslash\left\{ k\right\} }y_{j}^{*}\\
\\
\\
 & = & \begin{array}{cc}
\max & \sum_{e\in E\backslash\delta\left(\mathrm{origin}\right)}x_{e}^{*}\,w_{e}-\sum_{i\in V\backslash\left\{ \mathrm{origin}\right\} }y_{i}^{*}\,z_{i}\\
\mbox{s.t.} & w_{e}=z_{i}\land z_{j},\quad\forall e=\left(i,j\right)\in E\backslash\delta\!\left(\mathrm{origin}\right),\\
 & k\in S,\\
 & \mathbf{w}\in\mathcal{B}^{\left|E\right|-1},\quad\mathbf{z}\in\mathcal{B}^{\left|V\right|-1}.
\end{array}\\
\\
\\
 & = & \begin{array}{cc}
\max & \sum_{e\in E\backslash\delta\left(1\right)}x_{e}^{*}\,w_{e}-\sum_{i\in V\backslash\left\{ \mathrm{origin}\right\} }y_{i}^{*}\,z_{i}\\
\mbox{s.t.} & w_{e}\leq z_{i},\qquad\forall e=\left(i,j\right)\in E\backslash\delta\!\left(\mathrm{origin}\right),\\
 & w_{e}\leq z_{j},\qquad\forall e=\left(i,j\right)\in E\backslash\delta\!\left(\mathrm{origin}\right),\\
 & w_{e}\geq z_{i}+z_{j}-1,\quad\forall e=\left(i,j\right)\in E\backslash\delta\!\left(\mathrm{origin}\right),\\
 & z_{k}=1,\\
 & \mathbf{w}\in\mathcal{B}^{\left|E\right|-1},\quad\mathbf{z}\in\mathcal{B}^{\left|V\right|-1}.
\end{array}
\end{eqnarray*}

\end_inset

This one is totally unimodular: all coefficients are 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $0$
\end_inset

, or 
\begin_inset Formula $-1$
\end_inset

.
 Hence the simplex algorithm is enough to solve it.
 
\end_layout

\begin_layout Standard
(Why 
\begin_inset Formula $z_{k}=1$
\end_inset

? Enforces the 
\begin_inset Formula $k\in S$
\end_inset

 part.)
\end_layout

\begin_layout Standard
What if 
\begin_inset Formula $\zeta_{k}<0$
\end_inset

? Constraint not violated! Choose another 
\begin_inset Formula $k$
\end_inset

 and restart.
 No 
\begin_inset Formula $k$
\end_inset

 works? Done!
\end_layout

\begin_layout Paragraph

\series bold
First step (initialisation).
 
\end_layout

\begin_layout Standard
First solve the LP relaxation of the PCTSP, with only the trivial GSECs
 (an edge is visited if both its ends are).
\begin_inset Formula 
\[
\begin{array}{cc}
\max & \sum_{j\in N}f_{j}\,y_{j}-\sum_{e\in E}c_{e}\,x_{e}\\
\mbox{s.t.} & \sum_{e\in\delta\left(i\right)}x_{e}=2\,y_{i},\qquad\forall i\in N,\\
 & y_{\mathrm{origin}}=1,\\
 & x_{i,j}\leq y_{i},\qquad\forall\left(i,j\right)\in E,\\
 & x_{i,j}\leq y_{j},\qquad\forall\left(i,j\right)\in E,\\
 & 0\leq\mathbf{x}\leq1,\qquad0\leq\mathbf{y}\leq1.
\end{array}
\]

\end_inset

Resulting solution? Two subtours: 
\begin_inset Formula $\left(1,3,6,7,1\right)$
\end_inset

 and 
\begin_inset Formula $\left(2,4,5,2\right)$
\end_inset

.
 
\end_layout

\begin_layout Paragraph*

\series bold
Second step (actual algorithm).
 
\end_layout

\begin_layout Standard
Remove the second one (does not contain the origin 
\begin_inset Formula $1$
\end_inset

) by generating a GSEC with 
\begin_inset Formula $k=2$
\end_inset

: 
\begin_inset Formula 
\[
x_{2,4}+x_{2,5}+x_{4,5}\leq y_{4}+y_{5}.
\]

\end_inset

(
\begin_inset Formula $k$
\end_inset

 obtained through the previous procedure.
 Another way of writing the constraint: use the optimal solution, 
\begin_inset Formula $\mathbf{w^{*T}\,x}$
\end_inset

 on the left, and 
\begin_inset Formula $\mathbf{z^{*T}\,}y$
\end_inset

 on the right.) New optimal solution.
 Same thing.
 
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Lagrangian duality 
\begin_inset CommandInset label
LatexCommand label
name "chap:Lagrangian-duality"

\end_inset


\end_layout

\begin_layout Standard
When a problem is too complex to solve, decomposition techniques can be
 used.
 One of them is 
\emph on
Lagrangian duality
\emph default
.
 It allows removing problematic constraints, moving them into the objective
 function (their violation is thus penalised).
 these constraints are chosen such that, once they are removed, the problem
 becomes much easier to solve (for instance, very efficient algorithms are
 known, for example based on flows or other polynomially solvable problems,
 as in Part 
\begin_inset CommandInset ref
LatexCommand ref
reference "part:Polynomially-solvable-problems"

\end_inset

).
 
\end_layout

\begin_layout Subsection
Symmetric travelling salesman problem 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Lagrangian-STSP"

\end_inset


\end_layout

\begin_layout Standard
Use Lagrangian relaxation to solve the STSP instance with distances: 
\begin_inset Formula 
\[
\begin{pmatrix}- & 8 & 2 & 14 & 26 & 13\\
- & - & 7 & 4 & 16 & 8\\
- & - & - & 23 & 14 & 9\\
- & - & - & - & 12 & 6\\
- & - & - & - & - & 5\\
- & - & - & - & - & -
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Remark*
The 
\emph on
symmetric
\emph default
 travelling salesman problem is a regular TSP (like Exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Graph-TSP"

\end_inset

) where distances are supposed to be symmetric, i.e.
 
\begin_inset Formula $d\!\left(A,B\right)=d\!\left(B,A\right)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
* Generalised assignment 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Lagrangian-Generalised-assignment-1"

\end_inset


\end_layout

\begin_layout Standard
Use Lagrangian relaxation to solve the following 
\emph on
generalised assignment
\emph default
 instance: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i=1}^{m}\sum_{j=1}^{n}c_{i,j}x_{i,j}\\
\text{s.t.} & \sum_{j=1}^{n}x_{i,j}\leq1 & \forall i\in\left[1,m\right]\\
 & \sum_{i=1}^{m}a_{i,j}x_{i,j}\leq b_{j} & \forall j\in\left[1,n\right]\\
 & x\in\mathcal{B}^{mn},
\end{array}
\]

\end_inset

where the costs are given by the matrices: 
\begin_inset Formula 
\[
\mathbf{A}=\begin{pmatrix}5 & 7 & 2\\
14 & 8 & 7\\
10 & 6 & 12\\
8 & 4 & 15\\
6 & 12 & 5
\end{pmatrix},\qquad\mathbf{b}=\begin{pmatrix}15\\
15\\
15
\end{pmatrix},\qquad\mathbf{C}=\begin{pmatrix}6 & 10 & 1\\
12 & 12 & 5\\
15 & 4 & 3\\
10 & 3 & 9\\
8 & 9 & 5
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Subsection
* Generalised assignment 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Lagrangian-Generalised-assignment-2"

\end_inset


\end_layout

\begin_layout Standard
With the following 
\emph on
generalised assignment
\emph default
 instance: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i=1}^{m}\sum_{j=1}^{n}c_{i,j}x_{i,j}\\
\text{s.t.} & \sum_{j=1}^{n}x_{i,j}\leq1 & \forall i\in\left[1,m\right],\\
 & \sum_{i=1}^{m}a_{i,j}x_{i,j}\leq b_{j} & \forall j\in\left[1,n\right],\\
 & x\in\mathcal{B}^{mn},
\end{array}
\]

\end_inset

where the costs are given by the matrices: 
\begin_inset Formula 
\[
\mathbf{A}=\begin{pmatrix}5 & 6 & 2\\
3 & 6 & 6\\
8 & 5 & 9\\
4 & 8 & 10
\end{pmatrix},\qquad\mathbf{b}=\begin{pmatrix}10\\
10\\
10
\end{pmatrix},\qquad\mathbf{C}=\begin{pmatrix}6 & 10 & 3\\
12 & 12 & 4\\
15 & 8 & 7\\
10 & 7 & 10
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Enumerate
Discuss the strength of 
\series bold
all
\series default
 possible Lagrangian relaxations, and the ease or difficulty of solving
 the Lagrangian subproblems, and the Lagrangian dual.
\end_layout

\begin_layout Enumerate
Use Lagrangian relaxation to solve the given generalized assignment problem
 instance.
 
\end_layout

\begin_layout Standard
As a reminder, the formula for the subgradient algorithm is: 
\begin_inset Formula 
\[
u_{k+1}=u_{k}-\epsilon_{k}\frac{z_{k}(u_{k})-\underline{z}}{||d-Dx(u_{k})||^{2}}\left(d-Dx(u_{k})\right).
\]

\end_inset


\end_layout

\begin_layout Subsection
* Assignment problem and relaxation strength
\end_layout

\begin_layout Standard
Consider the assignment problem with a budget constraint: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i\in M}\sum_{j\in N}c_{i,j}x_{i,j}\\
\text{s.t.} & \sum_{j\in N}^{n}x_{i,j}=1 & \forall i\in M,\\
 & \sum_{i\in M}^{n}x_{i,j}=1 & \forall j\in N,\\
 & \sum_{i=1}^{m}\sum_{jinN}a_{i,j}x_{i,j}\leq b,\\
 & x\in\mathcal{B}^{mn}.
\end{array}
\]

\end_inset

Discuss the strength of different possible Lagrangian relaxations, and the
 ease or difficulty of solving the Lagrangian subproblems, and the Lagrangian
 dual.
\end_layout

\begin_layout Subsection
* Uncapacitated facility location
\end_layout

\begin_layout Standard
Consider the following uncapacitated facility location instance: 
\begin_inset Formula 
\[
m=6,\qquad n=5,
\]

\end_inset


\begin_inset Formula 
\[
c_{ij}=\left(\begin{array}{ccccc}
6 & 2 & 1 & 3 & 5\\
4 & 10 & 2 & 6 & 1\\
3 & 2 & 4 & 1 & 3\\
2 & 0 & 4 & 1 & 4\\
1 & 8 & 6 & 2 & 5\\
3 & 2 & 4 & 8 & 1
\end{array}\right)\qquad\left(\text{delivery costs}\right),
\]

\end_inset


\begin_inset Formula 
\[
f=\begin{pmatrix}4 & 8 & 11 & 7 & 5\end{pmatrix}\qquad\left(\text{fixed costs}\right).
\]

\end_inset


\end_layout

\begin_layout Standard
Solve the Lagrangian subproblem 
\begin_inset Formula $\text{IP}\!\left(\mathbf{u}\right)$
\end_inset

 with the dual vector 
\begin_inset Formula $\mathbf{u}=\begin{pmatrix}5 & 6 & 3 & 1 & 2 & 1\end{pmatrix}$
\end_inset

 in order to obtain an optimal dual solution 
\begin_inset Formula $\left(\mathbf{x}\!\left(\mathbf{u}\right),\mathbf{y}\!\left(\mathbf{u}\right)\right)$
\end_inset

 and a lower bound 
\begin_inset Formula $\underline{z\!\left(\mathbf{u}\right)}$
\end_inset

.
 Then, modify the solution 
\begin_inset Formula $\left(\mathbf{x}\!\left(\mathbf{u}\right),\mathbf{y}\!\left(\mathbf{u}\right)\right)$
\end_inset

 so get a good feasible 
\emph on
primal
\emph default
 solution.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Solution: see Wolsey, Exercise 10.1, p.
 169
\end_layout

\end_inset


\end_layout

\begin_layout Part
Combinatorial optimisation 
\begin_inset CommandInset label
LatexCommand label
name "part:Combinatorial-optimisation"

\end_inset


\end_layout

\begin_layout Chapter
Dynamic programming 
\begin_inset CommandInset label
LatexCommand label
name "chap:Dynamic-programming"

\end_inset


\end_layout

\begin_layout Section
Knapsack
\end_layout

\begin_layout Subsection
Basic knapsack 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Knapsack-Basic"

\end_inset


\end_layout

\begin_layout Standard
Solve the binary knapsack problem for five objects: the values are 
\begin_inset Formula $\left(3,4,6\right)$
\end_inset

 and the weights 
\begin_inset Formula $\left(2,3,5\right)$
\end_inset

, with a total capacity of 
\begin_inset Formula $8$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Propose a MILP formulation.
\end_layout

\begin_layout Enumerate
Solve it by dynamic programming.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A formulation is: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & 3\,x+4\,y+6\,z\\
\text{s.t.} & 2\,x+3\,y+5\,z\leq8,\\
 & x\in\mathcal{B},y\in\mathcal{B},z\in\mathcal{B}.
\end{array}
\]

\end_inset

The optimal solution is to take the second and third objects.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Formulation
\end_layout

\begin_layout Standard
Set: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}$
\end_inset

: objects (here, three items)
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{o}$
\end_inset

: value of object 
\begin_inset Formula $o\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{o}$
\end_inset

: weight of object 
\begin_inset Formula $o\in\mathcal{O}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $C$
\end_inset

: the maximum capacity of the knapsack
\end_layout

\begin_layout Standard
Variable: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{o}\in\mathcal{B}$
\end_inset

: whether object 
\begin_inset Formula $o\in\mathcal{O}$
\end_inset

 is taken
\end_layout

\begin_layout Standard
Constraint: 
\end_layout

\begin_layout Itemize
The knapsack has a maximum capacity: 
\begin_inset Formula 
\[
\sum_{o\in\mathcal{O}}w_{0}\,x_{o}\leq C
\]

\end_inset


\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\max\sum_{o\in\mathcal{O}}v_{o}\,x_{o}
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Solution by dynamic programming
\end_layout

\begin_layout Standard
The algorithm builds a table using a dynamic programming table defined as
 follows: 
\begin_inset Formula 
\[
m_{0,w}=0,
\]

\end_inset


\begin_inset Formula 
\[
m_{o,w}=\begin{cases}
m_{o-1,w} & \qquad\text{if }w_{o}>w\\
\max\left\{ m_{o-1,w},\quad m_{o-1,w-w_{o}}+v_{o}\right\}  & \qquad\text{otherwise}
\end{cases}
\]

\end_inset

In other words, the symbol 
\begin_inset Formula $m_{o,w}$
\end_inset

 gives the maximum value of the knapsack when considering the objects up
 to 
\begin_inset Formula $o$
\end_inset

th one when the capacity is 
\begin_inset Formula $w$
\end_inset

.
 The optimal value is obtained at 
\begin_inset Formula $m_{\left|\mathcal{O}\right|,C}$
\end_inset

.
 The value are computed based on the following principles: 
\end_layout

\begin_layout Itemize
if no object can be considered (
\begin_inset Formula $o=0$
\end_inset

), then the maximum value is zero
\end_layout

\begin_layout Itemize
for each object, a decision has to be made: either it is taken or not.
 In the first case, the object's value is considered plus the optimal value
 for the knapsack when considering the previous objects (up to 
\begin_inset Formula $o-1$
\end_inset

) with a capacity diminished by the weight of the taken object.
 In the second case, the value is simply the same as the one for the previous
 objects (up to 
\begin_inset Formula $o-1$
\end_inset

).
 The maximum between the two cases is always chosen.
 
\end_layout

\begin_layout Standard
In this case: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="10">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $m_{o,w}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=2$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=3$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
By reversing the dynamic equation, both objects 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $3$
\end_inset

 are taken.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Knapsacks 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Knapsack-Advanced"

\end_inset


\end_layout

\begin_layout Standard
Solve the following knapsacks.
\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & 4\,w+5\,x+3\,y+z\\
\text{s.t.} & 5\,w+6\,x+4\,y+2\,z\leq14,\\
 & w\in\mathcal{B},x\in\mathcal{B},\\
 & y\in\mathbb{Z}^{+},z\in\mathbb{Z}^{+}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & 5\,w+4\,x+7\,y+13\,z\\
\text{s.t.} & 4\,w+4\,x+5\,y+9\,z\leq13,\\
 & w\in\mathbb{Z}^{+},x\in\mathbb{Z}^{+},\\
 & y\in\mathbb{Z}^{+},z\in\mathbb{Z}^{+}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & 7\,w+9\,x+12\,y+3\,z\\
\text{s.t.} & 5\,w+6\,x+8\,y+3\,z\leq15,\\
 & w\in\mathcal{B},x\in\mathcal{B},y\in\mathcal{B},\\
 & z\in\mathbb{Z}^{+}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Subsection
Knapsack duality 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Knapsack-Duality"

\end_inset


\end_layout

\begin_layout Standard
Solve the binary knapsack problem for five objects: the values are 
\begin_inset Formula $\left(3,4,6,5,8\right)$
\end_inset

 and the weights 
\begin_inset Formula $\left(412,507,714,671,920\right)$
\end_inset

, with a total capacity of 
\begin_inset Formula $1794$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Why would instance this cause problems to a dynamic programming algorithm?
 
\end_layout

\begin_layout Enumerate
With the following definitions (
\begin_inset Formula $X\subseteq\mathbb{R}^{n}$
\end_inset

) 
\begin_inset Formula 
\[
\begin{array}{cccc}
f\!\left(\lambda\right) & = & \max & \mathbf{c^{T}\,x}\\
 &  & \mbox{s.t.} & \mathbf{a^{T}\,x}\leq\lambda,\\
 &  &  & x\in X
\end{array}\qquad\begin{array}{cccc}
h\!\left(t\right) & = & \min & \mathbf{a^{T}\,x}\\
 &  & \mbox{s.t.} & \mathbf{c^{T}\,x}\geq t\\
 &  &  & x\in X
\end{array}
\]

\end_inset

prove the two following statements: 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $f\!\left(\lambda\right)\geq t$
\end_inset

 if and only if 
\begin_inset Formula $h\!\left(t\right)\leq\lambda$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $f\!\left(\lambda\right)=\max\left\{ t\,\Big|\,h\!\left(t\right)\leq\lambda\right\} $
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Dualise this instance using the previous statements and solve this dual
 by dynamic programming.
 (
\begin_inset Formula $f\!\left(\lambda\right)$
\end_inset

 is a knapsack, 
\begin_inset Formula $h\!\left(t\right)$
\end_inset

 is its dual, and can still be solved as a sequence of smaller and related
 knapsacks when properly rewritten.)
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The complexity of the dynamic algorithm is 
\begin_inset Formula $\mathcal{O}\!\left(\left|\mathcal{O}\right|\,C\right)$
\end_inset

.
 
\end_layout

\begin_layout Solution*
First, the proof revolves around the optimal 
\begin_inset Formula $\mathbf{x}$
\end_inset

 and the corresponding 
\begin_inset Formula $\lambda$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

.
 Then, prove the second statement by injecting the first one in the maximum.
 
\end_layout

\begin_layout Solution*
To rewrite the dual as a knapsack, use a change of variables: 
\begin_inset Formula $\mathbf{x^{\prime}}=1-\mathbf{x}$
\end_inset

.
 This leads to the definition of 
\begin_inset Formula 
\[
\begin{array}{cccccc}
j\!\left(s\right) & = & 3224 & - & \max & 412\,v^{\prime}+507\,w^{\prime}+714\,x^{\prime}+671\,y^{\prime}+920\,z^{\prime}\\
 &  &  &  & \mbox{s.t.} & 3\,v^{\prime}+4\,w^{\prime}+6\,x^{\prime}+5\,y^{\prime}+8\,z^{\prime}\leq s\\
 &  &  &  &  & \mathbf{x}\in\mathcal{B}^{5}.
\end{array}
\]

\end_inset

The optimal solution to this dual knapsack is linked to the first one by:
 
\begin_inset Formula 
\[
f\!\left(\lambda=1794\right)=26-\min\left\{ s\,\Big|\,j\!\left(s\right)\geq1430\right\} .
\]

\end_inset

The optimum is to take the third and fifth objects.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Problems with the algorithm
\end_layout

\begin_layout Standard
The dynamic algorithm requires a number of steps proportional to the capacity
 of the knapsack and the number of objects: 
\begin_inset Formula $\mathcal{O}\!\left(\left|\mathcal{O}\right|\,C\right)$
\end_inset

.
 Here, 
\begin_inset Formula $\left|O\right|=5$
\end_inset

 and 
\begin_inset Formula $C=1794$
\end_inset

, which gives a number of operations incompatible with paper work.
 
\end_layout

\begin_layout Subsubsection
Dualisation lemmas
\end_layout

\begin_layout Standard
The three following statements are equivalent: 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $f\!\left(\lambda\right)=\max\left\{ \mathbf{c^{T}\,x}\,\Big|\,\mathbf{a^{T}\,x}\leq\lambda,x\in X\right\} \geq t$
\end_inset

, by the definition of 
\begin_inset Formula $f\!\left(\lambda\right)$
\end_inset


\end_layout

\begin_layout Enumerate
There is an 
\begin_inset Formula $x\in X$
\end_inset

 such that 
\begin_inset Formula $\mathbf{c^{T}\,x}\geq t$
\end_inset

 and 
\begin_inset Formula $\mathbf{a^{T}\,x}\leq\lambda$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Indeed, choose the optimal 
\begin_inset Formula $\mathbf{x}$
\end_inset

 from the first bullet point: it respects the constraint 
\begin_inset Formula $\mathbf{a^{T}\,x}\leq\lambda$
\end_inset

 as it is feasible, and 
\begin_inset Formula $\mathbf{c^{T}\,x}\geq t$
\end_inset

 due to optimality.
 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $h\!\left(t\right)=\min\left\{ \mathbf{a^{T}\,x}\,\Big|\,\mathbf{c^{T}\,x}\geq t,x\in X\right\} \leq\lambda$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

The point 
\begin_inset Formula $\mathbf{x}$
\end_inset

 from the second bullet point satisfies 
\begin_inset Formula $\mathbf{a^{T}\,x}\leq\lambda$
\end_inset

 (due to the constraints within 
\begin_inset Formula $f\!\left(\lambda\right)$
\end_inset

), hence the optimal value must be less than 
\begin_inset Formula $\lambda$
\end_inset

.
 
\end_layout

\begin_layout Standard
The proof works in the other way around: from 3 to 1.
 
\end_layout

\begin_layout Standard
Then, noticing that 
\begin_inset Formula $K=\max\left\{ t\,\Big|\,t\leq K\right\} $
\end_inset

, due to the previous point, 
\begin_inset Formula 
\begin{eqnarray*}
f\!\left(\lambda\right) & = & \max\left\{ t\,\Big|\,t\leq\underbrace{f\!\left(\lambda\right)}_{K}\right\} \text{, as }K=\max\left\{ t\,\Big|\,t\leq K\right\} \\
 & = & \max\left\{ t\,\Big|\,h\!\left(t\right)\leq\lambda\right\} \text{, by the first lemma.}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsubsection
Dualisation
\end_layout

\begin_layout Standard
Denoting by 
\begin_inset Formula $f\!\left(1794\right)$
\end_inset

 the optimal value for the (primal) knapsack, then its dual 
\begin_inset Formula $h\!\left(t\right)$
\end_inset

 writes: 
\begin_inset Formula 
\[
\begin{array}{cccc}
h\!\left(t\right) & = & \min & 412\,v+507\,w+714\,x+671\,y+920\,z\\
 &  & \mbox{s.t.} & 3\,v+4\,w+6\,x+5\,y+8\,z\geq t\\
 &  &  & \mathbf{x}\in\mathcal{B}^{5}.
\end{array}
\]

\end_inset

Both problems are related by the property that 
\begin_inset Formula $f\!\left(1794\right)=\max\left\{ t\,\Big|\,h\!\left(t\right)\leq1794\right\} $
\end_inset

, by the two previous statements.
 
\end_layout

\begin_layout Standard
However, 
\begin_inset Formula $h$
\end_inset

 is not a knapsack: minimum and 
\begin_inset Formula $\geq$
\end_inset

 constraint.
 Hence, it must be rewritten.
 A technique is to use new variables: 
\begin_inset Formula $\mathbf{x^{\prime}}=1-\mathbf{x}$
\end_inset

.
\begin_inset Formula 
\[
h\!\left(t\right)=\left(412+507+714+671+920\right)\qquad\qquad\left(=3224\right)
\]

\end_inset


\begin_inset Formula 
\[
\begin{array}{ccc}
- & \max & 412\,v^{\prime}+507\,w^{\prime}+714\,x^{\prime}+671\,y^{\prime}+920\,z^{\prime}\\
 & \mbox{s.t.} & 3\,v^{\prime}+4\,w^{\prime}+6\,x^{\prime}+5\,y^{\prime}+8\,z^{\prime}\leq\boxed{26-t}\\
 &  & \mathbf{x}\in\mathcal{B}^{5}.
\end{array}
\]

\end_inset

Let 
\begin_inset Formula $s=26-t$
\end_inset

, then 
\begin_inset Formula $h\!\left(t\right)$
\end_inset

 can be rewritten as 
\begin_inset Formula 
\[
\begin{array}{cccccc}
j\!\left(s\right) & = & 3224 & - & \max & 412\,v^{\prime}+507\,w^{\prime}+714\,x^{\prime}+671\,y^{\prime}+920\,z^{\prime}\\
 &  &  &  & \mbox{s.t.} & 3\,v^{\prime}+4\,w^{\prime}+6\,x^{\prime}+5\,y^{\prime}+8\,z^{\prime}\leq s\\
 &  &  &  &  & \mathbf{x}\in\mathcal{B}^{5}.
\end{array}
\]

\end_inset


\begin_inset Formula $f\!\left(1794\right)$
\end_inset

 is now: 
\begin_inset Formula 
\begin{eqnarray*}
f\!\left(\lambda=1794\right) & = & \max\left\{ t\,\Big|\,h\!\left(t\right)\leq1794\right\} \\
 & = & \max\left\{ 26-s\,\Big|\,h\!\left(26-s\right)\leq1794\right\} \mbox{, by definition of }s\\
 & = & 26-\boxed{\min}\left\{ s\,\Big|\,h\!\left(26-s\right)\leq1794\right\} \text{, as }\max-s=-\min s\\
 & = & 26-\min\left\{ s\,\Big|\,3224-j\!\left(s\right)\leq1794\right\} \mbox{, by definition of }j\!\left(s\right)\\
 & = & 26-\min\left\{ s\,\Big|\,-j\!\left(s\right)\leq1794-3224\right\} \\
 & = & 26-\min\left\{ s\,\Big|\,j\!\left(s\right)\geq1430\right\} 
\end{eqnarray*}

\end_inset

and this is a knapsack! (Almost: minimising a sequence of strongly related
 knapsacks.)
\end_layout

\begin_layout Standard
How to solve this? Try increasing values of 
\begin_inset Formula $s$
\end_inset

 (up to 
\begin_inset Formula $26$
\end_inset

: the lower bound is a zero objective, when taking no objects, 
\begin_inset Formula $f\!\left(\lambda=1794\right)$
\end_inset

 must be nonnegative) and solve the corresponding knapsack 
\begin_inset Formula $j\!\left(s\right)$
\end_inset

.
 This 
\begin_inset Formula $s$
\end_inset

 is the maximum capacity of the knapsack: the results of previous values
 of 
\begin_inset Formula $s$
\end_inset

 can be reused! Once the knapsack 
\begin_inset Formula $j\!\left(s\right)$
\end_inset

 has a value of at least 
\begin_inset Formula $1430$
\end_inset

, the algorithm can stop: the corresponding 
\begin_inset Formula $s$
\end_inset

 gives the objective function for the primal knapsack.
 The solution to the dual knapsack must then be reversed to get the solution
 to the primal one.
 
\end_layout

\begin_layout Subsubsection
Solving the dual knapsack
\end_layout

\begin_layout Standard
Applying the knapsack algorithm on the previous problem with increasing
 
\begin_inset Formula $s$
\end_inset

 (here, up to 
\begin_inset Formula $26$
\end_inset

, even though the algorithm might stop sooner) gives the following table.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="29" columns="7">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<column alignment="right" valignment="top">
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $j_{r}(s)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $s$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=2$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=3$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=4$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $o=5$
\end_inset

 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
0
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
0
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
412
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
412
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
671 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
671 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
507 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
714 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
714 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
714 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
919
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
919
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
919
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1083 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1083 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1126 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1178 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1178 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1221 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1221 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1221 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1221 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1385 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1385 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1221 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1590
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1590
\series default
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1797 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1797 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1892 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1892 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1892 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2003 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1892 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2098 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2305 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2510 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2553 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2717 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2812 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2812 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2812 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
412 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
919 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1633 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2304 
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3224 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The minimum 
\begin_inset Formula $s$
\end_inset

 such that the dual objective is greater than 
\begin_inset Formula $1430$
\end_inset

 (considering all objects!): 
\begin_inset Formula 
\[
\min\left\{ s\,\Big|\,j\!\left(s\right)\geq1430\right\} =12,
\]

\end_inset

hence the primal objective value is: 
\begin_inset Formula 
\[
f\!\left(1794\right)=26-12=14.
\]

\end_inset

Reconstruct the solution from the table? Remember when the current object
 was taken: 
\begin_inset Formula 
\[
\mathbf{x^{\prime}}=\left(1,1,0,1,0\right),\qquad\text{hence}\qquad\mathbf{x}=\left(0,0,1,0,1\right).
\]

\end_inset

This solved the difficult knapsack by a series of smaller knapsacks.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Dual knapsacks 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Knapsack-Dual"

\end_inset


\end_layout

\begin_layout Standard
Apply the dual knapsack technique to solve the following knapsack.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & 3\,w+4\,x+6\,y+8\,z\\
\text{s.t.} & 412\,w+507\,x+714\,y+881\,z\leq1394,\\
 & w\in\mathcal{B},x\in\mathcal{B},y\in\mathcal{B},z\in\mathcal{B}.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Section
Lot sizing
\end_layout

\begin_layout Subsection
Basic lot sizing 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Lot-sizing-1"

\end_inset


\end_layout

\begin_layout Standard
A steel mill manufactures beams; the director wants to plan the production
 for the next four weeks.
 The demand for beams is exactly known for each week.
 The cost for using the furnace can be divided into two parts: a fixed cost
 to get the furnace turned on and a variable cost proportional to the number
 of beams produced.
 Storing beams from a time period to another is costly, and is proportional
 to the number of beams to store.
\end_layout

\begin_layout Enumerate
Propose a MILP formulation.
 
\end_layout

\begin_layout Enumerate
Propose an algorithm to solve it by dynamic programming and apply it on
 this instance.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Week
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Demand [
\begin_inset Formula $10$
\end_inset

 spools]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variable cost [
\begin_inset Formula $1000$
\end_inset

€ per 
\begin_inset Formula $10$
\end_inset

 spools]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fixed cost [
\begin_inset Formula $1000$
\end_inset

€]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Storage cost [
\begin_inset Formula $1000$
\end_inset

€ per 
\begin_inset Formula $10$
\end_inset

 spools]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Spool factory planning requirements.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A formulation is: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & \sum_{t=1}^{4}\left(f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,s_{t}\right)\\
\text{s.t.} & s_{0}=0,\\
 & s_{t}=s_{t-1}+x_{t}-d_{t}, & \forall t\in\left[2,4\right],\\
 & x_{t}\leq\left(\sum_{\tau=1}^{4}d_{\tau}\right)\,y_{t}, & \forall t\in\left[1,4\right],\\
 & x_{t}\in\mathbb{Z}^{+},y_{t}\in\mathcal{B},s_{t}\in\mathbb{Z}^{+}, & \forall t\in\left[1,4\right].
\end{array}
\]

\end_inset

When the storage costs are not considered (the previous problem can be rewritten
 to include them in the production costs: 
\begin_inset Formula $c_{t}=p_{t}+\sum_{i=t}^{4}h_{i}$
\end_inset

), a dynamic algorithm is: 
\begin_inset Formula 
\[
H\!\left(0\right)=0,\qquad H\!\left(1\right)=f_{1}+c_{1}\,d_{1},
\]

\end_inset


\begin_inset Formula 
\[
H\!\left(k\right)=\min_{1\leq t\leq k}\left\{ H\!\left(t-1\right)+f_{t}+c_{t}\,\sum_{i=t}^{k}d_{i}\right\} .
\]

\end_inset

A variation that directly takes into account the storage costs: 
\begin_inset Formula 
\[
H\!\left(k\right)=\min_{1\leq t\leq k}\left\{ H\!\left(t-1\right)+f_{t}+p_{t}\,\sum_{i=t}^{k}d_{i}+\sum_{i=t}^{k-1}\left[h_{i}\left(\sum_{j=i+1}^{k}d_{j}\right)\right]\right\} .
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
(1) MILP formulation
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $d_{t}$
\end_inset

: demand over time
\end_layout

\begin_layout Itemize
\begin_inset Formula $p_{t}$
\end_inset

: production variable cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $f_{t}$
\end_inset

: fixed cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $h_{t}$
\end_inset

: storage cost
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{t}$
\end_inset

: production in 
\begin_inset Formula $t$
\end_inset

 (integer)
\end_layout

\begin_layout Itemize
\begin_inset Formula $y_{t}$
\end_inset

: whether the furnace is working in 
\begin_inset Formula $t$
\end_inset

 (binary)
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{t}$
\end_inset

: storage in 
\begin_inset Formula $t$
\end_inset

 (integer)
\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min\sum_{t=1}^{4}\left(f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,s_{t}\right)
\]

\end_inset

Constraints:
\begin_inset Formula 
\[
s_{0}=0,
\]

\end_inset


\begin_inset Formula 
\[
s_{t}=s_{t-1}+x_{t}-d_{t},\qquad\forall t\in\left[2,4\right],
\]

\end_inset


\begin_inset Formula 
\[
x_{t}\leq\left(\sum_{\tau=1}^{4}d_{\tau}\right)\,y_{t},\qquad\forall t\in\left[1,4\right].
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
(2) Eliminating the stock variable
\end_layout

\begin_layout Standard
The formulation can be rewritten to eliminate the stock as the sum over
 the previous time steps of what was produced in excess.
 The new formulation will be easier to adapt to dynamic programming.
 
\begin_inset Formula 
\[
s_{t}=\sum_{i=1}^{t}\left(x_{i}-d_{i}\right).
\]

\end_inset

The objective function now becomes: 
\begin_inset Formula 
\begin{eqnarray*}
f & = & \sum_{t=1}^{4}\left(f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,s_{t}\right)\\
 & = & \sum_{t=1}^{4}\left\{ f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,\left[\sum_{i=1}^{t}\left(x_{i}-d_{i}\right)\right]\right\} \\
 & = & \sum_{t=1}^{4}f_{t}\,y_{t}+\sum_{t=1}^{4}p_{t}\,x_{t}+\boxed{\sum_{t=1}^{4}\sum_{i=1}^{t}h_{t}\,x_{i}}-\sum_{t=1}^{4}\sum_{i=1}^{t}h_{t}\,d_{i}.
\end{eqnarray*}

\end_inset

The third term can be aggregated with the second one.
 To this end, change the order of indices: 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{t=1}^{4}\sum_{i=1}^{t}h_{t}\,x_{i} & = & \left(h_{1}\,x_{1}\right)+\left(h_{2}\,x_{1}+h_{2}\,x_{2}\right)+\left(h_{3}\,x_{1}+h_{3}\,x_{2}+h_{3}\,x_{3}\right)\\
 &  & \qquad+\left(h_{4}\,x_{1}+h_{4}\,x_{2}+h_{4}\,x_{3}+h_{4}\,x_{4}\right)\\
 & = & x_{1}\,\left(h_{1}+h_{2}+h_{3}+h_{4}\right)+x_{2}\,\left(h_{2}+h_{3}+h_{4}\right)\\
 &  & \qquad+x_{3}\,\left(h_{3}+h_{4}\right)+x_{4}\,\left(h_{4}\right)\\
 & = & \sum_{i=1}^{4}\left[\left(\sum_{t=i}^{4}h_{t}\,\right)x_{i}\right].
\end{eqnarray*}

\end_inset

The total objective: 
\begin_inset Formula 
\begin{eqnarray*}
f & = & \sum_{t=1}^{4}\left(f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,s_{t}\right)\\
 & = & \sum_{t=1}^{4}f_{t}\,y_{t}+\boxed{\sum_{t=1}^{4}p_{t}\,x_{t}+\sum_{i=1}^{4}\sum_{t=1}^{4}h_{t}\,x_{i}}-\sum_{t=1}^{4}\sum_{i=1}^{t}h_{t}\,d_{i}\\
 & = & \sum_{t=1}^{4}f_{t}\,y_{t}+\sum_{t=1}^{4}\underbrace{\left(p_{t}+\sum_{i=t}^{4}h_{i}\right)}_{c_{t}}\,x_{t}\underbrace{-\sum_{t=1}^{4}\sum_{i=1}^{t}h_{t}\,d_{i}}_{C}.
\end{eqnarray*}

\end_inset

The model now becomes (the budget constraint is redundant; 
\begin_inset Formula $s_{t}\geq0$
\end_inset

 is the last constraint): 
\begin_inset Formula 
\[
\begin{array}{ccccc}
C & + & \min & \sum_{t=1}^{4}f_{t}\,y_{t}+\sum_{t=1}^{4}c_{t}\,x_{t}\\
 &  & \mbox{s.t.} & x_{t}\leq\left(\sum_{\tau=1}^{n}d_{\tau}\right)\,y_{t}, & \forall t,\\
 &  &  & \sum_{i=1}^{t}x_{i}\geq\sum_{i=1}^{t}d_{i}, & \forall t,\\
 &  &  & \mathbf{x}\in\mathbb{R}^{4},\quad\mathbf{y}\in\mathcal{B}^{4}.
\end{array}
\]

\end_inset

Here, 
\begin_inset Formula $c_{t}=\left(5,4,3,3\right)$
\end_inset

 and 
\begin_inset Formula $C=-77$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection

\series bold
(2) Dynamic programming solution
\end_layout

\begin_layout Standard
How to solve it by dynamic programming? 
\begin_inset Formula $H\!\left(k\right)$
\end_inset

 is the optimal cost for the 
\begin_inset Formula $k$
\end_inset

 first periods (in the new optimisation program; 
\begin_inset Formula $C$
\end_inset

 is not present for now).
 It must start as zero cost if no periods are considered; then everything
 is produced for 
\begin_inset Formula $t=1$
\end_inset

 at 
\begin_inset Formula $t=1$
\end_inset

: 
\begin_inset Formula 
\[
H\!\left(0\right)=0,\qquad H\!\left(1\right)=f_{1}+c_{1}\,d_{1}.
\]

\end_inset

Then it goes on: what is the best moment to produce something? Wagner-Whitin
 dynamic algorithm: 
\begin_inset Formula 
\[
H\!\left(k\right)=\min_{1\leq t\leq k}\left\{ \underbrace{H\!\left(t-1\right)}_{\substack{\mathrm{best\,way\,to}\\
\mathrm{produce\,the}\\
\mathrm{quantity\,in\,}t
}
}+\underbrace{f_{t}+c_{t}\,\sum_{i=t}^{k}d_{i}}_{\substack{\mathrm{produce\,the}\\
\mathrm{rest\,in\,}k
}
}\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
Let's apply this.
\end_layout

\begin_layout Enumerate
At time step 
\begin_inset Formula $0$
\end_inset

, cannot produce anything: 
\begin_inset Formula 
\[
H\!\left(0\right)=0.
\]

\end_inset


\end_layout

\begin_layout Enumerate
At time step 
\begin_inset Formula $1$
\end_inset

, the only choice is to produce everything now: 
\begin_inset Formula 
\[
H\!\left(1\right)=f_{1}+c_{1}\,d_{1}=20+5\times8=60.
\]

\end_inset


\end_layout

\begin_layout Enumerate
At time step 2, the solution is to have 
\begin_inset Formula $d_{2}$
\end_inset

 produced at 
\begin_inset Formula $t=1$
\end_inset

 or at 
\begin_inset Formula $t=2$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
2H\!\left(2\right) & = & \min\left\{ d_{1}+d_{2}\mbox{ in }t=t_{1},\qquad d_{1}\mbox{ in }t=t_{1}\mbox{ and }d_{2}\mbox{ in }t=t_{2}\right\} \\
 & = & \min\left\{ f_{1}+c_{1}\,\left(d_{1}+d_{2}\right),\qquad H\!\left(1\right)+f_{2}+c_{2}\,d_{2}\right\} \\
 & = & \min\left\{ 85,\quad60+10+5\times4\right\} \\
 & = & 85,
\end{eqnarray*}

\end_inset

so everything gets produced in 
\begin_inset Formula $t=t_{1}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
At time step 3, same kind of reasoning: when to produce 
\begin_inset Formula $d_{3}$
\end_inset

? 
\begin_inset Formula 
\begin{eqnarray*}
H\!\left(3\right) & = & \min\left\{ \mbox{in }t=t_{1},\qquad\mbox{in }t=t_{2},\qquad\mbox{in }t=t_{3}\right\} \\
 & = & \min\left\{ f_{1}+c_{1}\,\left(d_{1}+d_{2}+d_{3}\right),\quad H\!\left(1\right)+c_{2}\,\left(d_{2}+d_{3}\right),\quad H\!\left(2\right)+c_{3}\,d_{3}\right\} \\
 & = & \min\left\{ 150,142,169\right\} \\
 & = & 142,
\end{eqnarray*}

\end_inset

so 
\begin_inset Formula $d_{1}$
\end_inset

 produced in 
\begin_inset Formula $t=t_{1}$
\end_inset

 and 
\begin_inset Formula $d_{2}$
\end_inset

 and 
\begin_inset Formula $d_{3}$
\end_inset

 in 
\begin_inset Formula $t=t_{2}$
\end_inset

: previous choices are still questioned! 
\end_layout

\begin_layout Enumerate
At time step 4: 
\begin_inset Formula 
\begin{eqnarray*}
H\!\left(4\right) & = & \min\Big\{ f_{1}+c_{1}\,\left(d_{1}+d_{2}+d_{3}+d_{4}\right),\quad H\!\left(1\right)+c_{2}\,\left(d_{2}+d_{3}+d_{4}\right)\\
 &  & \qquad H\!\left(2\right)+c_{3}\,\left(d_{3}+d_{4}\right),\quad H\!\left(3\right)+c_{4}\,d_{4}\Big\}\\
 & = & \min\left\{ 170,158,181,169\right\} \\
 & = & 158.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Overall, produce things in 
\begin_inset Formula $t=t_{1}$
\end_inset

 and 
\begin_inset Formula $t=t_{2}$
\end_inset

.
 What is produced in 
\begin_inset Formula $t=t_{1}$
\end_inset

? Only 
\begin_inset Formula $d_{1}$
\end_inset

, because 
\begin_inset Formula $H\!\left(1\right)$
\end_inset

 is used.
 
\begin_inset Formula 
\[
y=\left(1,1,0,0\right),\qquad x=\left(8,22,0,0\right).
\]

\end_inset

The storage can be deduced by previous definitions: 
\begin_inset Formula 
\[
s=\left(0,17,4,0\right).
\]

\end_inset

Actual objective function? It is the same as with the original formulation:
 
\begin_inset Formula 
\begin{eqnarray*}
f & = & H\!\left(4\right)+C=158-77=81,\\
 & = & \sum_{t=1}^{4}\left(f_{t}\,y_{t}+p_{t}\,x_{t}+h_{t}\,s_{t}\right)\\
 &  & =\left(20+10+0+0\right)+\left(8+22+0+0\right)+\left(0+17+4+0\right).
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
(2) Dynamic programming solution without cost rewriting
\end_layout

\begin_layout Standard
The Wagner-Whitin algorithm can be slightly adapted to avoid this rewriting.
 The formula becomes: 
\begin_inset Formula 
\[
H\!\left(k\right)=\min_{1\leq t\leq k}\left\{ \underbrace{H\!\left(t-1\right)}_{\substack{\mathrm{best\,way\,to}\\
\mathrm{produce\,the}\\
\mathrm{quantity\,in\,}t
}
}+\underbrace{f_{t}+p_{t}\,\sum_{i=t}^{k}d_{i}}_{\substack{\mathrm{produce\,the}\\
\mathrm{rest\,in\,}k
}
}+\underbrace{\sum_{i=t}^{k-1}\left[h_{i}\left(\sum_{j=i+1}^{k}d_{j}\right)\right]}_{\substack{\mathrm{store\,what\,will\,be\,sold}\\
\mathrm{at\,the\,next\,time\,steps}
}
}\right\} .
\]

\end_inset

What is sold at time 
\begin_inset Formula $t$
\end_inset

 is not counted in the stock 
\begin_inset Formula $s_{t}$
\end_inset

, and has thus no cost: the inventory costs only account for what is needed
 for the next time steps (up to and including 
\begin_inset Formula $k$
\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lot sizing 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Lot-sizing-2"

\end_inset


\end_layout

\begin_layout Standard
In the lot-sizing problem, a company wants to plan its schedule of production
 by batches for a given number of periods.
 It must satisfy a demand at each time period and pays a fixed cost for
 producing a batch, a varying cost depending on the amount produced and
 a varying inventory cost.
 
\end_layout

\begin_layout Standard
Solve the following lot-sizing problem using dynamic programming with the
 data in the table below.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Periods
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Demand
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $d_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fixed costs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $f_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Varying costs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inventory costs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{t}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Data for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming-Lot-sizing-2"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Time-constrained shortest path
\end_layout

\begin_layout Subsection
Basic time-constrained shortest path 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming-Time-constrained-shortest-path-Basic"

\end_inset


\end_layout

\begin_layout Standard
A traveller wants to go from one place to another.
 However, they must go through customs, whose office has strict opening
 hours: with the considered time window, only the time at which they start
 working is important.
 As such, they want to determine their minimum travel time.
 
\end_layout

\begin_layout Standard
This travel must then be made in a graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

, which is annotated with some data: 
\begin_inset Formula $c_{ij}$
\end_inset

 the time to cross edge 
\begin_inset Formula $e=\left(i,j\right)\in E$
\end_inset

; 
\begin_inset Formula $r_{i}$
\end_inset

, the earliest time to travel through node 
\begin_inset Formula $i\in V$
\end_inset

 (if the traveller gets at 
\begin_inset Formula $i$
\end_inset

 earlier than 
\begin_inset Formula $r_{i}$
\end_inset

, they will have to wait until 
\begin_inset Formula $r_{i}$
\end_inset

).
 
\end_layout

\begin_layout Enumerate
Propose a MILP formulation.
 
\end_layout

\begin_layout Enumerate
Propose an algorithm to solve it by dynamic programming.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A formulation is: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\min & t_{n}\\
\text{s.t.} & \sum_{i\in V}x_{i,k}=\sum_{j\in V}x_{j,k}, & \forall k\in V\backslash\left\{ 1,n\right\} ,\\
 & \sum_{i\in V}x_{1,i}=1,\\
 & \sum_{i\in V}x_{i,n}=1,\\
\\
 & t_{1}=0,\\
 & t_{i}\geq0, & \forall i\in V,\\
 & t_{j}\geq t_{i}+c_{i,j}\,x_{i,j}, & \forall\left(i,j\right)\in E,\\
 & t_{i}\geq r_{i}, & \forall i\in V,\\
\\
 & x_{e}\in\mathcal{B}, & e\in E.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Solution*
A dynamic algorithm for this problem is a variation of Bellman-Ford algorithm
 for shortest paths: 
\begin_inset Formula 
\[
t_{1}\!\left(j\right)=\begin{cases}
\max\left\{ r_{j},c_{1,j}\right\}  & \,\forall i:\:\left(i,j\right)\in E\\
+\infty & \mbox{ otherwise}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
t_{k}\!\left(j\right)=\max\left\{ r_{j},\quad\min\left\{ t_{k-1}\!\left(j\right),\qquad\min_{i\in\delta^{-}\!\left(j\right)}\left\{ t_{k-1}\!\left(i\right)+c_{i,j}\right\} \right\} \right\} .
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
MILP formulation
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
a graph 
\begin_inset Formula $G=\left(E,V\right)$
\end_inset


\end_layout

\begin_layout Itemize
travel time for edge 
\begin_inset Formula $e=\left(i,j\right)\in E$
\end_inset

: 
\begin_inset Formula $c_{e}$
\end_inset


\end_layout

\begin_layout Itemize
earliest time for node 
\begin_inset Formula $i\in V$
\end_inset

: 
\begin_inset Formula $r_{i}$
\end_inset


\end_layout

\begin_layout Itemize
a destination 
\begin_inset Formula $n\in V$
\end_inset


\end_layout

\begin_layout Itemize
an origin 
\begin_inset Formula $1\in V$
\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{e}=x_{i,j}$
\end_inset

: whether edge 
\begin_inset Formula $e=\left(i,j\right)\in E$
\end_inset

 is used (binary)
\end_layout

\begin_layout Itemize
\begin_inset Formula $t_{i}$
\end_inset

: time at which the traveller crosses 
\begin_inset Formula $i\in V$
\end_inset

 (real)
\end_layout

\begin_layout Standard
Objective: 
\begin_inset Formula 
\[
\min t_{n}
\]

\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
If one edge incoming for 
\begin_inset Formula $i$
\end_inset

, then one edge outgoing, except at origin and destination: 
\begin_inset Formula 
\[
\underbrace{\sum_{i\in V}x_{i,k}}_{\mathrm{in}}=\underbrace{\sum_{j\in V}x_{j,k}}_{\mathrm{out}},\qquad\forall k\in V\backslash\left\{ 1,n\right\} .
\]

\end_inset


\end_layout

\begin_layout Itemize
Must enter 
\begin_inset Formula $n$
\end_inset

, must exit 
\begin_inset Formula $1$
\end_inset

: 
\begin_inset Formula 
\[
\sum_{i\in V}x_{1,i}=1,\qquad\sum_{i\in V}x_{i,n}=1.
\]

\end_inset


\end_layout

\begin_layout Itemize
Time reference: 
\begin_inset Formula 
\[
t_{1}=0,\qquad t_{i}\geq0,\quad\forall i\in V.
\]

\end_inset


\end_layout

\begin_layout Itemize
Going from a node 
\begin_inset Formula $i$
\end_inset

 to another node 
\begin_inset Formula $j$
\end_inset

 takes some time, update 
\begin_inset Formula $t_{j}$
\end_inset

 accordingly: 
\begin_inset Formula 
\[
t_{j}\geq t_{i}+c_{i,j}\,x_{i,j},\qquad\forall\left(i,j\right)\in E.
\]

\end_inset


\end_layout

\begin_layout Itemize
Cannot exit a node before its earliest time: 
\begin_inset Formula 
\[
t_{i}\geq r_{i},\qquad\forall i\in V.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Dynamic programming solution
\end_layout

\begin_layout Standard
Bellman-Ford algorithm is based on dynamic programming for the shortest
 path (without constraints).
 Let 
\begin_inset Formula $D_{k}\!\left(j\right)$
\end_inset

 be the shortest distance between origin 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 with at most 
\begin_inset Formula $k$
\end_inset

 edges:
\begin_inset Formula 
\[
D_{0}\!\left(1\right)=0,
\]

\end_inset


\begin_inset Formula 
\[
D_{0}\!\left(j\right)=+\infty,\qquad\forall j\in V\backslash\left\{ 1\right\} ,
\]

\end_inset


\begin_inset Formula 
\[
D_{k}\!\left(j\right)=\min\left\{ \underbrace{D_{k-1}\!\left(j\right)}_{\mathrm{existing\,paths}},\qquad\underbrace{\min_{i:\:\left(i,j\right)\in E}\left\{ D_{k-1}\!\left(i\right)+c_{i,j}\right\} }_{\mathrm{also\,consider\,intermediate\,node\,}i}\right\} .
\]

\end_inset

When considering one more edge, remember must go to 
\begin_inset Formula $j$
\end_inset

: nodes 
\begin_inset Formula $i$
\end_inset

 such that an edge 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 exists.
 
\end_layout

\begin_layout Standard
Modification here? Working with times, not distances: not a problem.
 However, earliest times! Add a maximum around this:
\begin_inset Formula 
\[
t_{1}\!\left(j\right)=\begin{cases}
\max\left\{ r_{j},c_{1,j}\right\}  & \,\forall i:\:\left(i,j\right)\in E\\
+\infty & \mbox{ otherwise}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
t_{k}\!\left(j\right)=\max\left\{ r_{j},\quad\min\left\{ t_{k-1}\!\left(j\right),\qquad\min_{i\in\delta^{-}\!\left(j\right)}\left\{ t_{k-1}\!\left(i\right)+c_{i,j}\right\} \right\} \right\} .
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Constraint programming 
\begin_inset CommandInset label
LatexCommand label
name "chap:Constraint-programming"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Golomb ruler? Application: http://www.slideshare.net/xnodet/ibm-cplex-optimization
-studio-127-benders-modeling-assistance-etc, slide 96
\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

A Golomb ruler is a set of marks at integer positions along an imaginary
 ruler such that no …
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Example of a conference room with proportions of a [0, 2, 7, 8, 11] Golomb
 ruler, making it configurable to 10 different sizes.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Usually, computer code is 
\emph on
imperative
\emph default
: it describes a series of operations to follow.
 On the other hand, 
\emph on
declarative
\emph default
 programming only stands relations between the variables (constraints);
 afterwards, a solver comes and find a solution that satisfies all those
 constraints.
 Integer programming (covered in Part 
\begin_inset CommandInset ref
LatexCommand ref
reference "part:Mixed-integer-programming"

\end_inset

) is one kind of declarative programming which is particularly well-suited
 to finding optimal solutions; on the other hand, 
\emph on
constraint
\emph default
 programming excels at finding feasible solutions.
 
\end_layout

\begin_layout Standard
The main difference between mixed-integer programming and constraint programming
 is the technology behind the solvers: usually, modelling is easier with
 constraint programming, as the constraints are more expressive; on the
 other hand, solving mixed-integer programs is easier that constraint programs,
 as all constraints have the same structure.
 As a consequence, the algorithms behind each paradigm are very different
 (even though they can merge: 
\begin_inset CommandInset href
LatexCommand href
name "SCIP"
target "http://scip.zib.de/"
literal "false"

\end_inset

 can solve nonlinear mixed-integer programs with constraint programming
 techniques).
 
\end_layout

\begin_layout Standard
Constraint programming is very expressive: linear constraints (as those
 of mixed-integer linear programming) are allowed within constraint programs;
 nonlinear constraints are too (for example, products of variables).
 Logic constraints can be added as is, without rewriting them as linear
 constraints (mixing AND, OR, NOT, etc., but not first-order logic, with
 
\begin_inset Formula $\forall$
\end_inset

 and 
\begin_inset Formula $\exists$
\end_inset

).
 More specific constraints are defined, such as 
\family typewriter
alldifferent
\family default
: its arguments must take distinct values (for example, 
\family typewriter
alldifferent(1, 2, 3)
\family default
 holds, but not 
\family typewriter
alldifferent(2, 2)
\family default
).
 
\emph on
Reification
\emph default
 is also possible, it allows imposing constraints such as 
\begin_inset Quotes eld
\end_inset

one or two constraints of this set of three constraints must hold
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
Whereas mixed-integer programming relies on a single family of algorithms
 for any kind of problem, constraint programming requires some code for
 handling each kind of constraint, i.e.
 
\emph on
propagators
\emph default
, which actually implement the constraint.
 In other words, each problem may be formulated as only one constraint—the
 tedious work being to write the propagator that is specific for this problem.
 Hence, constraint programming formulation is about 
\emph on
reusing
\emph default
 existing constraints, which have seen a lot of research about the best
 propagators (the 
\begin_inset CommandInset href
LatexCommand href
name "Global Constraint Catalog"
target "http://sofdem.github.io/gccat/"
literal "false"

\end_inset

 lists many kinds of constraints and propagators).
 
\end_layout

\begin_layout Subsection
Sudoku 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Constraint-programming-Sudoku"

\end_inset


\end_layout

\begin_layout Standard
Sudoku is a kind of puzzle game.
 It involves an 
\begin_inset Formula $N\times N$
\end_inset

 grid, some of the spaces being filled.
 The goal is to fill all spaces with numbers between 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $N^{2}$
\end_inset

 while meeting a series of constraints: 
\begin_inset Quotes eld
\end_inset

the same single integer may not appear twice in the same row, column or
 in any of the 
\begin_inset Formula $N$
\end_inset

 
\begin_inset Formula $\sqrt{N}\times\sqrt{N}$
\end_inset

 subregions of the 
\begin_inset Formula $N\times N$
\end_inset

 playing board
\begin_inset Quotes erd
\end_inset

 [Wikipedia].
 
\end_layout

\begin_layout Enumerate
Explain how a human could solve any sudoku puzzle using the same principles
 as constraint programming.
 Apply it on the given grid.
 
\end_layout

\begin_layout Enumerate
Write a mixed-integer programming model to solve sudoku puzzles.
 
\end_layout

\begin_layout Enumerate
* The solver performs many operations on the model before actually solving
 it (this is called 
\emph on
presolving
\emph default
), and for the sudoku it might very well solve the problem (without needing
 any branch-and-bound or cutting plane).
 How does these operations relate to the way a human would solve the problem
 (as in 1)? 
\end_layout

\begin_layout Enumerate
Write a constraint programming model to solve sudoku puzzles.
 Use only the constraint 
\family typewriter
alldifferent
\family default
.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example 
\begin_inset Formula $2\times2$
\end_inset

 sudoku grid.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A human tries to apply the constraints to find spaces where only one value
 is possible.
 More advanced techniques imply considering all values for each space, and
 eliminating those that do not respect the constraints.
 
\end_layout

\begin_layout Solution*
A MILP formulation is: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{find} & \text{a solution}\\
\text{s.t.} & \sum_{k=1}^{N^{2}}x_{i,j,k}=1, & \forall i\in\left[1,N^{2}\right],\forall j\in\left[1,N^{2}\right],\\
 & \sum_{j=1}^{N^{2}}x_{i,j,k}=1, & \forall i\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right],\\
 & \sum_{i=1}^{N^{2}}x_{i,j,k}=1, & \forall j\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right],\\
 & \sum_{l=0}^{N-1}\sum_{m=0}^{N-1}x_{i+l,j+m,k}=1, & \forall i\in\left[1,N\right],\forall j\in\left[1,N\right],\forall k\in\left[1,N^{2}\right],\\
 & x_{i,j,k}=1, & \forall i\in\left[1,N^{2}\right],\forall j\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right],v_{i,j,k}=1.
\end{array}
\]

\end_inset


\end_layout

\begin_layout Solution*
Presolving can, based on known values, eliminate a series of variables:
 if a figure is known for one constraint, all other variables in the constraint
 can be set to zero.
 Once the variables are eliminated, the remaining constraints are simpler.
 In theory, branch-and-bound is only required when multiple solutions exist.
 
\end_layout

\begin_layout Solution*
A CP formulation is: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{find} & \text{a solution}\\
\text{s.t.} & \mbox{alldifferent}\!\left(x_{i1},x_{i2}\cdots x_{iN^{2}}\right), & \forall i\in\left[1,N^{2}\right],\\
 & \mbox{alldifferent}\!\left(x_{1j},x_{2j}\cdots x_{N^{2}j}\right), & \forall j\in\left[1,N^{2}\right],\\
 & \mbox{alldifferent}\!\left(\begin{array}{cccc}
x_{i,j}, & x_{i+1,j} & \cdots & x_{i+N,j}\\
x_{i,j+1}, & x_{i+1,j+1} & \cdots & x_{i+N,j+1}\\
\vdots & \vdots & \ddots & \vdots\\
x_{i,j+N}, & x_{i+1,j+N} & \cdots & x_{i+N,j+N}
\end{array}\right), & \forall i\in\left[1,N\right],\forall j\in\left[1,N\right].
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
How does a human solve a sudoku?
\end_layout

\begin_layout Standard
Two steps: reason on existing digits to find new ones (more advanced players:
 eliminate potential candidates); arbitrarily impose one digit when pure
 logic is not enough (may need to go back!).
 Two steps in CP: 
\end_layout

\begin_layout Enumerate
Constraint propagation (limit the domain of variables by reasoning on the
 constraints).
 
\end_layout

\begin_layout Enumerate
Searching (impose value in the domain).
 
\end_layout

\begin_layout Standard
Example in Sudoku: start from grid.
 Then expand from the 
\begin_inset Formula $1$
\end_inset

: in any subregion, exactly one 
\begin_inset Formula $1$
\end_inset

; in any line or row, exactly one 
\begin_inset Formula $1$
\end_inset

.
 Hence two easy to find, then the third 
\begin_inset Formula $1$
\end_inset

.
 What about searching? Try to put a 
\begin_inset Formula $2$
\end_inset

 in the lower-left subregion: first try at the top, quickly infeasible (no
 place for a 
\begin_inset Formula $2$
\end_inset

 in the lower-right subregion).
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example 
\begin_inset Formula $2\times2$
\end_inset

 sudoku grid.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Integer programming model
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $N^{2}$
\end_inset

: the order of the grid, i.e.
 the number of rows and columns (the grid is 
\begin_inset Formula $N^{2}\times N^{2}$
\end_inset

), the maximum digit to place on the grid (from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $N^{2}$
\end_inset

) .
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{i,j,k}$
\end_inset

: 
\begin_inset Formula $1$
\end_inset

 if the digit 
\begin_inset Formula $k$
\end_inset

 is located at the position 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 in the grid, 
\begin_inset Formula $0$
\end_inset

 otherwise (initially known digits).
 
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i,j,k}\in\mathcal{B}$
\end_inset

: whether the digit 
\begin_inset Formula $k$
\end_inset

 is chosen in the cell 
\begin_inset Formula $\left(i,j\right)$
\end_inset

, with 
\begin_inset Formula $i\in\left[1,N^{2}\right]$
\end_inset

, 
\begin_inset Formula $j\in\left[1,N^{2}\right]$
\end_inset

, 
\begin_inset Formula $k\in\left[1,N^{2}\right]$
\end_inset

 
\end_layout

\begin_layout Standard
Objective function: none! 
\begin_inset Newline newline
\end_inset

Constraints: 
\end_layout

\begin_layout Itemize
One value appears in each cell: 
\begin_inset Formula 
\[
\sum_{k=1}^{N^{2}}x_{i,j,k}=1,\qquad\forall i\in\left[1,N^{2}\right],\forall j\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
Each value appears in each row once: 
\begin_inset Formula 
\[
\sum_{j=1}^{N^{2}}x_{i,j,k}=1,\qquad\forall i\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
Each value appears in each column once: 
\begin_inset Formula 
\[
\sum_{i=1}^{N^{2}}x_{i,j,k}=1,\qquad\forall j\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
Each value appears in each subregion once (hence indices going up to 
\begin_inset Formula $N$
\end_inset

, no more 
\begin_inset Formula $N^{2}$
\end_inset

, except for 
\begin_inset Formula $k$
\end_inset

!): 
\begin_inset Formula 
\[
\sum_{l=0}^{N-1}\sum_{m=0}^{N-1}x_{i+l,j+m,k}=1,\qquad\forall i\in\left[1,N\right],\forall j\in\left[1,N\right],\forall k\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
The initial digits must be respected: 
\begin_inset Formula 
\[
x_{i,j,k}=1,\qquad\forall i\in\left[1,N^{2}\right],\forall j\in\left[1,N^{2}\right],\forall k\in\left[1,N^{2}\right],v_{i,j,k}=1.
\]

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Presolving
\end_layout

\begin_layout Standard
Once a value is known (initial digits, for example), it can be replaced
 in all the constraints.
 For each constraint where a variable is replaced, as the right-hand side
 is always one, all the other variables in the constraint can be set to
 zero (sum of binary variables equal to zero) and ignored for the rest of
 the optimisation.
 This can remove a tremendous amount of variables! 
\begin_inset Newline newline
\end_inset

This first step is equivalent to recognising that some digits are not possible
 for some cells.
 
\end_layout

\begin_layout Standard
The solver can repeat this process: once a variable is fixed, then its value
 can be replaced in all the constraints it (still) appears in… and that
 might imply the value for many other variables.
 When a constraint contains only one variable, its value is also known to
 be one, which can impact the remaining constraints.
 
\end_layout

\begin_layout Standard
When multiple solutions are possible, however, humans state hypotheses:
 the solver starts the branch-and-bound process to find a feasible solution.
 (And can also be used to iterate over all solutions.)
\end_layout

\begin_layout Subsubsection

\series bold
Constraint programming model
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ij}$
\end_inset

 is the digit for the square 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 in the puzzle, with 
\begin_inset Formula $\left(i,j\right)\in\left[1,N^{2}\right]^{2}$
\end_inset

; domain: 
\begin_inset Formula $\left[1,N^{2}\right]$
\end_inset

.
 
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
different digits in each row: 
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{i1},x_{i2}\cdots x_{iN^{2}}\right),\qquad\forall i\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
different digits in each line: 
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{1j},x_{2j}\cdots x_{N^{2}j}\right),\qquad\forall j\in\left[1,N^{2}\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
different digits in each subregion: 
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(\begin{array}{cccc}
x_{i,j}, & x_{i+1,j} & \cdots & x_{i+N,j}\\
x_{i,j+1}, & x_{i+1,j+1} & \cdots & x_{i+N,j+1}\\
\vdots & \vdots & \ddots & \vdots\\
x_{i,j+N}, & x_{i+1,j+N} & \cdots & x_{i+N,j+N}
\end{array}\right),\qquad\forall i\in\left[1,N\right],\forall j\in\left[1,N\right].
\]

\end_inset


\end_layout

\begin_layout Remark
Definition of alldifferent: 
\begin_inset CommandInset href
LatexCommand href
target "http://sofdem.github.io/gccat/gccat/Calldifferent.html"
literal "false"

\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Magic square 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Constraint-programming-Magic-square"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

A magic square is an arrangement of distinct integers in an 
\begin_inset Formula $N\times N$
\end_inset

 grid, where the numbers in each row, and in each column, and the numbers
 in the main and secondary diagonals, all add up to the same number
\begin_inset Quotes erd
\end_inset

 [Wikipedia].
 This number is given by the following formula, based on the size of the
 grid 
\begin_inset Formula $N$
\end_inset

: 
\begin_inset Formula 
\[
\frac{N\left(N^{2}+1\right)}{2}.
\]

\end_inset

Thus, for a 
\begin_inset Formula $3\times3$
\end_inset

 grid, the three digits in each row, column, and diagonal must sum up to
 
\begin_inset Formula $15$
\end_inset

; for a 
\begin_inset Formula $4\times4$
\end_inset

 grid, they must sum up to 
\begin_inset Formula $34$
\end_inset

; etc.
 
\end_layout

\begin_layout Standard
Write a constraint programming model to solve magic squares.
 Use only the constraint 
\family typewriter
alldifferent
\family default
 and linear equalities.
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{find} & \text{a solution}\\
\text{s.t.} & 2\,V=N\left(N^{2}+1\right),\\
 & \sum_{j=1}^{N}x_{ij}=V, & \forall i\in\left[1,N\right],\\
 & \sum_{i=1}^{N}x_{ij}=V, & \forall j\in\left[1,N\right],\\
 & \sum_{i=1}^{N}x_{ij}=V, & \forall j\in\left[1,N\right],\\
 & \mbox{alldifferent}\!\left(x_{ij}\quad\forall i\in\left[1,N\right],\forall j\in\left[1,N\right]\right).
\end{array}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Data: 
\end_layout

\begin_layout Itemize
The number 
\begin_inset Formula 
\[
V=\frac{N\left(N^{2}+1\right)}{2}.
\]

\end_inset


\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{ij}$
\end_inset

 is the digit for the square 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 in the puzzle, with 
\begin_inset Formula $\left(i,j\right)\in\left[1,N\right]^{2}$
\end_inset

; domain: 
\begin_inset Formula $\left[1,N^{2}\right]$
\end_inset

.
 
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
the sum on each line must be 
\begin_inset Formula $V$
\end_inset


\begin_inset Formula 
\[
\sum_{j=1}^{N}x_{ij}=V,\qquad\forall i\in\left[1,N\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
the sum on each column must be 
\begin_inset Formula $V$
\end_inset


\begin_inset Formula 
\[
\sum_{i=1}^{N}x_{ij}=V,\qquad\forall j\in\left[1,N\right].
\]

\end_inset


\end_layout

\begin_layout Itemize
the sum on each diagonal must be 
\begin_inset Formula $V$
\end_inset


\begin_inset Formula 
\[
\sum_{i=1}^{N}x_{ii}=V,\qquad\sum_{i=1}^{N}x_{i,N-i+1}=V.
\]

\end_inset


\end_layout

\begin_layout Itemize
all digits must be different
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{ij}\quad\forall i\in\left[1,N\right],\forall j\in\left[1,N\right]\right).
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Formula $N$
\end_inset

 queens 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Constraint-programming-N-queens"

\end_inset


\end_layout

\begin_layout Standard
The 
\begin_inset Formula $N$
\end_inset

-queens problem is about placing 
\begin_inset Formula $N$
\end_inset

 queens in an 
\begin_inset Formula $N\times N$
\end_inset

 grid such that no two queens can threaten each other.
 The rules for queens are those of chess: a queen can attack another one
 if they are on the same row, column, or diagonal.
 
\end_layout

\begin_layout Enumerate
Write a constraint programming model to solve the 
\begin_inset Formula $N$
\end_inset

-queens problem.
 Use only the constraint 
\family typewriter
alldifferent
\family default
.
 
\end_layout

\begin_layout Enumerate
Write a mixed-integer linear program to solve the 
\begin_inset Formula $N$
\end_inset

-queens problem.
 Compare it to the constraint programming example.
 How many constraints does your model use? What is the domain of the variables?
 
\end_layout

\begin_layout Enumerate
Solve the problem for 
\begin_inset Formula $N=4$
\end_inset

 using reasoning (domain filtering based on the constraints) and enumeration.
 How many solutions exist? 
\end_layout

\begin_layout Remark
See also the MIP counterpart: 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Puzzles-N-queens"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset space ~
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula 
\[
\begin{array}{ccc}
\text{find} & \text{a solution}\\
\text{s.t.} & \mbox{alldifferent}\!\left(x_{i}\quad\forall i\in\left[1,N\right]\right),\\
 & \mbox{alldifferent}\!\left(x_{i}-i\quad\forall i\in\left[1,N\right]\right),\\
 & \mbox{alldifferent}\!\left(x_{i}+i\quad\forall i\in\left[1,N\right]\right).
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
The MIP solution is given in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Puzzles-N-queens"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
CP model
\end_layout

\begin_layout Standard
Variables: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $x_{i}$
\end_inset

 is the row for queen 
\begin_inset Formula $i\in\left[1,N\right]$
\end_inset

.
 
\end_layout

\begin_layout Standard
Constraints: 
\end_layout

\begin_layout Itemize
Queens can attack on columns.
 Already taken into account by the choice of variables! 
\end_layout

\begin_layout Itemize
Queens can attack on rows
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{i}\quad\forall i\in\left[1,N\right]\right).
\]

\end_inset


\end_layout

\begin_layout Itemize
Queens can attack on diagonals
\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{i}-i\quad\forall i\in\left[1,N\right]\right),
\]

\end_inset


\begin_inset Formula 
\[
\mbox{alldifferent}\!\left(x_{i}+i\quad\forall i\in\left[1,N\right]\right).
\]

\end_inset

Reasoning? Shift the columns so that diagonals are aligned.
 
\begin_inset Newline newline
\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

***#          ***#
\end_layout

\begin_layout Plain Layout

**#*    =>     **#*
\end_layout

\begin_layout Plain Layout

*#**    =>      *#**
\end_layout

\begin_layout Plain Layout

#***             #***
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
MIP model
\end_layout

\begin_layout Standard
The MIP solution is given in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Modelling-Puzzles-N-queens"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
* Stable mate matching 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Constraint-programming-Stable-mate-matching"

\end_inset


\end_layout

\begin_layout Standard
In the stable room-mate matching problem, we are given 
\begin_inset Formula $2n$
\end_inset

 people that we need to match by pairs in order to occupy 
\begin_inset Formula $n$
\end_inset

 rooms.
 Each person has a decreasing order of people that he would like to share
 the room with.
 The goal of the problem is to find a matching of the people in groups of
 two in 
\begin_inset Formula $n$
\end_inset

 rooms.
 We would like to model the stability of the matching, i.e.
 there cannot exist a pair of persons 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 that are not matched together but such that 
\begin_inset Formula $i$
\end_inset

 is higher in the order of preference of 
\begin_inset Formula $j$
\end_inset

 than the current room-mate of 
\begin_inset Formula $j$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 is higher in the order of preference of 
\begin_inset Formula $i$
\end_inset

 than the current room-mate of 
\begin_inset Formula $i$
\end_inset

 (both at the same time).
\end_layout

\begin_layout Enumerate
Model the stable room-mate problem using the constraint programming paradigm.
 You can use the following constraints: linear constraints, propositional
 logic, 
\family typewriter
alldifferent
\family default
.
 
\end_layout

\begin_layout Enumerate
Model the matching (without the stability requirement) as an integer programming
 programming problem.
\end_layout

\begin_layout Enumerate
Model the additional stability requirement in the integer programming problem
 modelled in (2).
\end_layout

\begin_layout Example*
Assume there are four people whose order of preference is given as follows:
 
\begin_inset Formula 
\[
\text{Order(1)}:\:2,3,4.\qquad\text{Order(2)}:\:1,4,3.\qquad\text{Order(3)}:\:1,4,2.\qquad\text{Order(4)}:\:1,2,3.
\]

\end_inset

If we match the people as 
\begin_inset Formula $(1,2)$
\end_inset

 and 
\begin_inset Formula $(3,4)$
\end_inset

, the matching is stable.
 If we match the people as (
\begin_inset Formula $1,3)$
\end_inset

 and 
\begin_inset Formula $(2,4)$
\end_inset

, the matching is not stable as both 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $2$
\end_inset

 would prefer to leave their roommate to go together in a room.
\end_layout

\begin_layout Part
Polynomially-solvable problems 
\begin_inset CommandInset label
LatexCommand label
name "part:Polynomially-solvable-problems"

\end_inset


\end_layout

\begin_layout Chapter
Flow problems 
\begin_inset CommandInset label
LatexCommand label
name "chap:Flow-problems"

\end_inset


\end_layout

\begin_layout Standard
Flows are a kind of polynomially-solvable problems.
 They can be modelled as mixed-integer linear programs, but more specific
 algorithms can solve them faster.
 The first step, however, is to formulate a problem as a maximum flow, as
 was previously done for mixed-integer programs (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Modelling"

\end_inset

) or constraint programming (Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Constraint-programming"

\end_inset

).
 
\end_layout

\begin_layout Standard
Maximum flows are graph problems.
 Within a network of nodes, one being the source 
\begin_inset Formula $s$
\end_inset

 and another the destination 
\begin_inset Formula $t$
\end_inset

, each edge having a defined capacity, the goal is to push as much flow
 into the network as possible.
 This flow must start from 
\begin_inset Formula $s$
\end_inset

 and end at 
\begin_inset Formula $t$
\end_inset

, but also respect the capacities of all the edges in the network.
 Edges are directed.
 
\end_layout

\begin_layout Section
Modelling 
\begin_inset CommandInset label
LatexCommand label
name "sec:Flow-problems-Modelling"

\end_inset


\end_layout

\begin_layout Subsection
Village fair 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flow-problems-Modelling-Village-fair"

\end_inset


\end_layout

\begin_layout Standard
A village fair gathers the families of the whole village and the close surroundi
ngs.
 The organisers want to have a dinner to end the fair, but they need to
 sit people to the tables.
 In order to increase social interactions, at most three members of each
 family can be present at any given table.
 
\end_layout

\begin_layout Standard
Model this situation as a maximum flow problem, with 
\begin_inset Formula $p$
\end_inset

 families (with 
\begin_inset Formula $a_{i}$
\end_inset

 members for family 
\begin_inset Formula $i$
\end_inset

) and 
\begin_inset Formula $q$
\end_inset

 tables (with a capacity 
\begin_inset Formula $b_{j}$
\end_inset

 for table 
\begin_inset Formula $j$
\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use one node per family (the family 
\begin_inset Formula $i$
\end_inset

 sending 
\begin_inset Formula $a_{i}$
\end_inset

 units of flow) and one per table (the table 
\begin_inset Formula $j$
\end_inset

 consuming at most 
\begin_inset Formula $b_{j}$
\end_inset

 units of flow).
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Each family sends 
\begin_inset Formula $a_{i}$
\end_inset

 units of flow into the graph (i.e.
 bounded link from the source 
\begin_inset Formula $s$
\end_inset

), each table can consume at most 
\begin_inset Formula $b_{j}$
\end_inset

 units (i.e.
 bounded link to the sink 
\begin_inset Formula $t$
\end_inset

); or vice-versa.
 Then a family can send at most three members to a table, which is an upper
 bound to the flow.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_modelling_villagefair.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nurses scheduling as a minimum flow.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nurses scheduling 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flow-problems-Modelling-Nurses-scheduling"

\end_inset


\end_layout

\begin_layout Standard
Nurses make shifts in a hospital to fulfil the needs for each and every
 department and still have some rest.
 Each shift lasts for eight hours (meaning that there are three shifts per
 day).
 Each department has minimum requirements in terms of nurses per day (to
 be hired for the three shifts); due to the nature of their workload, minimum
 requirements are also imposed on each shift (summing over the departments).
 Furthermore, the nurses should be allocated to the departments following
 some bounds.
 
\end_layout

\begin_layout Standard
Model this situation as a minimum flow problem.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nurses
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Emergency
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Neonatalogy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orthopaedic surgery
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shift 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 6 and 8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 11 and 12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 7 and 12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 26
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shift 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 4 and 6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 11 and 12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 7 and 12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 24
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shift 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 2 and 4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 10 and 12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Between 5 and 7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 19
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 32
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
At least 22
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nurses requirements.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use one node per shift and one per department.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Actually, quite similar to the previous exercise! 
\end_layout

\begin_layout Standard
First series of nodes: the shifts, with the minima as ingoing bounded edges.
 Then, the departments, with the minima as outgoing bounded edges.
 Link them with bounded edges indicating the bounds.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_modelling_nurses.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nurses scheduling as flow feasibility.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Capacitated lot sizing 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flow-problems-Modelling-Lot-sizing"

\end_inset


\end_layout

\begin_layout Standard
A steel mill manufactures I-beams; the director wants to plan the production
 for the next twelve weeks.
 The demand for I-beams is exactly known for each week.
 The plant is dimensioned for a limited production each week (100 beams).
 Due to limited space, at most 300 beams can be stored within the mill.
 The director only wants a feasible production planning (i.e.
 the number of beams to produce each week), without considering production
 costs.
 
\end_layout

\begin_layout Enumerate
Formulate this problem as a feasible flow problem.
 
\end_layout

\begin_layout Enumerate
Formulate this problem as a linear mixed-integer optimization problem.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="13">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Week
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Demand 
\end_layout

\begin_layout Plain Layout
[
\begin_inset Formula $10$
\end_inset

 beams]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
I-beams factory planning requirements.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use one node per time period.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Each node is the total stock at one period: what is produced plus what is
 stored from the previous period.
 The exit is exactly the demand.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_modelling_lotsizing.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Lot sizing as flow feasibility.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Warehouse-cart management 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flow-problems-Modelling-Warehouse-cart"

\end_inset


\end_layout

\begin_layout Standard
Some logistic operators handle many small packages: they must be transferred
 between hubs, from the origin to the destination of each package.
 However, loading and unloading trucks holding only these little parcels
 takes an enormous amount of time.
 Therefore, most operators tend to group them in carts: one cart contains
 many such boxes; carts are moved one by one.
 
\end_layout

\begin_layout Standard
Once the carts have reached their final destination, they are emptied and
 are ready for the next use.
 Nevertheless, the load between hubs is not homogeneous: some of them receive
 many more packages than they send (typically, near large cities) and others
 have the reverse pattern (mostly, close to factories).
 Carts must then be rebalanced at the end of each rotation, so that empty
 ones are available where they are needed.
 Therefore, each hub has a given amount of carts available (due to lorries
 unloading them) and another amount of carts needed (because trucks will
 load them the following day).
 
\end_layout

\begin_layout Standard
A truck can only load some number of carts; while this number is relatively
 large, rebalancing between hubs may require more than one lorry.
 Trucks cannot travel between any pair of hubs: they have fixed routes,
 so that their drivers always go back home at the end of each day.
\end_layout

\begin_layout Standard
Supposing that the need for carts is perfectly known: 
\end_layout

\begin_layout Enumerate
Is there always a feasible solution to this problem?
\end_layout

\begin_layout Enumerate
Formulate the problem of rebalancing carts as a feasible flow problem, i.e.
 the problem of finding the number of carts and the number of trucks that
 must travel along the existing routes.
 
\end_layout

\begin_layout Enumerate
Formulate this problem as a linear mixed-integer optimization problem.
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use two nodes per hub, plus a source and a destination.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
There is not always a feasible solution to this problem, as the routes are
 fixed in advance, in the case the unbalance is too high with respect to
 the needs of the previous day.
\end_layout

\begin_layout Standard
Notations: 
\begin_inset Formula $a_{h}$
\end_inset

 is the number of carts available at hub 
\begin_inset Formula $h$
\end_inset

, 
\begin_inset Formula $d_{h}$
\end_inset

 is the demand in carts of hub 
\begin_inset Formula $h$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 is the capacity of a lorry in carts, 
\begin_inset Formula $n_{hi}$
\end_inset

 is the number of trucks following the route from 
\begin_inset Formula $h$
\end_inset

 to 
\begin_inset Formula $i$
\end_inset

 on the way back (potentially zero if no lorry uses this route).
 All these numbers are integers.
\end_layout

\begin_layout Standard
Two nodes per hub 
\begin_inset Formula $h$
\end_inset

 (
\begin_inset Formula $s_{h}$
\end_inset

 and 
\begin_inset Formula $t_{h}$
\end_inset

), plus a source 
\begin_inset Formula $s$
\end_inset

 and a destination 
\begin_inset Formula $t$
\end_inset

.
 Edges from 
\begin_inset Formula $s$
\end_inset

 to an origin hub 
\begin_inset Formula $s_{h}$
\end_inset

 have a maximum capacity, the number of available carts at 
\begin_inset Formula $h$
\end_inset

, 
\begin_inset Formula $a_{h}$
\end_inset

.
 Edges between origin hub 
\begin_inset Formula $s_{h}$
\end_inset

 and destination hub 
\begin_inset Formula $t_{i}$
\end_inset

 exist only if the corresponding route exists; the capacity of this edge
 is limited by the number of trucks for this route (times the capacity of
 each truck), i.e.
 
\begin_inset Formula $C\,n_{ji}$
\end_inset

.
 Edges from each hub 
\begin_inset Formula $t_{h}$
\end_inset

 to the destination 
\begin_inset Formula $t$
\end_inset

 have a minimum capacity of the required number of carts at the destination,
 
\begin_inset Formula $d_{h}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_modelling_carts.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Cart rebalancing as flow feasibility.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
* Character design 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flow-problems-Modelling-Character-design"

\end_inset


\end_layout

\begin_layout Standard
For a new game, a game designer wants to assign a series of 
\begin_inset Formula $C$
\end_inset

 characters to both at least three traits (among 
\begin_inset Formula $T$
\end_inset

 ones) and to exactly one political party (among 
\begin_inset Formula $P$
\end_inset

 ones).
 For balancing, each trait and each party can have at most 
\begin_inset Formula $C/2$
\end_inset

 characters.
 The designer longs for a tool that can produce such assignments so they
 can iterate through them and find other ideas.
 
\end_layout

\begin_layout Enumerate
Formulate this problem as (1) a 
\emph on
feasible
\emph default
 flow problem, and (2) as a linear mixed-integer optimization problem.
\end_layout

\begin_layout Enumerate
While working on the lore, the designer desires that some given characters
 are not assigned to some traits.
 How do you modify your two models to accommodate this change? 
\end_layout

\begin_layout Enumerate
Later on, they wish that some characters can have one or two political parties.
 What is the impact on your two models? 
\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
Use one node per trait and one per party, plus two nodes per character.
 Then, remove some edges.
 Finally, modify the capacities of edges towards the parties.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Feasible flow model
\end_layout

\begin_layout Standard
One node per character.
 Inflow: a trait; outflow: to a second per-character node and directly to
 the sink.
 Indeed, exactly one unit can flow to the parties, and the excess from the
 traits must be released (i.e.
 directly to the sink); hence the double characters: the second node has
 the flow exactly for the parties, and nothing else (the capacity from the
 characters towards the sink can be ignored without problem).
 
\end_layout

\begin_layout Standard
The maximum number of characters per trait and per party are respectively
 encoded as capacities from the source to the traits and from the parties
 to the sink.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_modelling_characters.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Character design as flow feasibility.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Trait assignment
\end_layout

\begin_layout Standard
Just remove the edges from the forbidden traits towards the concerned character.
 
\end_layout

\begin_layout Subsubsection
Political parties assignment
\end_layout

\begin_layout Standard
Change the capacity towards the second character node to let it free between
 one and two.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Maximum flows 
\begin_inset CommandInset label
LatexCommand label
name "sec:Flows-Solve-maximum-flows"

\end_inset


\end_layout

\begin_layout Subsection
Maximum flow with the shortest augmenting path algorithm 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flows-Solve-maximum-flows-Shortest-augmenting-path"

\end_inset


\end_layout

\begin_layout Standard
Solve the following maximum flow with the shortest augmenting path algorithm.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Network for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-maximum-flows-Shortest-augmenting-path"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
The maximum flow is 8.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
Initial graph
\end_layout

\begin_layout Standard
Capacity of some edge 
\begin_inset Formula $e=\left(i,j\right)\in E$
\end_inset

: 
\begin_inset Formula $c_{ij}$
\end_inset

.
 Actual flow through it: 
\begin_inset Formula $x_{ij}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Algorithm: at each iteration, try to add more flow to the current solution.
 It is based on the notion of 
\emph on
residual graph
\emph default
 
\begin_inset Formula $E\!\left(\mathbf{x}\right)$
\end_inset

, obtained by removing the current flow from the capacity.
 
\begin_inset Formula 
\[
r_{ij}=\underbrace{c_{ij}-x_{ij}}_{\mathrm{same\,edge}}+\underbrace{x_{ji}}_{\mathrm{reverse}}.
\]

\end_inset

Initially, this 
\emph on
residual
\emph default
 graph is exactly the same as the original graph, as there is no flow.
 Each iteration will also create new edges in the other directions.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step0.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, initial.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
How to compute efficiently a shortest path? 
\end_layout

\begin_layout Standard
A 
\emph on
valid labelling
\emph default
 is defined as follows: 
\begin_inset Formula 
\[
d\!\left(t\right)=0,\qquad d\!\left(i\right)\leq d\!\left(j\right)+1,\quad\forall\left(i,j\right)\in E\!\left(\mathbf{x}\right).
\]

\end_inset

Thus the labelling is always zero at the starting point 
\begin_inset Formula $t$
\end_inset

, and can only increase when going back to the source 
\begin_inset Formula $s$
\end_inset

.
 This definition is still valid, even when the labels are not cleared between
 two successive iterations: it is always a 
\emph on
lower bound on the distance to 
\begin_inset Formula $t$
\end_inset

 in the residual graph
\emph default
.
 
\end_layout

\begin_layout Remark*
At the first iteration, the labelling will be 
\emph on
exact
\emph default
: the labels give the exact distance to 
\begin_inset Formula $t$
\end_inset

.
 Afterwards, it will only be 
\emph on
valid
\emph default
, no more exact.
 
\end_layout

\begin_layout Standard
This definition is used to find the shortest path 
\emph on
in the number of edges
\emph default
! (No distance measure for each arc.)
\end_layout

\begin_layout Enumerate
For the first iteration, start with 
\begin_inset Formula $i=t$
\end_inset

, set 
\begin_inset Formula $d\!\left(t\right)=0$
\end_inset

, then move to another 
\begin_inset Formula $i$
\end_inset

 following an admissible arc (reverse direction), and set 
\begin_inset Formula $d\!\left(i\right)=d\!\left(j\right)+1$
\end_inset

 (minimum value allowed by the definition).
 Continue until finding the source 
\begin_inset Formula $s$
\end_inset

 or retreat (go to the predecessor node, update the distance labels along
 another admissible arc).
 
\emph on
This iteration must label all nodes.

\emph default
 
\end_layout

\begin_layout Enumerate
For the following iteration: restart from 
\begin_inset Formula $i=s$
\end_inset

, follow an admissible arc (possibly the same as previously!).
 Can update the labels as previously, 
\emph on
but always based on the residual graph
\emph default
.
 
\end_layout

\begin_layout Standard
When 
\begin_inset Formula $d\!\left(s\right)>n$
\end_inset

, no more shortest path, all nodes have been visited.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
First iteration
\end_layout

\begin_layout Standard
Find the shortest path in the graph from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

: it goes through 
\begin_inset Formula $3$
\end_inset

.
 Distance labelling iterations, starting from 
\begin_inset Formula $i=t$
\end_inset

: 
\begin_inset Formula 
\[
d\!\left(t\right)=0,\qquad d\!\left(3\right)=1,\qquad d\!\left(s\right)=2.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d\!\left(2\right)=2,\qquad d\!\left(1\right)=2.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step1_labels.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, first iteration: labels.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
What flow? Minimum capacity on the path: 
\begin_inset Formula $1$
\end_inset

, constrained by 
\begin_inset Formula $s\to3$
\end_inset

 and 
\begin_inset Formula $3\to t$
\end_inset

.
 Residual flows? 
\begin_inset Formula 
\begin{eqnarray*}
r_{s\to3} & = & c_{s\to3}-x_{s\to3}+x_{3\to}s\\
 & = & 1-1+0\\
 & = & 0,\\
r_{3\to s} & = & 0-0+1\\
 & = & 1.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step1.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, first iteration.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Second iteration
\end_layout

\begin_layout Standard
Shortest path from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

: through 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $2$
\end_inset

.
 Distance labelling iterations (
\series bold
previous labels are kept 
\series default
and updated if necessary), restarting from 
\begin_inset Formula $i=s$
\end_inset

 and retreating (the edge 
\begin_inset Formula $s\to3$
\end_inset

 is not in the residual graph): 
\begin_inset Formula 
\[
d\!\left(s\right)=\min\left\{ d\!\left(j\right)+1\,\Big|\,\left(s,j\right)\in E_{r},\qquad r_{ij}>0\right\} =3.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step2_labels.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, second iteration: labels.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
New flow: 
\begin_inset Formula $4$
\end_inset

, constrained by 
\begin_inset Formula $1\to2$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step2.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, second iteration.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Third iteration
\end_layout

\begin_layout Standard
Shortest path from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

: through 
\begin_inset Formula $1$
\end_inset

, 
\begin_inset Formula $3$
\end_inset

, and 
\begin_inset Formula $2$
\end_inset

.
 Relabelling as previously: 
\begin_inset Formula 
\[
d\!\left(3\right)=2,\qquad d\!\left(1\right)=3,\qquad d\!\left(s\right)=4.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step3_labels.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, third iteration: labels.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Flow: 
\begin_inset Formula $3$
\end_inset

, constrained by 
\begin_inset Formula $1\to3$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step3.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, third iteration.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Fourth iteration
\end_layout

\begin_layout Standard
No path from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

! Start from 
\begin_inset Formula $i=s$
\end_inset

, can go back to 
\begin_inset Formula $i=1$
\end_inset

… then has no outgoing edge in the residual graph except to 
\begin_inset Formula $s$
\end_inset

! 
\begin_inset Formula 
\[
d\!\left(1\right)=\min\left\{ d\!\left(j\right)+1\,\Big|\,\left(1,j\right)\in E\!\left(\mathbf{x}\right),\quad r_{1j}>0\right\} =d\!\left(s\right)+1=5.
\]

\end_inset

Then 
\begin_inset Formula $i=s$
\end_inset

, once again: same thing.
 
\begin_inset Formula 
\[
d\!\left(1\right)=\min\left\{ d\!\left(j\right)+1\,\Big|\,\left(s,j\right)\in E\!\left(\mathbf{x}\right),\quad r_{sj}>0\right\} =d\!\left(1\right)+1=6.
\]

\end_inset

Now, 
\begin_inset Formula $d\!\left(s\right)=6>5$
\end_inset

, which is greater than the number of nodes, done, no shortest path! 
\end_layout

\begin_layout Standard
(Still capacity to go to 
\begin_inset Formula $1$
\end_inset

, but not to exit 
\begin_inset Formula $1$
\end_inset

.)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step4_labels.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, fourth iteration: labels.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Maximum flow: 8.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_maxflow_shortestaugmentingpath_1_step4.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow, solution.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Feasible flows 
\begin_inset CommandInset label
LatexCommand label
name "sec:Flows-Solve-feasible-flows"

\end_inset


\end_layout

\begin_layout Subsection
Transformation into a maximum flow 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flows-Solve-feasible-flows-Transformation-1"

\end_inset


\end_layout

\begin_layout Standard
Solve the following feasibility flow with bound constraints as a maximum
 flow with edge demands.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_1_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Network for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-feasible-flows-Transformation-1"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A feasible flow is: 5 units in 
\begin_inset Formula $s\to1$
\end_inset

, 1 unit in 
\begin_inset Formula $1\to2$
\end_inset

, 2 units in 
\begin_inset Formula $1\to3$
\end_inset

, 1 unit in 
\begin_inset Formula $3\to2$
\end_inset

, 2 units in 
\begin_inset Formula $2\to t$
\end_inset

, 1 unit in 
\begin_inset Formula $3\to t$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status open

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
A way to find a feasible flow is to cast this problem as a maximum flow.
 Minimums will be called 
\emph on
demands
\emph default
 
\begin_inset Formula $d$
\end_inset

 (not consumed!) and maximums 
\emph on
capacity
\emph default
 
\begin_inset Formula $c$
\end_inset

.
 
\end_layout

\begin_layout Standard
The main difference with the previous exercise is that, previously, the
 zero flow was feasible: this is no more the case here.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_1_step0.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible bounded flow, initial.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Rewrite the graph 
\begin_inset Formula $G=\left(E,V\right)$
\end_inset

 as 
\begin_inset Formula $G^{\prime}=\left(E^{\prime},V^{\prime}\right)$
\end_inset

 with two new nodes: 
\begin_inset Formula $s^{\prime}$
\end_inset

 and 
\begin_inset Formula $t^{\prime}$
\end_inset

; these will be the source and sink for the maximum flow.
 This new graph will have capacities for each edge, but no demand.
 For each edge 
\begin_inset Formula $e=\left(u\to v\right)\in E$
\end_inset

, three edges will be generated in 
\begin_inset Formula $E^{\prime}$
\end_inset

: 
\end_layout

\begin_layout Itemize
An edge 
\begin_inset Formula $u\to v$
\end_inset

 with capacity 
\begin_inset Formula 
\[
c_{u\to v}^{\prime}=\underbrace{c_{u\to v}}_{\mathrm{max}}-\underbrace{d_{u\to v}}_{\mathrm{min}}.
\]

\end_inset


\end_layout

\begin_layout Itemize
An edge 
\begin_inset Formula $s^{\prime}\to v$
\end_inset

 with capacity 
\begin_inset Formula 
\[
c_{s^{\prime}\to v}^{\prime}=\sum_{w\in V}d_{w\to v}.
\]

\end_inset

Ensure the minimum required flow 
\series bold
to 
\series default

\begin_inset Formula $v$
\end_inset

.
 
\end_layout

\begin_layout Itemize
An edge 
\begin_inset Formula $u\to t^{\prime}$
\end_inset

 with capacity 
\begin_inset Formula 
\[
c_{u\to t^{\prime}}^{\prime}=\sum_{w\in V}d_{v\to w}.
\]

\end_inset

Ensure the minimum required flow 
\series bold
from 
\series default

\begin_inset Formula $v$
\end_inset

.
 
\end_layout

\begin_layout Standard
Also, to ensure the source 
\begin_inset Formula $s$
\end_inset

 has no limited capacity, 
\begin_inset Formula 
\[
c_{t\to s}^{\prime}=\infty.
\]

\end_inset


\end_layout

\begin_layout Standard
The edges from 
\begin_inset Formula $s^{\prime}$
\end_inset

 will ensure the minimum demands is reached for the nodes after the connected
 one; the edges to 
\begin_inset Formula $t^{\prime}$
\end_inset

 ensure the minimum demands are met.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_1_step1.pdf
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible bounded flow, graph transformation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
The total capacity out of 
\begin_inset Formula $s^{\prime}$
\end_inset

 and into 
\begin_inset Formula $t^{\prime}$
\end_inset

 is 
\begin_inset Formula 
\[
D=\sum_{e\in E}d_{e}.
\]

\end_inset

If the maximum flow for 
\begin_inset Formula $G^{\prime}$
\end_inset

 is 
\begin_inset Formula $D$
\end_inset

, then it is a 
\emph on
saturating flow
\emph default
, meaning that 
\begin_inset Formula $G$
\end_inset

 has a feasible flow.
 It is obtained by a maximum-flow algorithm.
 If the maximum flow through the transformed graph is not 
\begin_inset Formula $D$
\end_inset

, then there is no solution for the feasible flow problem.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_1_step2.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible bounded flow, maximum flow for graph transformation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
The actual feasible flow 
\begin_inset Formula $f_{e}$
\end_inset

 is obtained, from the maximum flow 
\begin_inset Formula $f_{e}^{\prime}$
\end_inset

, as: 
\begin_inset Formula 
\[
f_{e}=f_{e}^{\prime}+d_{e}.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_1_step3.pdf
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Feasible bounded flow, found flow.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Transformation into a maximum flow 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flows-Solve-feasible-flows-Transformation-2"

\end_inset


\end_layout

\begin_layout Standard
Consider the following directed graph.
 On each arc, we are given a lower and an upper bound on the ow that should
 traverse the arc.
\end_layout

\begin_layout Enumerate
Formulate the problem of finding a feasible flow in this graph as a maximum
 flow problem.
\end_layout

\begin_layout Enumerate
Apply a maximum flow algorithm in order to find a feasible flow.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_feasflow_asmaxflow_2_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Network for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-feasible-flows-Transformation-2"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Minimum cut 
\begin_inset CommandInset label
LatexCommand label
name "sec:Flows-Solve-minimum-cut"

\end_inset


\end_layout

\begin_layout Subsection
Minimum cut with maximum flows 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flows-Solve-minimum-cut-Max-flow-1"

\end_inset


\end_layout

\begin_layout Standard
In the following graph, apply a maximum flow algorithm of your choice to
 find a minimum 
\begin_inset Formula $(s,t)$
\end_inset

-cut.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_mincut_asmaxflow_1_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Network for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-minimum-cut-Max-flow-1"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A minimum 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-cut is 
\begin_inset Formula $S=\left\{ s\right\} $
\end_inset

 and 
\begin_inset Formula $T=\left\{ 1,2,3,4,t\right\} $
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Solution
\end_layout

\begin_layout Standard
Why is it possible to solve a min-cut problem with a max-flow algorithm?
 Due to the duality theorem: 
\end_layout

\begin_layout Quote
in a flow network, the maximum amount of flow passing from the source to
 the sink is equal to the total weight of the edges in the minimum cut
\end_layout

\begin_layout Standard
But there is a first large difference: the min-cut problems 
\emph on
are not directed
\emph default
.
 Hence, the first step is to create a directed version thereof, by duplicating
 each edge in each direction.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_mincut_asmaxflow_1_step1.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Directed network.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Then, we can compute the max-flow within this new graph.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_mincut_asmaxflow_1_step2.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Maximum flow.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
When this is done, the residual graph quite directly gives the minimum cut:
 start from 
\begin_inset Formula $s$
\end_inset

, add all nodes that are reachable from 
\begin_inset Formula $s$
\end_inset

 
\emph on
within the residual graph
\emph default
.
 Here, no node is reachable from 
\begin_inset Formula $s$
\end_inset

, hence: 
\begin_inset Formula 
\[
S=\left\{ s\right\} ,\qquad T=\left\{ 1,2,3,4,t\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_mincut_asmaxflow_1_step3.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Residual graph.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimum cut with maximum flows 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flows-Solve-minimum-cut-Max-flow-2"

\end_inset


\end_layout

\begin_layout Enumerate
In the following graph, determine a maximum flow from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset

 using one of the algorithms studied in this course.
 The values indicated near the edges are their capacities.
 
\end_layout

\begin_layout Enumerate
Prove that your solution is optimum by indicating a minimum 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-cut.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 9_solving_mincut_asmaxflow_1_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Network for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flows-Solve-minimum-cut-Max-flow-2"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Matching and assignment 
\begin_inset CommandInset label
LatexCommand label
name "chap:Matching-and-assignment"

\end_inset


\end_layout

\begin_layout Section
Matching 
\begin_inset CommandInset label
LatexCommand label
name "sec:Matching"

\end_inset


\end_layout

\begin_layout Subsection
Augmenting paths 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Matching-Augmenting-paths"

\end_inset


\end_layout

\begin_layout Enumerate
Find two augmenting paths for the matching 
\begin_inset Formula $M$
\end_inset

 shown below.
 
\end_layout

\begin_layout Enumerate
Derive the matching 
\begin_inset Formula $M^{\prime}$
\end_inset

 from 
\begin_inset Formula $M$
\end_inset

 using the augmentation procedure and the two augmenting paths.
 
\end_layout

\begin_layout Enumerate
Is the new matching 
\begin_inset Formula $M^{'}$
\end_inset

 optimal? Prove it using the notion of augmenting paths.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_augmenting_1.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graph for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Matching-Maximum-cardinality-bipartite"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Maximum cardinality matching for a bipartite graph 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Matching-Maximum-cardinality-bipartite"

\end_inset


\end_layout

\begin_layout Enumerate
Find a matching of 
\emph on
maximum
\emph default
 cardinality in the following bipartite graph.
\end_layout

\begin_layout Enumerate
How can you prove the matching has maximum cardinality? 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graph for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Matching-Maximum-cardinality-bipartite"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
A maximum matching is: 
\begin_inset Formula $1-9,\qquad2-8,\qquad3-7,\qquad5-11,\qquad6-12$
\end_inset

.
 It is optimal as there are no remaining augmenting paths.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection
Principles behind the algorithm
\end_layout

\begin_layout Standard
Principle of the algorithm: augmenting paths, once again.
 
\end_layout

\begin_layout Itemize

\series bold
Bipartite graph
\series default
 
\begin_inset Formula $G=\left(V_{1},V_{2},E\right)$
\end_inset

: two distinct sets of vertices 
\begin_inset Formula $V_{1}$
\end_inset

 and 
\begin_inset Formula $V_{2}$
\end_inset

, edges only from one set to the other, i.e.
 
\begin_inset Formula $E\subseteq V_{1}\times V_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Matching
\series default
 
\begin_inset Formula $M$
\end_inset

: represented as a subset of edges such that no two edges of 
\begin_inset Formula $M$
\end_inset

 are incident to the same node.
 Those edges are 
\series bold
matched
\series default
, the others are 
\series bold
unmatched
\series default
.
 
\end_layout

\begin_layout Itemize

\series bold
Alternating path 
\series default

\begin_inset Formula $p$
\end_inset

 with respect to the matching 
\begin_inset Formula $M$
\end_inset

: if every consecutive pair of edges in the path contains one matched and
 one unmatched edge.
 
\end_layout

\begin_layout Itemize

\series bold
Even
\series default
 alternating path: even number of edges; odd otherwise.
 
\end_layout

\begin_layout Itemize

\series bold
Augmenting path
\series default
 
\begin_inset Formula $p$
\end_inset

 with respect to the matching 
\begin_inset Formula $M$
\end_inset

: if 
\begin_inset Formula $p$
\end_inset

 is an odd alternating path with the first and last nodes unmatched.
 
\end_layout

\begin_layout Standard
Idea of the algorithm: from an initial matching (which can be empty: 
\begin_inset Formula $\emptyset$
\end_inset

; ideally, use a heuristic to speed up the process), find an augmenting
 path, interchange the matched and unmatched edges on this path: the cardinality
 has increased by one unit.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Remark
This augmentation can be formalised as the 
\emph on
symmetric difference
\emph default
 between two sets (the matching and the augmenting path), i.e.
 the set of elements that are members of one set but not both: 
\begin_inset Formula 
\[
S_{1}\oplus S_{2}=\left(S_{1}\cup S_{2}\right)\backslash\left(S_{1}\cap S_{2}\right).
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Algorithm
\end_layout

\begin_layout Standard
Input: a bipartite graph 
\begin_inset Formula $G=\left(V_{1},V_{2},E\right)$
\end_inset

, an initial matching 
\begin_inset Formula $M$
\end_inset

 (e.g., heuristic).
 The goal is to increment the cardinality of 
\begin_inset Formula $M$
\end_inset

.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Enumerate
Label 
\begin_inset Formula $\ast$
\end_inset

 all nodes of 
\begin_inset Formula $V_{1}$
\end_inset

 disjoint from 
\begin_inset Formula $M$
\end_inset

: candidates for starting point.
 
\end_layout

\begin_layout Enumerate
Pick a labelled node 
\begin_inset Formula $i$
\end_inset

 (either in 
\begin_inset Formula $V_{1}$
\end_inset

 or in 
\begin_inset Formula $V_{2}$
\end_inset

) that is not yet scanned and mark it as scanned.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
If in 
\begin_inset Formula $V_{1}$
\end_inset

, follow all edges with 
\begin_inset Formula $i$
\end_inset

 in 
\begin_inset Formula $E\backslash M$
\end_inset

: for each 
\begin_inset Formula $\left(i,j\right)\in E\backslash M$
\end_inset

, give 
\begin_inset Formula $j$
\end_inset

 the label 
\begin_inset Formula $i$
\end_inset

 
\emph on
if unlabelled
\emph default
.
 
\end_layout

\begin_layout Enumerate
If in 
\begin_inset Formula $V_{2}$
\end_inset

, follow one edge with 
\begin_inset Formula $i$
\end_inset

 in 
\begin_inset Formula $M$
\end_inset

: for the only 
\begin_inset Formula $\left(j,i\right)\in M$
\end_inset

, give the label 
\begin_inset Formula $j$
\end_inset

 to 
\begin_inset Formula $i$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Enumerate
When all nodes are scanned, find an augmenting path 
\begin_inset Formula $p$
\end_inset

 starting in 
\begin_inset Formula $V_{2}$
\end_inset

 (any point that is labelled 
\emph on
and not incident
\emph default
 to a matched node).
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Application
\end_layout

\begin_layout Standard
Start from a graph.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step0.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bipartite graph: initial graph.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph
Initial solution.
 
\end_layout

\begin_layout Standard
Find an initial heuristic solution (here: quite bad so there are still steps
 to perform; but still a heuristic so the first iterations are interesting!).
 Could start from an empty solution, but needs many iterations to find an
 optimal solution.
 
\begin_inset Formula 
\[
M=\left\{ \left(1,9\right),\left(2,11\right),\left(3,12\right)\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step1.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bipartite graph: (bad) heuristic solution.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph
First iteration.
 
\end_layout

\begin_layout Standard
Then apply the algorithm: scan one node, label one or more others; scan
 one node, label one or more others.
 
\end_layout

\begin_layout Itemize
Label 
\begin_inset Formula $\ast$
\end_inset

 nodes 
\begin_inset Formula $4$
\end_inset

, 
\begin_inset Formula $5$
\end_inset

, and 
\begin_inset Formula $6$
\end_inset

: not in 
\begin_inset Formula $M$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan those nodes one by one, all potential nodes in 
\begin_inset Formula $V_{2}$
\end_inset

 from them outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $9\,\left(4\right)$
\end_inset

, 
\begin_inset Formula $11\,\left(5\right)$
\end_inset

, 
\begin_inset Formula $12\,\left(6\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan the new nodes and find the previous one in 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $1\,\left(9\right)$
\end_inset

, 
\begin_inset Formula $2\,\left(11\right)$
\end_inset

, 
\begin_inset Formula $3\,\left(12\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan those new nodes and label all potential nodes n 
\begin_inset Formula $V_{2}$
\end_inset

 from them outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $7\,\left(3\right)$
\end_inset

, 
\begin_inset Formula $8\,\left(2\right)$
\end_inset

, 
\begin_inset Formula $9\,\left(1\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step2.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bipartite graph: first labelling.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Output: an augmenting path! Start from some node and reconstruct an augmenting
 path: 
\begin_inset Formula $7-3-12-6$
\end_inset

.
 Edge outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $7-3$
\end_inset

.
 Edge inside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $3-12$
\end_inset

.
 Edge outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $12-6$
\end_inset

.
 Reverse this.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step3.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bipartite graph: new solution after one iteration.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph
Second iteration.
 
\end_layout

\begin_layout Standard
Then apply the algorithm.
 
\end_layout

\begin_layout Itemize
Label 
\begin_inset Formula $\ast$
\end_inset

 nodes 
\begin_inset Formula $4$
\end_inset

 and 
\begin_inset Formula $5$
\end_inset

: not in 
\begin_inset Formula $M$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $9\,\left(4\right)$
\end_inset

, 
\begin_inset Formula $11\,\left(5\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan in 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $1\,\left(9\right)$
\end_inset

, 
\begin_inset Formula $2\,\left(11\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $8\,\left(2\right)$
\end_inset

, 
\begin_inset Formula $10\,\left(2\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan in 
\begin_inset Formula $M$
\end_inset

: nothing to do, no node in 
\begin_inset Formula $M$
\end_inset

.
 
\end_layout

\begin_layout Standard
Output: an augmenting path 
\begin_inset Formula $8-2-11-5$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_1_step4.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bipartite graph: new solution after two iterations.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph
Third iteration.
 
\end_layout

\begin_layout Standard
Then apply the algorithm.
 
\end_layout

\begin_layout Itemize
Label 
\begin_inset Formula $\ast$
\end_inset

 node 
\begin_inset Formula $4$
\end_inset

: not in 
\begin_inset Formula $M$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $9\,\left(4\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan in 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $1\,\left(9\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan outside 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $11\,\left(1\right)$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Scan in 
\begin_inset Formula $M$
\end_inset

: 
\begin_inset Formula $5\,\left(11\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard
No augmenting path! (Starts outside 
\begin_inset Formula $M$
\end_inset

.) Previous matching is optimal.
 
\begin_inset Formula 
\[
1-9,\qquad2-8,\qquad3-7,\qquad5-11,\qquad6-12.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Maximum cardinality matching for a bipartite graph 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Matching-Maximum-cardinality-bipartite-2"

\end_inset


\end_layout

\begin_layout Enumerate
Find a matching of maximum cardinality in the following bipartite graph.
 
\end_layout

\begin_layout Enumerate
Prove the matching is maximum.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_matching_maxcard_2_step0.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Graph for exercise 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Matching-Maximum-cardinality-bipartite"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Assignment 
\begin_inset CommandInset label
LatexCommand label
name "sec:Assignment"

\end_inset


\end_layout

\begin_layout Subsection
Assignment in complete graph
\end_layout

\begin_layout Standard
Find a maximal weight assignment in the complete graph where the edges have
 the following weights: 
\begin_inset Formula 
\[
\mathbf{C}=\left(\begin{array}{ccccc}
6 & 2 & 3 & 4 & 1\\
9 & 2 & 7 & 6 & 0\\
8 & 2 & 1 & 4 & 9\\
2 & 1 & 3 & 4 & 4\\
1 & 6 & 2 & 9 & 1
\end{array}\right).
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch solution
inverted 0
status open

\begin_layout Solution*
\begin_inset Formula 
\[
1-1',\qquad2-3',\qquad3-5',\qquad4-4',\qquad5-4'.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch TA
inverted 0
status collapsed

\begin_layout Subsubsection

\series bold
Principles behind the algorithm
\end_layout

\begin_layout Standard
Start from a primal-dual pair of programs.
 (With the coefficients, the matrix is totally unimodular: the linear program
 has directly an integer solution; treating it as a LP gives access to standard
 duality tools.) For a complete graph: 
\begin_inset Formula 
\[
\begin{array}{ccccc}
z & = & \max & \sum_{i=1}^{n}\sum_{j=1}^{n}c_{ij}\,x_{ij}\\
 &  & \mbox{s.t.} & \sum_{i=1}^{n}x_{ij}=1, & \forall j\in\left[1,n\right],\\
 &  &  & \sum_{j=1}^{n}x_{ij}=1, & \forall i\in\left[1,n\right],\\
 &  &  & 0\leq x_{ij}\leq1, & \forall\left(i,j\right)\in\left[1,n\right]^{2}.
\end{array}
\]

\end_inset


\begin_inset Formula 
\[
\begin{array}{ccccc}
w & = & \min & \sum_{i=1}^{n}u_{i}+\sum_{j=1}^{n}v_{j}\\
 &  & \mbox{s.t.} & u_{i}+v_{j}\geq c_{ij}, & \forall\left(i,j\right)\in\left[1,n\right]^{2}.
\end{array}
\]

\end_inset

The algorithm is based on the notion of modified costs: 
\begin_inset Formula 
\[
\overline{c}_{ij}=c_{ij}-u_{i}-v_{j},
\]

\end_inset

where the 
\begin_inset Formula $u_{i}$
\end_inset

 and 
\begin_inset Formula $v_{j}$
\end_inset

 are the dual variables.
 With this modification, the difference in value for 
\begin_inset Formula $z$
\end_inset

 when replacing 
\begin_inset Formula $c_{ij}$
\end_inset

 with 
\begin_inset Formula $\overline{c}_{ij}$
\end_inset

 is: 
\begin_inset Formula 
\[
\Delta z_{\mathbf{c\to\overline{c}}}=\sum_{i=1}^{n}u_{i}+\sum_{j=1}^{n}v_{j}.
\]

\end_inset

The constraint in the dual is now 
\begin_inset Formula $\overline{c}_{ij}\leq0$
\end_inset

.
 When the constraint is tight (
\begin_inset Formula $\overline{c}_{ij}=0$
\end_inset

), with the imposed dual variables, the dual objective becomes a sum of
 the weights for some edges: pick up the best matching to find the optimal
 solution with these dual variables.
 
\end_layout

\begin_layout Standard

\series bold
Idea of the algorithm
\series default
: keep a dual solution 
\begin_inset Formula $\left(\mathbf{u,v}\right)$
\end_inset

 feasible, i.e.
 such that 
\begin_inset Formula $\overline{c}_{ij}\leq0$
\end_inset

.
 Find an assignment for the subset of edges 
\begin_inset Formula 
\[
\overline{E}=\left\{ \left(i,j\right)\,\Big|\,\overline{c}_{ij}=0\right\} \subseteq E
\]

\end_inset

through a maximum cardinality matching on the bipartite graph 
\begin_inset Formula $\overline{G}=\left(V,V,\overline{E}\right)$
\end_inset

.
 If the matching is of cardinality 
\begin_inset Formula $n=\left|V\right|$
\end_inset

, then it is optimal; otherwise, change the dual variables.
 
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Algorithm
\end_layout

\begin_layout Standard
Input: a complete graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate

\emph on
Initialisation
\emph default
.
 Find values for 
\begin_inset Formula $u_{i}$
\end_inset

 and 
\begin_inset Formula $v_{j}$
\end_inset

, in order to get as many zeroes in 
\begin_inset Formula $\mathbf{\overline{c}}$
\end_inset

 and all coefficients negative (the signs are unconstrained!).
 Compute them as 
\begin_inset Formula 
\[
v_{j}=\max_{i}c_{ij},\qquad u_{i}=\max_{j}c_{ij}-v_{j}.
\]

\end_inset


\end_layout

\begin_layout Enumerate

\emph on
Primal step
\emph default
.
 Find a matching 
\begin_inset Formula $M$
\end_inset

 with the current 
\begin_inset Formula $\overline{E}$
\end_inset

.
 If its cardinality is 
\begin_inset Formula $n$
\end_inset

, then the algorithm is done and 
\begin_inset Formula $M$
\end_inset

 is the optimal assignment.
 Otherwise, the labelled nodes at termination are denoted 
\begin_inset Formula $V_{1}^{+}$
\end_inset

 and 
\begin_inset Formula $V_{2}^{+}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate

\emph on
Dual step
\emph default
.
 Update the dual variables as follows for the next iteration: 
\begin_inset Formula 
\[
\delta=\min_{\substack{i\in V_{1}^{+}\\
j\in V_{2}\backslash V_{2}^{+}
}
}-\overline{c}_{ij},
\]

\end_inset


\begin_inset Formula 
\[
u_{i}^{\left(n+1\right)}=u_{i}^{\left(n\right)}-\delta,\qquad\forall i\in V_{1}^{+},
\]

\end_inset


\begin_inset Formula 
\[
v_{j}^{\left(n+1\right)}=v_{j}^{\left(n\right)}+\delta,\qquad\forall j\in V_{2}^{+}.
\]

\end_inset


\end_layout

\begin_layout Remark
Actually, 
\series bold
any
\series default
 way of computing the 
\begin_inset Formula $\mathbf{u}$
\end_inset

 and 
\begin_inset Formula $\mathbf{v}$
\end_inset

 is correct, as long as 
\begin_inset Formula $\overline{c}_{ij}\leq0$
\end_inset

.
 Different starting points may lead to different solutions, but this is
 only a feasibility problem: many solutions exist, and all of them are acceptabl
e.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection

\series bold
Application
\end_layout

\begin_layout Standard
Start from these weights: 
\begin_inset Formula 
\[
\mathbf{c_{ij}}=\left(\begin{array}{ccccc}
6 & 2 & 3 & 4 & 1\\
9 & 2 & 7 & 6 & 0\\
8 & 2 & 1 & 4 & 9\\
2 & 1 & 3 & 4 & 4\\
1 & 6 & 2 & 9 & 1
\end{array}\right).
\]

\end_inset

Compute the first 
\begin_inset Formula $v_{j}$
\end_inset

: 
\begin_inset Formula 
\[
\mathbf{v}=\left(9,6,7,9,9\right).
\]

\end_inset

The modified matrix is not yet 
\begin_inset Formula $\mathbf{\overline{c}}$
\end_inset

, but closer: 
\begin_inset Formula 
\[
\mathbf{c_{ij}}-\mathbf{v_{j}}=\left(\begin{array}{ccccc}
-3 & -4 & -4 & -5 & -8\\
0 & -4 & 0 & -3 & -9\\
-1 & -4 & -6 & -5 & 0\\
-7 & -5 & -4 & -5 & -5\\
-8 & 0 & -5 & 0 & -8
\end{array}\right).
\]

\end_inset

Choose the 
\begin_inset Formula $u_{i}$
\end_inset

 to bring more zeroes into the matrix: 
\begin_inset Formula 
\[
\mathbf{u}=\left(-3,0,0,-4,0\right).
\]

\end_inset

The modified costs 
\begin_inset Formula $\mathbf{\overline{c}}$
\end_inset

 are then: 
\begin_inset Formula 
\[
\mathbf{\overline{c}_{ij}}=\mathbf{c_{ij}}-\mathbf{u_{i}}-\mathbf{v_{j}}=\left(\begin{array}{ccccc}
0 & -1 & -1 & -2 & -3\\
0 & -4 & 0 & -3 & -9\\
-1 & -4 & -6 & -5 & 0\\
-3 & -1 & 0 & -1 & -1\\
-8 & 0 & -5 & 0 & -8
\end{array}\right).
\]

\end_inset

Current dual objective value: 
\begin_inset Formula 
\[
w^{\left(1\right)}=9+6+7+9+9-3-4=33.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph

\series bold
First iteration.
\end_layout

\begin_layout Standard
Find a matching with 
\begin_inset Formula $\overline{E}$
\end_inset

.
 Existing edges are taken from zeroes in 
\begin_inset Formula $\mathbf{\overline{c}_{ij}}$
\end_inset

.
 Start from a very good heuristic solution, and prove its optimality to
 get the 
\begin_inset Formula $V_{1}^{+}$
\end_inset

 (lines) and 
\begin_inset Formula $V_{2}^{+}$
\end_inset

 (columns) sets.
 
\begin_inset Formula 
\[
V_{1}^{+}=\left\{ 1,2,4\right\} ,\qquad V_{2}^{+}=\left\{ 1^{\prime},3^{\prime}\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_assignment_primdual_1_step1.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Weighted assignment: first matching.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
What coefficients of 
\begin_inset Formula $\mathbf{\overline{c}_{ij}}$
\end_inset

 will be considered to compute 
\begin_inset Formula $\delta$
\end_inset

? 
\begin_inset Formula $V_{1}^{+}$
\end_inset

 and 
\begin_inset Formula $V_{2}^{-}$
\end_inset

: 
\begin_inset Formula 
\[
\mathbf{\overline{c}_{ij}}=\underbrace{\left(\begin{array}{ccccc}
\boxed{0} & \boxed{-1} & \boxed{-1} & \boxed{-2} & \boxed{-3}\\
\boxed{0} & \boxed{-4} & \boxed{0} & \boxed{-3} & \boxed{-9}\\
-1 & \boxed{-4} & -6 & \boxed{-5} & \boxed{0}\\
\boxed{-3} & \boxed{-1} & \boxed{0} & \boxed{-1} & \boxed{-1}\\
-8 & \boxed{0} & -5 & \boxed{0} & \boxed{-8}
\end{array}\right)}_{V_{2}^{-}}\quad\Bigg\} V_{1}^{+}.
\]

\end_inset

Hence: 
\begin_inset Formula 
\[
\delta=\min_{\substack{i\in V_{1}^{+}\\
j\in V_{2}\backslash V_{2}^{+}
}
}-\overline{c}_{ij}=1
\]

\end_inset


\end_layout

\begin_layout Standard
Update the dual variables: 
\begin_inset Formula $u_{i}^{\left(n+1\right)}=u_{i}^{\left(n\right)}-\delta$
\end_inset

 for 
\begin_inset Formula $i\in V_{1}^{+}$
\end_inset

; 
\begin_inset Formula $v_{j}^{\left(n+1\right)}=v_{j}^{\left(n\right)}+\delta$
\end_inset

 for 
\begin_inset Formula $j\in V_{2}^{\boxed{+}}$
\end_inset

 (to compute 
\begin_inset Formula $\delta$
\end_inset

, it was 
\begin_inset Formula $V_{2}^{-}$
\end_inset

).
 Hence, for the elements at the intersection of 
\begin_inset Formula $V_{1}^{+}$
\end_inset

 and 
\begin_inset Formula $V_{2}^{+}$
\end_inset

, no change.
\begin_inset Formula 
\[
\mathbf{u}=\left(-3-1,0-1,0,-4-1,0\right)=\left(-4,-1,0,-5,0\right).
\]

\end_inset


\begin_inset Formula 
\[
\mathbf{v}=\left(9+1,6,7+1,9,9\right)=\left(10,6,8,9,9\right).
\]

\end_inset

The matrix is now much sparser than before: 
\begin_inset Formula 
\[
\mathbf{\overline{c}_{ij}}=\left(\begin{array}{ccccc}
0 & 0 & -1 & -1 & -4\\
0 & -4 & 0 & -2 & -8\\
-2 & -4 & -7 & -5 & 0\\
-3 & 0 & 0 & 0 & 0\\
-9 & 0 & -6 & 0 & -8
\end{array}\right).
\]

\end_inset

The dual objective value is then: 
\begin_inset Formula 
\[
w^{\left(2\right)}=-4-1-5+10+6+8+9+9=32.
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph

\series bold
Second iteration.
\end_layout

\begin_layout Standard
Find a matching with 
\begin_inset Formula $\overline{E}$
\end_inset

.
 Start from a very good heuristic solution.
 It is optimal with five matchings: the problem is solved to optimality!
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10_solving_assignment_primdual_1_step2.pdf
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Weighted assignment: first matching.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph

\series bold
Build the solution.
\end_layout

\begin_layout Standard
The following edges are taken in the matching: 
\begin_inset Formula 
\[
1-1',\qquad2-3',\qquad3-5',\qquad4-4',\qquad5-4'.
\]

\end_inset

The solution is then: 
\begin_inset Formula 
\[
\mathbf{x}=\begin{pmatrix}1\\
 &  & 1\\
 &  &  &  & 1\\
 &  &  & 1\\
 & 1
\end{pmatrix},
\]

\end_inset

which respects the constraints.
 Taking those edges has the same objective value as the dual: 
\begin_inset Formula 
\[
z^{*}=6+7+9+1+9=32=w^{\left(2\right)}.
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Inequality assignment
\end_layout

\begin_layout Standard
We want to solve the following (inequality) assignment problem:
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i=1}^{n}\sum_{j=1}^{n}c_{ij}\,x_{ij}\\
\text{s.t.} & \sum_{i=1}^{n}x_{ij}\leq1, & \forall j\in\left[1,n\right],\\
 & \sum_{j=1}^{n}x_{ij}\leq1, & \forall i\in\left[1,n\right],\\
 & x_{ij}\in\mathcal{B}, & \forall j\in\left[1,n\right],\forall i\in\left[1,n\right],
\end{array}
\]

\end_inset

where the costs 
\begin_inset Formula $c_{ij}$
\end_inset

 are given by the following matrix: 
\begin_inset Formula 
\[
\mathbf{C}=\begin{pmatrix}4 & -2 & -2 & -1\\
7 & 2 & 1 & -3\\
2 & 3 & 0 & 1\\
5 & 3 & 3 & -1
\end{pmatrix}.
\]

\end_inset


\end_layout

\begin_layout Enumerate
Solve the problem with all inequality constraints replaced by equality constrain
ts, i.e.
 the following problem: 
\begin_inset Formula 
\[
\begin{array}{ccc}
\max & \sum_{i=1}^{n}\sum_{j=1}^{n}c_{ij}\,x_{ij}\\
\text{s.t.} & \sum_{i=1}^{n}x_{ij}=1, & \forall j\in\left[1,n\right],\\
 & \sum_{j=1}^{n}x_{ij}=1, & \forall i\in\left[1,n\right],\\
 & x_{ij}\in\mathcal{B}, & \forall j\in\left[1,n\right],\forall i\in\left[1,n\right].
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate
Adapt the solution found to find another solution to the main problem that
 
\emph on
increases
\emph default
 the objective function.
 
\end_layout

\end_body
\end_document
